{
  "contractName": "MockVotingToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pxt",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "contract IPopulousGovernanceV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pxtToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPXT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "enum MockVotingToken.DelegationType",
          "name": "delegationType",
          "type": "uint8"
        }
      ],
      "name": "getPowerAtBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pxt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPXT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum MockVotingToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"contract IPopulousGovernanceV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pxtToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements ERC20 minting logic\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MockVotingToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol\":\"MockVotingToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol\":{\"keccak256\":\"0xe0c517bf9078a763269f3e8f1ec0940788692163491aab614641d4c34c22e6d5\",\"urls\":[\"bzz-raw://2003d8c68c16a6cb1b42c3a746ced842112a19714460cfb94e51395a214d7edd\",\"dweb:/ipfs/QmQ2fAeqfpahSEiySGT8GMkB9viLvpSb8U1mA7xAgdvfEW\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol\":{\"keccak256\":\"0xcd61e2036d3a9c0e0a46fda84846c1e651e4ab01d5c177fdca1b2d1f5141ae98\",\"urls\":[\"bzz-raw://b75bda1458e0ea3d010593498217157c8d27f692da8351d64e2c4cad6bb02814\",\"dweb:/ipfs/QmSPVbXumcY5m8HozruUGiA3GxwAZUQDrRVYzme8ah4cMu\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Context.sol\":{\"keccak256\":\"0x1184b768b1e5b8e13eb4a589c3b14c2bf6e04e9d061012c6c772a9830272a1f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be5034806781ef4986f7edd2ff2fe8dead05c2aeee627f55a4a68cfe21d43479\",\"dweb:/ipfs/QmQ5QNcLBdQSPRQSmxmNvBf6r2pS1AbNPPoEWw3Q2WHRmN\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Ownable.sol\":{\"keccak256\":\"0xc347ba87002f53e62bcd62fdd61c620ea2b6f783a247679a12ed549a139993f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55fcc338ef316bfea381ba91564acd7ba677175076b59db95474778be7e00ae3\",\"dweb:/ipfs/QmTN9WP9wwAhpxnupRH4M5P7vPut37PGGVR9tMwSfiAEza\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IExecutorWithTimelock.sol\":{\"keccak256\":\"0xe27ae25a8abbeaf73dafda3cf0917a32ba43b3d81bd96515eb8ecf1885e62661\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://853b9bfaff76bf4f22a1e63025340c9931734a2c8120658ed9eaf92fa1651483\",\"dweb:/ipfs/Qmcx4UjPCZTwoHWh3AMeWj43U5Br8FVBn4DFg2zqpoKuX7\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol\":{\"keccak256\":\"0x9abedeacf8546d2ecc6286d815bf232c59acacc24c3314a65b3c23885278f332\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://66815e35f4140a4929237ebb1285e5cab7df38f707eafb1853df417548aa6e60\",\"dweb:/ipfs/Qmba7wctr5qjUaXK3evf3yfn6yVaW7XT6p8xQrBsLGtEDw\"]}},\"version\":1}",
  "bytecode": "0x600860065560c0604052600260808190526111d560f21b60a09081526200002a916007919062000158565b5060408051808201909152601a8082527f506f70756c6f757320476f7665726e616e636520546f6b656e730000000000006020909201918252620000719160089162000158565b503480156200007f57600080fd5b506040516200188d3803806200188d833981016040819052620000a29162000204565b6000620000ae62000154565b600380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0381166200012e5760405162461bcd60e51b8152600401620001259062000234565b60405180910390fd5b600480546001600160a01b0319166001600160a01b039290921691909117905562000278565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001905760008555620001db565b82601f10620001ab57805160ff1916838001178555620001db565b82800160010185558215620001db579182015b82811115620001db578251825591602001919060010190620001be565b50620001e9929150620001ed565b5090565b5b80821115620001e95760008155600101620001ee565b60006020828403121562000216578081fd5b81516001600160a01b03811681146200022d578182fd5b9392505050565b60208082526024908201527f4d6f636b566f74696e67546f6b656e3a20496e76616c696420707874206164646040820152637265737360e01b606082015260800190565b61160580620002886000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638f10b2e0116100b8578063be040fb01161007c578063be040fb014610248578063c2ffbb9114610250578063cfad57a214610263578063d0e30db014610276578063dd62ed3e1461027e578063f2fde38b1461029157610142565b80638f10b2e01461020a57806395d89b4114610212578063a2ab2dee1461021a578063a457c2d714610222578063a9059cbb1461023557610142565b8063313ce5671161010a578063313ce567146101c257806339509351146101ca5780635aa6e675146101dd57806370a08231146101e5578063715018a6146101f85780638da5cb5b1461020257610142565b806306fdde0314610147578063095ea7b3146101655780630e3443761461018557806318160ddd1461019a57806323b872dd146101af575b600080fd5b61014f6102a4565b60405161015c91906112be565b60405180910390f35b610178610173366004611145565b610332565b60405161015c91906112b3565b61018d610348565b60405161015c9190611262565b6101a2610357565b60405161015c91906114da565b6101786101bd36600461110a565b61035d565b6101a26103ae565b6101786101d8366004611145565b6103b4565b61018d6103ea565b6101a26101f33660046110be565b6103f9565b610200610418565b005b61018d6104cc565b61018d6104db565b61014f6104ea565b61018d610545565b610178610230366004611145565b610554565b610178610243366004611145565b61058a565b610200610597565b6101a261025e36600461116e565b610849565b6102006102713660046110be565b61085c565b61020061090e565b6101a261028c3660046110d8565b610acc565b61020061029f3660046110be565b610af7565b6008805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b505050505081565b600061033f338484610c02565b50600192915050565b6004546001600160a01b031681565b60025490565b600061036a848484610cee565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103a491869161039f9086610e24565b610c02565b5060019392505050565b60065481565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161033f91859061039f9086610e81565b6005546001600160a01b031681565b6001600160a01b0381166000908152602081905260409020545b919050565b610420610ee2565b6003546001600160a01b03908116911614610482576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6003546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380546001600160a01b0319169055565b6003546001600160a01b031690565b6004546001600160a01b031690565b6007805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561032a5780601f106102ff5761010080835404028352916020019161032a565b6005546001600160a01b031690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161033f91859061039f9086610e24565b600061033f338484610cee565b60006105a2336103f9565b90506105ae3382610ee6565b60005b600560009054906101000a90046001600160a01b03166001600160a01b03166398e527d36040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ff57600080fd5b505afa158015610613573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610637919061124a565b8110156107a157600554604051639080936f60e01b81526000916001600160a01b031690639080936f9061066f9085906004016114da565b60206040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf91906111ca565b60078111156106ca57fe5b600554604051634185ff8360e01b81529192506000916001600160a01b0390911690634185ff839061070290869033906004016114e3565b604080518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075191906111e9565b602001516001600160f81b031611156107985780151580610773575080600214155b6107985760405162461bcd60e51b815260040161078f90611395565b60405180910390fd5b506001016105b1565b506004805460405163a9059cbb60e01b81526001600160a01b039091169163a9059cbb916107d391339186910161129a565b602060405180830381600087803b1580156107ed57600080fd5b505af1158015610801573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082591906111b0565b15156001146108465760405162461bcd60e51b815260040161078f90611360565b50565b6000610854846103f9565b949350505050565b610864610ee2565b6003546001600160a01b039081169116146108c6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108ec5760405162461bcd60e51b815260040161078f906113ff565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a082319161094091339101611262565b60206040518083038186803b15801561095857600080fd5b505afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610990919061124a565b9050600081116109b25760405162461bcd60e51b815260040161078f9061148e565b6109bb336103f9565b156109d85760405162461bcd60e51b815260040161078f90611311565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd91610a0b9133913091879101611276565b602060405180830381600087803b158015610a2557600080fd5b505af1158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d91906111b0565b1515600114610a7e5760405162461bcd60e51b815260040161078f9061144a565b610a883382610fb3565b336001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610ac191906114da565b60405180910390a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610aff610ee2565b6003546001600160a01b03908116911614610b61576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610ba65760405162461bcd60e51b815260040180806020018281038252602681526020018061151e6026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610c475760405162461bcd60e51b81526004018080602001828103825260248152602001806115ac6024913960400191505060405180910390fd5b6001600160a01b038216610c8c5760405162461bcd60e51b81526004018080602001828103825260228152602001806115446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610d335760405162461bcd60e51b81526004018080602001828103825260258152602001806115876025913960400191505060405180910390fd5b6001600160a01b038216610d785760405162461bcd60e51b81526004018080602001828103825260238152602001806114fb6023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054610d9b9082610e24565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610dca9082610e81565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610e7b576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610edb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b038216610f2b5760405162461bcd60e51b81526004018080602001828103825260218152602001806115666021913960400191505060405180910390fd5b600254610f389082610e24565b6002556001600160a01b038216600090815260208190526040902054610f5e9082610e24565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b03821661100e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025461101b9082610e81565b6002556001600160a01b0382166000908152602081905260409020546110419082610e81565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b80356001600160a01b038116811461041357600080fd5b8051801515811461041357600080fd5b6000602082840312156110cf578081fd5b610edb82611097565b600080604083850312156110ea578081fd5b6110f383611097565b915061110160208401611097565b90509250929050565b60008060006060848603121561111e578081fd5b61112784611097565b925061113560208501611097565b9150604084013590509250925092565b60008060408385031215611157578182fd5b61116083611097565b946020939093013593505050565b600080600060608486031215611182578283fd5b61118b84611097565b9250602084013591506040840135600281106111a5578182fd5b809150509250925092565b6000602082840312156111c1578081fd5b610edb826110ae565b6000602082840312156111db578081fd5b815160088110610edb578182fd5b6000604082840312156111fa578081fd5b6040516040810181811067ffffffffffffffff8211171561121757fe5b604052611223836110ae565b815260208301516001600160f81b038116811461123e578283fd5b60208201529392505050565b60006020828403121561125b578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b818110156112ea578581018301518582016040015282016112ce565b818111156112fb5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602f908201527f4d6f636b566f74696e67546f6b656e3a20566f74696e6720746f6b656e20626160408201526e06c616e6365206d757374206265203608c1b606082015260800190565b6020808252818101527f4d6f636b566f74696e67546f6b656e3a205472616e73666572206661696c6564604082015260600190565b60208082526044908201527f4d6f636b566f74696e67546f6b656e3a20557365722063616e6e6f742068617660408201527f6520766f7465206f6e2070656e64696e67206f72206163746976652070726f706060820152631bdcd85b60e21b608082015260a00190565b6020808252602b908201527f4d6f636b566f74696e67546f6b656e3a20496e76616c696420676f7665726e6160408201526a6e6365206164647265737360a81b606082015260800190565b60208082526024908201527f4d6f636b566f74696e67546f6b656e3a205472616e7366657246726f6d2066616040820152631a5b195960e21b606082015260800190565b6020808252602c908201527f4d6f636b566f74696e67546f6b656e3a205058542062616c616e6365206d757360408201526b0742062652061626f766520360a41b606082015260800190565b90815260200190565b9182526001600160a01b031660208201526040019056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a264697066735822122095d3f002b7f7b74411395b611d0cbfe02e6b1744119270821537853156ecaa0264736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c80638f10b2e0116100b8578063be040fb01161007c578063be040fb014610248578063c2ffbb9114610250578063cfad57a214610263578063d0e30db014610276578063dd62ed3e1461027e578063f2fde38b1461029157610142565b80638f10b2e01461020a57806395d89b4114610212578063a2ab2dee1461021a578063a457c2d714610222578063a9059cbb1461023557610142565b8063313ce5671161010a578063313ce567146101c257806339509351146101ca5780635aa6e675146101dd57806370a08231146101e5578063715018a6146101f85780638da5cb5b1461020257610142565b806306fdde0314610147578063095ea7b3146101655780630e3443761461018557806318160ddd1461019a57806323b872dd146101af575b600080fd5b61014f6102a4565b60405161015c91906112be565b60405180910390f35b610178610173366004611145565b610332565b60405161015c91906112b3565b61018d610348565b60405161015c9190611262565b6101a2610357565b60405161015c91906114da565b6101786101bd36600461110a565b61035d565b6101a26103ae565b6101786101d8366004611145565b6103b4565b61018d6103ea565b6101a26101f33660046110be565b6103f9565b610200610418565b005b61018d6104cc565b61018d6104db565b61014f6104ea565b61018d610545565b610178610230366004611145565b610554565b610178610243366004611145565b61058a565b610200610597565b6101a261025e36600461116e565b610849565b6102006102713660046110be565b61085c565b61020061090e565b6101a261028c3660046110d8565b610acc565b61020061029f3660046110be565b610af7565b6008805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b505050505081565b600061033f338484610c02565b50600192915050565b6004546001600160a01b031681565b60025490565b600061036a848484610cee565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103a491869161039f9086610e24565b610c02565b5060019392505050565b60065481565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161033f91859061039f9086610e81565b6005546001600160a01b031681565b6001600160a01b0381166000908152602081905260409020545b919050565b610420610ee2565b6003546001600160a01b03908116911614610482576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6003546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380546001600160a01b0319169055565b6003546001600160a01b031690565b6004546001600160a01b031690565b6007805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561032a5780601f106102ff5761010080835404028352916020019161032a565b6005546001600160a01b031690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161033f91859061039f9086610e24565b600061033f338484610cee565b60006105a2336103f9565b90506105ae3382610ee6565b60005b600560009054906101000a90046001600160a01b03166001600160a01b03166398e527d36040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ff57600080fd5b505afa158015610613573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610637919061124a565b8110156107a157600554604051639080936f60e01b81526000916001600160a01b031690639080936f9061066f9085906004016114da565b60206040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf91906111ca565b60078111156106ca57fe5b600554604051634185ff8360e01b81529192506000916001600160a01b0390911690634185ff839061070290869033906004016114e3565b604080518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075191906111e9565b602001516001600160f81b031611156107985780151580610773575080600214155b6107985760405162461bcd60e51b815260040161078f90611395565b60405180910390fd5b506001016105b1565b506004805460405163a9059cbb60e01b81526001600160a01b039091169163a9059cbb916107d391339186910161129a565b602060405180830381600087803b1580156107ed57600080fd5b505af1158015610801573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082591906111b0565b15156001146108465760405162461bcd60e51b815260040161078f90611360565b50565b6000610854846103f9565b949350505050565b610864610ee2565b6003546001600160a01b039081169116146108c6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108ec5760405162461bcd60e51b815260040161078f906113ff565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a082319161094091339101611262565b60206040518083038186803b15801561095857600080fd5b505afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610990919061124a565b9050600081116109b25760405162461bcd60e51b815260040161078f9061148e565b6109bb336103f9565b156109d85760405162461bcd60e51b815260040161078f90611311565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd91610a0b9133913091879101611276565b602060405180830381600087803b158015610a2557600080fd5b505af1158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d91906111b0565b1515600114610a7e5760405162461bcd60e51b815260040161078f9061144a565b610a883382610fb3565b336001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610ac191906114da565b60405180910390a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610aff610ee2565b6003546001600160a01b03908116911614610b61576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610ba65760405162461bcd60e51b815260040180806020018281038252602681526020018061151e6026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610c475760405162461bcd60e51b81526004018080602001828103825260248152602001806115ac6024913960400191505060405180910390fd5b6001600160a01b038216610c8c5760405162461bcd60e51b81526004018080602001828103825260228152602001806115446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610d335760405162461bcd60e51b81526004018080602001828103825260258152602001806115876025913960400191505060405180910390fd5b6001600160a01b038216610d785760405162461bcd60e51b81526004018080602001828103825260238152602001806114fb6023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054610d9b9082610e24565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610dca9082610e81565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610e7b576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610edb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b038216610f2b5760405162461bcd60e51b81526004018080602001828103825260218152602001806115666021913960400191505060405180910390fd5b600254610f389082610e24565b6002556001600160a01b038216600090815260208190526040902054610f5e9082610e24565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b03821661100e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025461101b9082610e81565b6002556001600160a01b0382166000908152602081905260409020546110419082610e81565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b80356001600160a01b038116811461041357600080fd5b8051801515811461041357600080fd5b6000602082840312156110cf578081fd5b610edb82611097565b600080604083850312156110ea578081fd5b6110f383611097565b915061110160208401611097565b90509250929050565b60008060006060848603121561111e578081fd5b61112784611097565b925061113560208501611097565b9150604084013590509250925092565b60008060408385031215611157578182fd5b61116083611097565b946020939093013593505050565b600080600060608486031215611182578283fd5b61118b84611097565b9250602084013591506040840135600281106111a5578182fd5b809150509250925092565b6000602082840312156111c1578081fd5b610edb826110ae565b6000602082840312156111db578081fd5b815160088110610edb578182fd5b6000604082840312156111fa578081fd5b6040516040810181811067ffffffffffffffff8211171561121757fe5b604052611223836110ae565b815260208301516001600160f81b038116811461123e578283fd5b60208201529392505050565b60006020828403121561125b578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b818110156112ea578581018301518582016040015282016112ce565b818111156112fb5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602f908201527f4d6f636b566f74696e67546f6b656e3a20566f74696e6720746f6b656e20626160408201526e06c616e6365206d757374206265203608c1b606082015260800190565b6020808252818101527f4d6f636b566f74696e67546f6b656e3a205472616e73666572206661696c6564604082015260600190565b60208082526044908201527f4d6f636b566f74696e67546f6b656e3a20557365722063616e6e6f742068617660408201527f6520766f7465206f6e2070656e64696e67206f72206163746976652070726f706060820152631bdcd85b60e21b608082015260a00190565b6020808252602b908201527f4d6f636b566f74696e67546f6b656e3a20496e76616c696420676f7665726e6160408201526a6e6365206164647265737360a81b606082015260800190565b60208082526024908201527f4d6f636b566f74696e67546f6b656e3a205472616e7366657246726f6d2066616040820152631a5b195960e21b606082015260800190565b6020808252602c908201527f4d6f636b566f74696e67546f6b656e3a205058542062616c616e6365206d757360408201526b0742062652061626f766520360a41b606082015260800190565b90815260200190565b9182526001600160a01b031660208201526040019056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a264697066735822122095d3f002b7f7b74411395b611d0cbfe02e6b1744119270821537853156ecaa0264736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:731:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:58",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:58",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:58"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:58"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:58",
                "type": ""
              }
            ],
            "src": "14:310:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:226:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:58",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:34:58",
                        "type": "",
                        "value": "MockVotingToken: Invalid pxt add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "664:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "675:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "660:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "660:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "680:6:58",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "653:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:34:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "696:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "708:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "719:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "704:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "696:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:58",
                "type": ""
              }
            ],
            "src": "329:400:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"MockVotingToken: Invalid pxt add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8580:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:58"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:58"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:58",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:58",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:58"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:58"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:58"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:58",
                "type": ""
              }
            ],
            "src": "14:175:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "253:107:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "263:22:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "278:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "272:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "272:13:58"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "263:5:58"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "307:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "328:5:58"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "321:6:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "321:13:58"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "314:6:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "314:21:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "304:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "304:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "297:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "297:40:58"
                  },
                  "nodeType": "YulIf",
                  "src": "294:2:58"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "232:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "243:5:58",
                "type": ""
              }
            ],
            "src": "194:166:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "435:128:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "481:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "490:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "498:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "483:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "483:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "483:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "456:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "465:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "452:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "452:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "477:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "448:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "448:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "445:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "516:41:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "547:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "526:20:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:31:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "401:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "412:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "424:6:58",
                "type": ""
              }
            ],
            "src": "365:198:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "655:187:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "701:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "710:6:58"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "718:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "703:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "703:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "703:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "676:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "685:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "736:41:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "767:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "746:20:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:31:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "736:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "786:50:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "821:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "832:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "817:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "817:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:20:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:40:58"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "786:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "613:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "624:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "636:6:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "644:6:58",
                "type": ""
              }
            ],
            "src": "568:274:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "951:238:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "997:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1006:6:58"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1014:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "999:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "999:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "999:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "972:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "981:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "968:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "968:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "993:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "964:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "961:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1032:41:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1063:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1042:20:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1042:31:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1032:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1082:50:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1117:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1128:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1113:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1113:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1092:20:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:40:58"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1082:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1141:42:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1168:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1179:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1164:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1164:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1151:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:32:58"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1141:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:58",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "940:6:58",
                "type": ""
              }
            ],
            "src": "847:342:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1281:179:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1327:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1336:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1344:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1329:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1329:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1329:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1302:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1298:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1298:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1323:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1294:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1294:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "1291:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1362:41:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1393:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1372:20:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1372:31:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1362:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1412:42:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1439:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1450:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1435:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1435:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1422:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1422:32:58"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1412:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1239:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1250:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1262:6:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1270:6:58",
                "type": ""
              }
            ],
            "src": "1194:266:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1587:316:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1633:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1642:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1650:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1635:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1635:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1635:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1608:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1617:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1604:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1604:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1629:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1600:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1600:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "1597:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1668:41:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1699:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1678:20:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:31:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1668:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1718:42:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1745:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1756:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1741:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1741:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1728:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1728:32:58"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1718:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1769:45:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1799:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1810:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1795:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1795:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1782:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:32:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1773:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1847:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1856:6:58"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1864:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1849:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1849:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1849:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1836:5:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:1:58",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1833:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1833:12:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1826:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:20:58"
                  },
                  "nodeType": "YulIf",
                  "src": "1823:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1882:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1892:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1882:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_enum$_DelegationType_$791",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1537:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1548:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1560:6:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1568:6:58",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1576:6:58",
                "type": ""
              }
            ],
            "src": "1465:438:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1986:136:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2032:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2041:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2049:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2034:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2034:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2034:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2007:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2016:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2003:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2028:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1999:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1999:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "1996:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2067:49:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2106:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bool_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2077:28:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2077:39:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2067:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1952:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1963:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1975:6:58",
                "type": ""
              }
            ],
            "src": "1908:214:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2226:199:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2272:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2281:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2289:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2274:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2274:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2274:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2247:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2256:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2243:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2243:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2268:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2239:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "2236:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2307:29:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2326:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2320:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2320:16:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2311:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2369:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2378:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2386:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2371:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2371:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2371:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2358:5:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2365:1:58",
                            "type": "",
                            "value": "8"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2355:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2355:12:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2348:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:20:58"
                  },
                  "nodeType": "YulIf",
                  "src": "2345:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2404:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2414:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2404:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_ProposalState_$8992_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2192:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2203:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2215:6:58",
                "type": ""
              }
            ],
            "src": "2127:298:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2533:535:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2579:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2588:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2596:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2581:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2581:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2581:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2554:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2563:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2550:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2550:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2575:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2546:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "2543:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2614:23:58",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2634:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2628:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2628:9:58"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2618:6:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2646:33:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2668:6:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2676:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2664:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:15:58"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2650:10:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2754:13:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "2756:7:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2756:9:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2756:9:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2697:10:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2709:18:58",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2694:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:34:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2733:10:58"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2745:6:58"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2730:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2730:22:58"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2691:2:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2691:62:58"
                  },
                  "nodeType": "YulIf",
                  "src": "2688:2:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2783:2:58",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2787:10:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2776:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2776:22:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2776:22:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2814:6:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2851:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2822:28:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2822:39:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2807:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2807:55:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2807:55:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2871:38:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2894:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2905:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2890:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2890:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2884:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2884:25:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2875:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2972:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2981:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2989:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2974:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2974:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2974:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2931:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2942:5:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2957:3:58",
                                        "type": "",
                                        "value": "248"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2962:1:58",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2953:3:58"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2953:11:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2966:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2949:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2949:19:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2938:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2938:31:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2928:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2928:42:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2921:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2921:50:58"
                  },
                  "nodeType": "YulIf",
                  "src": "2918:2:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3018:6:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3026:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3014:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:15:58"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3031:5:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3007:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3007:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3007:30:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3046:16:58",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3056:6:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3046:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Vote_$8997_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2499:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2510:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2522:6:58",
                "type": ""
              }
            ],
            "src": "2430:638:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3154:113:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3200:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3209:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3217:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3202:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3202:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3202:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3175:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3184:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3171:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3171:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3196:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3167:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3167:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "3164:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3235:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3251:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3245:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3245:16:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3235:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3120:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3131:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3143:6:58",
                "type": ""
              }
            ],
            "src": "3073:194:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3373:102:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3383:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3395:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3406:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3391:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3391:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3383:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3425:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3440:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3456:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3461:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3452:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3452:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3465:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3448:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3448:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3436:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3436:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3418:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3418:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3418:51:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3353:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3364:4:58",
                "type": ""
              }
            ],
            "src": "3272:203:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3589:102:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3599:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3611:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3622:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3607:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3607:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3599:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3641:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3656:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3672:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3677:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3668:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3668:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3681:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3664:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3664:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3652:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3652:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3634:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3634:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3634:51:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3558:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3569:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3580:4:58",
                "type": ""
              }
            ],
            "src": "3480:211:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3861:218:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3871:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3883:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3894:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3879:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3879:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3871:4:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3906:29:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3924:3:58",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3929:1:58",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3920:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3920:11:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3933:1:58",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3916:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3916:19:58"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3910:2:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3951:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3966:6:58"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3974:2:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3962:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3962:15:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3944:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3944:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3944:34:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3998:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4009:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3994:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3994:18:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4018:6:58"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4026:2:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4014:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4014:15:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3987:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3987:43:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3987:43:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4050:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4061:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4046:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4046:18:58"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4066:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4039:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4039:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4039:34:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3814:9:58",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3825:6:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3833:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3841:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3852:4:58",
                "type": ""
              }
            ],
            "src": "3696:383:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4221:145:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4231:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4243:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4254:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4239:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4239:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4231:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4273:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4288:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4304:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4309:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4300:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4300:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4313:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4296:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4296:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4284:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4284:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4266:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4266:51:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4337:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4348:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4333:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4333:18:58"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4353:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4326:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4326:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4326:34:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4182:9:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4193:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4201:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4212:4:58",
                "type": ""
              }
            ],
            "src": "4084:282:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4466:92:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4476:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4488:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4499:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4484:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4476:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4518:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4543:6:58"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4536:6:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4536:14:58"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4529:6:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4529:22:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4511:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4511:41:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4511:41:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4435:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4446:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4457:4:58",
                "type": ""
              }
            ],
            "src": "4371:187:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4677:102:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4687:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4699:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4710:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4695:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4695:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4687:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4729:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4744:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4760:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4765:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4756:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4756:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4769:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4752:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4752:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4740:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4740:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4722:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4722:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4722:51:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$635__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4646:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4657:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4668:4:58",
                "type": ""
              }
            ],
            "src": "4563:216:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4915:102:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4925:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4937:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4948:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4933:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4933:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4925:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4967:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4982:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4998:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5003:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4994:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4994:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5007:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4990:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4990:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4978:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4978:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4960:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4960:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4960:51:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IPopulousGovernanceV2_$9319__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4884:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4895:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4906:4:58",
                "type": ""
              }
            ],
            "src": "4784:233:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5143:482:58",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5153:12:58",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5163:2:58",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5157:2:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5181:9:58"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5192:2:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5174:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5174:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5174:21:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5204:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5224:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5218:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5218:13:58"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5208:6:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5251:9:58"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5262:2:58"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5247:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5247:18:58"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5267:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5240:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5240:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5240:34:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5283:13:58",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5292:4:58"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5287:1:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5355:90:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5384:9:58"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5395:1:58"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5380:3:58"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5380:17:58"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5399:2:58",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5376:3:58"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5376:26:58"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5418:6:58"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5426:1:58"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5414:3:58"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5414:14:58"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5430:2:58"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5410:3:58"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5410:23:58"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5404:5:58"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5404:30:58"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5369:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5369:66:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5369:66:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5316:1:58"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5319:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5313:2:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5313:13:58"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5327:19:58",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5329:15:58",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5338:1:58"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5341:2:58"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5334:3:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5334:10:58"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5329:1:58"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5309:3:58",
                    "statements": []
                  },
                  "src": "5305:140:58"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5479:69:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5508:9:58"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "5519:6:58"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5504:3:58"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5504:22:58"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5528:2:58",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5500:3:58"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5500:31:58"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5533:4:58"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5493:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5493:45:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5493:45:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5460:1:58"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5463:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5457:2:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:13:58"
                  },
                  "nodeType": "YulIf",
                  "src": "5454:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5557:62:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5573:9:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5592:6:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5600:2:58",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5588:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5588:15:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5609:2:58",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5605:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5605:7:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5584:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5584:29:58"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5569:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5569:45:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5616:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5565:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5565:54:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5557:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5112:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5123:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5134:4:58",
                "type": ""
              }
            ],
            "src": "5022:603:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5804:237:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5821:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5832:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5814:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5814:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5855:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5866:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5851:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5851:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5871:2:58",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5844:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5844:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5844:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5894:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5905:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5890:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5890:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5910:34:58",
                        "type": "",
                        "value": "MockVotingToken: Voting token ba"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5883:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5883:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5883:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5965:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5976:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5961:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5961:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5981:17:58",
                        "type": "",
                        "value": "lance must be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5954:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5954:45:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5954:45:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6008:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6020:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6031:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6016:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6016:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6008:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5781:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5795:4:58",
                "type": ""
              }
            ],
            "src": "5630:411:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6220:182:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6237:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6248:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6230:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6230:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6230:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6271:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6282:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6267:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6267:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6287:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6260:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6260:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6260:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6310:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6321:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6306:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6326:34:58",
                        "type": "",
                        "value": "MockVotingToken: Transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6299:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6299:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6299:62:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6370:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6382:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6393:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6378:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6370:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6197:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6211:4:58",
                "type": ""
              }
            ],
            "src": "6046:356:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6581:298:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6598:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6609:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6591:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6591:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6591:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6632:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6643:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6628:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6628:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6648:2:58",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6621:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6621:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6621:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6671:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6682:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6667:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6667:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6687:34:58",
                        "type": "",
                        "value": "MockVotingToken: User cannot hav"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6660:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6660:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6660:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6742:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6753:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6738:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6738:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6758:34:58",
                        "type": "",
                        "value": "e vote on pending or active prop"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6731:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6813:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6824:3:58",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6809:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6809:19:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6830:6:58",
                        "type": "",
                        "value": "osal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6802:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6802:35:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6802:35:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6846:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6858:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6869:3:58",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6854:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6854:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6846:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6558:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6572:4:58",
                "type": ""
              }
            ],
            "src": "6407:472:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7058:233:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7075:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7086:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7068:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7068:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7068:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7109:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7120:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7105:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7105:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7125:2:58",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7098:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7098:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7098:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7148:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7159:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7144:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7144:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7164:34:58",
                        "type": "",
                        "value": "MockVotingToken: Invalid governa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7137:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7137:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7137:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7219:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7230:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7215:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7235:13:58",
                        "type": "",
                        "value": "nce address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7208:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:41:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7208:41:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7258:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7270:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7281:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7266:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7266:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7258:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7035:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7049:4:58",
                "type": ""
              }
            ],
            "src": "6884:407:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7470:226:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7487:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7498:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7480:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7480:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7480:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7521:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7517:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7537:2:58",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7510:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7510:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7510:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7560:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7571:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7556:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7556:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7576:34:58",
                        "type": "",
                        "value": "MockVotingToken: TransferFrom fa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7549:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7549:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7549:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7631:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7642:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7627:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7627:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7647:6:58",
                        "type": "",
                        "value": "iled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7620:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7620:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7620:34:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7663:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7675:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7686:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7671:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7671:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7663:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7447:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7461:4:58",
                "type": ""
              }
            ],
            "src": "7296:400:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7875:234:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7892:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7903:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7885:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7885:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7885:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7926:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7937:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7922:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7922:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7942:2:58",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7915:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7915:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7915:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7965:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7976:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7961:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7961:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7981:34:58",
                        "type": "",
                        "value": "MockVotingToken: PXT balance mus"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7954:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7954:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7954:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8036:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8047:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8032:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8032:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8052:14:58",
                        "type": "",
                        "value": "t be above 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8025:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8025:42:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8025:42:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8076:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8088:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8099:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8084:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8084:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8076:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7852:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7866:4:58",
                "type": ""
              }
            ],
            "src": "7701:408:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8215:76:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8225:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8237:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8248:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8233:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8233:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8225:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8267:9:58"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8278:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8260:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8260:25:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8260:25:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8184:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8195:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8206:4:58",
                "type": ""
              }
            ],
            "src": "8114:177:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8433:145:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8443:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8455:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8466:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8451:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8451:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8443:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8485:9:58"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8496:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8478:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8478:25:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8478:25:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8523:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8534:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8519:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8519:18:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8543:6:58"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8559:3:58",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8564:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8555:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8555:11:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8568:1:58",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8551:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8551:19:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8539:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8539:32:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8512:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8512:60:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8512:60:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8394:9:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8405:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8413:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8424:4:58",
                "type": ""
              }
            ],
            "src": "8296:282:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_enum$_DelegationType_$791(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(lt(value, 2)) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_bool_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_enum$_ProposalState_$8992_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 8)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_Vote_$8997_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_t_bool_fromMemory(headStart))\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(248, 1), 1)))) { revert(value0, value0) }\n        mstore(add(memPtr, 32), value)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$635__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPopulousGovernanceV2_$9319__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"MockVotingToken: Voting token ba\")\n        mstore(add(headStart, 96), \"lance must be 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"MockVotingToken: Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"MockVotingToken: User cannot hav\")\n        mstore(add(headStart, 96), \"e vote on pending or active prop\")\n        mstore(add(headStart, 128), \"osal\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"MockVotingToken: Invalid governa\")\n        mstore(add(headStart, 96), \"nce address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"MockVotingToken: TransferFrom fa\")\n        mstore(add(headStart, 96), \"iled\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"MockVotingToken: PXT balance mus\")\n        mstore(add(headStart, 96), \"t be above 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "462:1:5:-:0;436:27;;469;255:2519;469:27;;255:2519;469:27;;;-1:-1:-1;;;469:27:5;;;;;;;;;;:::i;:::-;-1:-1:-1;502:49:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;674:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;833:17:36;853:12;:10;:12::i;:::-;871:6;:18;;-1:-1:-1;;;;;;871:18:36;-1:-1:-1;;;;;871:18:36;;;;;;;;900:43;;871:18;;-1:-1:-1;871:18:36;-1:-1:-1;;900:43:36;;-1:-1:-1;;900:43:36;-1:-1:-1;;;;;;725:18:5;;717:67;;;;-1:-1:-1;;;717:67:5;;;;;;;:::i;:::-;;;;;;;;;794:8;:22;;-1:-1:-1;;;;;;794:22:5;-1:-1:-1;;;;;794:22:5;;;;;;;;;;255:2519;;586:98:33;669:10;586:98;:::o;255:2519:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;255:2519:5;;;-1:-1:-1;255:2519:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:310:58;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:58;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:58:o;329:400::-;531:2;513:21;;;570:2;550:18;;;543:30;609:34;604:2;589:18;;582:62;-1:-1:-1;;;675:2:58;660:18;;653:34;719:3;704:19;;503:226::o;:::-;255:2519:5;;;;;;",
  "deployedSourceMap": "255:2519:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8681:154:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;363:21:5:-;;;:::i;:::-;;;;;;;:::i;7706:98:0:-;;;:::i;:::-;;;;;;;:::i;9292:261::-;;;;;;:::i;:::-;;:::i;436:27:5:-;;;:::i;9948:203:0:-;;;;;;:::i;:::-;;:::i;390:39:5:-;;;:::i;7862:117:0:-;;;;;;:::i;:::-;;:::i;1599:135:36:-;;;:::i;:::-;;1016:71;;;:::i;1159:83:5:-;;;:::i;469:27::-;;;:::i;1068:85::-;;;:::i;10638:213:0:-;;;;;;:::i;:::-;;:::i;8182:162::-;;;;;;:::i;:::-;;:::i;1756:736:5:-;;;:::i;2580:192::-;;;;;;:::i;:::-;;:::i;853:209::-;;;;;;:::i;:::-;;:::i;1248:502::-;;;:::i;8402:141:0:-;;;;;;:::i;:::-;;:::i;1873:226:36:-;;;;;;:::i;:::-;;:::i;502:49:5:-;;;;;;;;;;;;;;;-1:-1:-1;;502:49:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8681:154:0:-;8755:4;8771:36;8780:10;8792:7;8801:5;8771:8;:36::i;:::-;-1:-1:-1;8824:4:0;8681:154;;;;:::o;363:21:5:-;;;-1:-1:-1;;;;;363:21:5;;:::o;7706:98:0:-;7785:12;;7706:98;:::o;9292:261::-;9390:4;9406:36;9416:6;9424:9;9435:6;9406:9;:36::i;:::-;-1:-1:-1;;;;;9481:19:0;;;;;;:11;:19;;;;;;;;9469:10;9481:31;;;;;;;;;9452:73;;9461:6;;9481:43;;9517:6;9481:35;:43::i;:::-;9452:8;:73::i;:::-;-1:-1:-1;9542:4:0;9292:261;;;;;:::o;436:27:5:-;;;;:::o;9948:203:0:-;10053:10;10028:4;10074:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10074:32:0;;;;;;;;;;10028:4;;10044:79;;10065:7;;10074:48;;10111:10;10074:36;:48::i;390:39:5:-;;;-1:-1:-1;;;;;390:39:5;;:::o;7862:117:0:-;-1:-1:-1;;;;;7954:18:0;;7928:7;7954:18;;;;;;;;;;;7862:117;;;;:::o;1599:135:36:-;1212:12;:10;:12::i;:::-;1202:6;;-1:-1:-1;;;;;1202:6:36;;;:22;;;1194:67;;;;;-1:-1:-1;;;1194:67:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1685:6:::1;::::0;1664:40:::1;::::0;1701:1:::1;::::0;-1:-1:-1;;;;;1685:6:36::1;::::0;1664:40:::1;::::0;1701:1;;1664:40:::1;1710:6;:19:::0;;-1:-1:-1;;;;;;1710:19:36::1;::::0;;1599:135::o;1016:71::-;1076:6;;-1:-1:-1;;;;;1076:6:36;1016:71;:::o;1159:83:5:-;1226:8;;-1:-1:-1;;;;;1226:8:5;1159:83;:::o;469:27::-;;;;;;;;;;;;;;;-1:-1:-1;;469:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:85;1135:10;;-1:-1:-1;;;;;1135:10:5;1068:85;:::o;10638:213:0:-;10748:10;10723:4;10769:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10769:32:0;;;;;;;;;;10723:4;;10739:84;;10760:7;;10769:53;;10806:15;10769:36;:53::i;8182:162::-;8260:4;8276:40;8286:10;8298:9;8309:6;8276:9;:40::i;1756:736:5:-;1791:18;1812:21;1822:10;1812:9;:21::i;:::-;1791:42;;1843:29;1849:10;1861;1843:5;:29::i;:::-;1888:9;1883:464;1907:10;;;;;;;;;-1:-1:-1;;;;;1907:10:5;-1:-1:-1;;;;;1907:28:5;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1903:1;:34;1883:464;;;1982:10;;:30;;-1:-1:-1;;;1982:30:5;;1958:13;;-1:-1:-1;;;;;1982:10:5;;:27;;:30;;2010:1;;1982:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1974:39;;;;;;;;2031:10;;:43;;-1:-1:-1;;;2031:43:5;;1958:55;;-1:-1:-1;2089:1:5;;-1:-1:-1;;;;;2031:10:5;;;;:28;;:43;;2060:1;;2063:10;;2031:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;;-1:-1:-1;;;;;2031:59:5;;2027:310;;;2166:10;;;;:24;;;2180:5;2189:1;2180:10;;2166:24;2110:212;;;;-1:-1:-1;;;2110:212:5;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1939:3:5;;1883:464;;;-1:-1:-1;2378:8:5;;;:41;;-1:-1:-1;;;2378:41:5;;-1:-1:-1;;;;;2378:8:5;;;;:17;;:41;;2396:10;;2408;;2378:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;2423:4;2378:49;2357:128;;;;-1:-1:-1;;;2357:128:5;;;;;;;:::i;:::-;1756:736;:::o;2580:192::-;2724:7;2750:15;2760:4;2750:9;:15::i;:::-;2743:22;2580:192;-1:-1:-1;;;;2580:192:5:o;853:209::-;1212:12:36;:10;:12::i;:::-;1202:6;;-1:-1:-1;;;;;1202:6:36;;;:22;;;1194:67;;;;;-1:-1:-1;;;1194:67:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;925:25:5;::::1;917:81;;;;-1:-1:-1::0;;;917:81:5::1;;;;;;;:::i;:::-;1008:10;:47:::0;;-1:-1:-1;;;;;;1008:47:5::1;-1:-1:-1::0;;;;;1008:47:5;;;::::1;::::0;;;::::1;::::0;;853:209::o;1248:502::-;1302:8;;;:30;;-1:-1:-1;;;1302:30:5;;1284:15;;-1:-1:-1;;;;;1302:8:5;;;;:18;;:30;;1321:10;;1302:30;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1284:48;;1360:1;1350:7;:11;1342:68;;;;-1:-1:-1;;;1342:68:5;;;;;;;:::i;:::-;1428:21;1438:10;1428:9;:21::i;:::-;:26;1420:86;;;;-1:-1:-1;;;1420:86:5;;;;;;;:::i;:::-;1537:8;;;:57;;-1:-1:-1;;;1537:57:5;;-1:-1:-1;;;;;1537:8:5;;;;:21;;:57;;1559:10;;1579:4;;1586:7;;1537:57;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;1598:4;1537:65;1516:148;;;;-1:-1:-1;;;1516:148:5;;;;;;;:::i;:::-;1674:26;1680:10;1692:7;1674:5;:26::i;:::-;1723:10;-1:-1:-1;;;;;1715:28:5;;1735:7;1715:28;;;;;;:::i;:::-;;;;;;;;1248:502;:::o;8402:141:0:-;-1:-1:-1;;;;;8509:18:0;;;8483:7;8509:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8402:141::o;1873:226:36:-;1212:12;:10;:12::i;:::-;1202:6;;-1:-1:-1;;;;;1202:6:36;;;:22;;;1194:67;;;;;-1:-1:-1;;;1194:67:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1957:22:36;::::1;1949:73;;;;-1:-1:-1::0;;;1949:73:36::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:6;::::0;2033:38:::1;::::0;-1:-1:-1;;;;;2033:38:36;;::::1;::::0;2054:6:::1;::::0;2033:38:::1;::::0;2054:6:::1;::::0;2033:38:::1;2077:6;:17:::0;;-1:-1:-1;;;;;;2077:17:36::1;-1:-1:-1::0;;;;;2077:17:36;;;::::1;::::0;;;::::1;::::0;;1873:226::o;13363:329:0:-;-1:-1:-1;;;;;13455:19:0;;13447:68;;;;-1:-1:-1;;;13447:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13533:21:0;;13525:68;;;;-1:-1:-1;;;13525:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13604:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;13654:31;;;;;;;;;;;;;;;;;13363:329;;;:::o;11325:422::-;-1:-1:-1;;;;;11422:20:0;;11414:70;;;;-1:-1:-1;;;11414:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11502:23:0;;11494:71;;;;-1:-1:-1;;;11494:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11596:17:0;;:9;:17;;;;;;;;;;;:29;;11618:6;11596:21;:29::i;:::-;-1:-1:-1;;;;;11576:17:0;;;:9;:17;;;;;;;;;;;:49;;;;11658:20;;;;;;;:32;;11683:6;11658:24;:32::i;:::-;-1:-1:-1;;;;;11635:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;11705:35;;;;;;;11635:20;;11705:35;;;;;;;;;;;;;11325:422;;;:::o;1310:179::-;1368:7;1400:1;1395;:6;;1387:49;;;;;-1:-1:-1;;;1387:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1458:5:0;;;1310:179::o;870:176::-;928:7;959:5;;;982:6;;;;974:46;;;;;-1:-1:-1;;;974:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:1;870:176;-1:-1:-1;;;870:176:0:o;586:98:33:-;669:10;586:98;:::o;12638:300:0:-;-1:-1:-1;;;;;12712:21:0;;12704:67;;;;-1:-1:-1;;;12704:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12797:12;;:23;;12814:5;12797:16;:23::i;:::-;12782:12;:38;-1:-1:-1;;;;;12851:18:0;;:9;:18;;;;;;;;;;;:29;;12874:5;12851:22;:29::i;:::-;-1:-1:-1;;;;;12830:18:0;;:9;:18;;;;;;;;;;;:50;;;;12895:36;;;;;;;12830:9;;12895:36;;;;;;;;;;;12638:300;;:::o;12017:302::-;-1:-1:-1;;;;;12092:21:0;;12084:65;;;;;-1:-1:-1;;;12084:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12175:12;;:24;;12192:6;12175:16;:24::i;:::-;12160:12;:39;-1:-1:-1;;;;;12230:18:0;;:9;:18;;;;;;;;;;;:30;;12253:6;12230:22;:30::i;:::-;-1:-1:-1;;;;;12209:18:0;;:9;:18;;;;;;;;;;;:51;;;;12275:37;;;;;;;12209:18;;:9;;12275:37;;;;;;;;;;12017:302;;:::o;14:175:58:-;84:20;;-1:-1:-1;;;;;133:31:58;;123:42;;113:2;;179:1;176;169:12;194:166;272:13;;321;;314:21;304:32;;294:2;;350:1;347;340:12;365:198;;477:2;465:9;456:7;452:23;448:32;445:2;;;498:6;490;483:22;445:2;526:31;547:9;526:31;:::i;568:274::-;;;697:2;685:9;676:7;672:23;668:32;665:2;;;718:6;710;703:22;665:2;746:31;767:9;746:31;:::i;:::-;736:41;;796:40;832:2;821:9;817:18;796:40;:::i;:::-;786:50;;655:187;;;;;:::o;847:342::-;;;;993:2;981:9;972:7;968:23;964:32;961:2;;;1014:6;1006;999:22;961:2;1042:31;1063:9;1042:31;:::i;:::-;1032:41;;1092:40;1128:2;1117:9;1113:18;1092:40;:::i;:::-;1082:50;;1179:2;1168:9;1164:18;1151:32;1141:42;;951:238;;;;;:::o;1194:266::-;;;1323:2;1311:9;1302:7;1298:23;1294:32;1291:2;;;1344:6;1336;1329:22;1291:2;1372:31;1393:9;1372:31;:::i;:::-;1362:41;1450:2;1435:18;;;;1422:32;;-1:-1:-1;;;1281:179:58:o;1465:438::-;;;;1629:2;1617:9;1608:7;1604:23;1600:32;1597:2;;;1650:6;1642;1635:22;1597:2;1678:31;1699:9;1678:31;:::i;:::-;1668:41;;1756:2;1745:9;1741:18;1728:32;1718:42;;1810:2;1799:9;1795:18;1782:32;1843:1;1836:5;1833:12;1823:2;;1864:6;1856;1849:22;1823:2;1892:5;1882:15;;;1587:316;;;;;:::o;1908:214::-;;2028:2;2016:9;2007:7;2003:23;1999:32;1996:2;;;2049:6;2041;2034:22;1996:2;2077:39;2106:9;2077:39;:::i;2127:298::-;;2268:2;2256:9;2247:7;2243:23;2239:32;2236:2;;;2289:6;2281;2274:22;2236:2;2326:9;2320:16;2365:1;2358:5;2355:12;2345:2;;2386:6;2378;2371:22;2430:638;;2575:2;2563:9;2554:7;2550:23;2546:32;2543:2;;;2596:6;2588;2581:22;2543:2;2634;2628:9;2676:2;2668:6;2664:15;2745:6;2733:10;2730:22;2709:18;2697:10;2694:34;2691:62;2688:2;;;2756:9;2688:2;2783;2776:22;2822:39;2851:9;2822:39;:::i;:::-;2807:55;;2905:2;2890:18;;2884:25;-1:-1:-1;;;;;2938:31:58;;2928:42;;2918:2;;2989:6;2981;2974:22;2918:2;3026;3014:15;;3007:30;3018:6;2533:535;-1:-1:-1;;;2533:535:58:o;3073:194::-;;3196:2;3184:9;3175:7;3171:23;3167:32;3164:2;;;3217:6;3209;3202:22;3164:2;-1:-1:-1;3245:16:58;;3154:113;-1:-1:-1;3154:113:58:o;3272:203::-;-1:-1:-1;;;;;3436:32:58;;;;3418:51;;3406:2;3391:18;;3373:102::o;3696:383::-;-1:-1:-1;;;;;3962:15:58;;;3944:34;;4014:15;;;;4009:2;3994:18;;3987:43;4061:2;4046:18;;4039:34;;;;3894:2;3879:18;;3861:218::o;4084:282::-;-1:-1:-1;;;;;4284:32:58;;;;4266:51;;4348:2;4333:18;;4326:34;4254:2;4239:18;;4221:145::o;4371:187::-;4536:14;;4529:22;4511:41;;4499:2;4484:18;;4466:92::o;5022:603::-;;5163:2;5192;5181:9;5174:21;5224:6;5218:13;5267:6;5262:2;5251:9;5247:18;5240:34;5292:4;5305:140;5319:6;5316:1;5313:13;5305:140;;;5414:14;;;5410:23;;5404:30;5380:17;;;5399:2;5376:26;5369:66;5334:10;;5305:140;;;5463:6;5460:1;5457:13;5454:2;;;5533:4;5528:2;5519:6;5508:9;5504:22;5500:31;5493:45;5454:2;-1:-1:-1;5609:2:58;5588:15;-1:-1:-1;;5584:29:58;5569:45;;;;5616:2;5565:54;;5143:482;-1:-1:-1;;;5143:482:58:o;5630:411::-;5832:2;5814:21;;;5871:2;5851:18;;;5844:30;5910:34;5905:2;5890:18;;5883:62;-1:-1:-1;;;5976:2:58;5961:18;;5954:45;6031:3;6016:19;;5804:237::o;6046:356::-;6248:2;6230:21;;;6267:18;;;6260:30;6326:34;6321:2;6306:18;;6299:62;6393:2;6378:18;;6220:182::o;6407:472::-;6609:2;6591:21;;;6648:2;6628:18;;;6621:30;6687:34;6682:2;6667:18;;6660:62;6758:34;6753:2;6738:18;;6731:62;-1:-1:-1;;;6824:3:58;6809:19;;6802:35;6869:3;6854:19;;6581:298::o;6884:407::-;7086:2;7068:21;;;7125:2;7105:18;;;7098:30;7164:34;7159:2;7144:18;;7137:62;-1:-1:-1;;;7230:2:58;7215:18;;7208:41;7281:3;7266:19;;7058:233::o;7296:400::-;7498:2;7480:21;;;7537:2;7517:18;;;7510:30;7576:34;7571:2;7556:18;;7549:62;-1:-1:-1;;;7642:2:58;7627:18;;7620:34;7686:3;7671:19;;7470:226::o;7701:408::-;7903:2;7885:21;;;7942:2;7922:18;;;7915:30;7981:34;7976:2;7961:18;;7954:62;-1:-1:-1;;;8047:2:58;8032:18;;8025:42;8099:3;8084:19;;7875:234::o;8114:177::-;8260:25;;;8248:2;8233:18;;8215:76::o;8296:282::-;8478:25;;;-1:-1:-1;;;;;8539:32:58;8534:2;8519:18;;8512:60;8466:2;8451:18;;8433:145::o",
  "source": "pragma solidity 0.7.5;\npragma abicoder v2;\n\nimport \"./ERC20.sol\";\nimport \"./interfaces/IPopulousGovernanceV2.sol\";\nimport {Ownable} from './dependencies/open-zeppelin/Ownable.sol';\n\n/**\n * @title MockVotingToken\n * @dev Implements ERC20 minting logic\n */\ncontract MockVotingToken is ERC20, Ownable {\n    enum DelegationType {VOTING_POWER, PROPOSITION_POWER}\n\n    ERC20 public pxtToken;\n    IPopulousGovernanceV2 public governance;\n\n    uint256 public decimals = 8;\n    string public symbol = \"GT\";\n    string public name = \"Populous Governance Tokens\";\n\n    event Deposit(address indexed user, uint256 amount);\n    event Redeemed(address indexed user, uint256 amount);\n\n    constructor(address _pxt) public {\n        require(_pxt != address(0), \"MockVotingToken: Invalid pxt address\");\n        pxtToken = ERC20(_pxt);\n    }\n\n    // only owner/admin\n    function setGov(address _governance) public onlyOwner {\n        require(_governance != address(0), \"MockVotingToken: Invalid governance address\");\n        governance = IPopulousGovernanceV2(_governance);\n    }\n\n    function getGov() public returns(address) {\n        return address(governance);\n    }\n\n    function getPXT() public returns(address) {\n        return address(pxtToken);\n    }\n\n    function deposit() public {\n        uint256 balance = pxtToken.balanceOf(msg.sender);\n        require(balance > 0, \"MockVotingToken: PXT balance must be above 0\");\n        require(balanceOf(msg.sender) == 0, \"MockVotingToken: Voting token balance must be 0\");\n        require(\n            pxtToken.transferFrom(msg.sender, address(this), balance) == true,\n            \"MockVotingToken: TransferFrom failed\"\n        );\n        _mint(msg.sender, balance);\n        emit Deposit(msg.sender, balance);\n    }\n\n    function redeem() public {\n        uint256 govBalance = balanceOf(msg.sender);\n        _burn(msg.sender, govBalance);\n\n        for (uint256 i = 0; i < governance.getProposalsCount(); i++) {\n            uint256 state = uint256(governance.getProposalState(i));\n            if (governance.getVoteOnProposal(i, msg.sender).votingPower > 0) {\n                require (\n                    (\n                        state != 0 || state != 2\n                    ),\n                    \"MockVotingToken: User cannot have vote on pending or active proposal\"\n                );\n            }\n        }\n\n        require(\n            pxtToken.transfer(msg.sender, govBalance) == true,\n            \"MockVotingToken: Transfer failed\"\n        );\n    }\n\n    // increase voting power\n    // how many tokens? pxt or ppt or both and 1:1?\n\n    function getPowerAtBlock(\n        address user,\n        uint256 blockNumber,\n        DelegationType delegationType\n    ) external view returns (uint256) {\n        return balanceOf(user);\n    }\n}",
  "sourcePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
  "ast": {
    "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
    "exportedSymbols": {
      "ERC20": [
        635
      ],
      "IERC20": [
        214
      ],
      "IExecutorWithTimelock": [
        8919
      ],
      "IPopulousGovernanceV2": [
        9319
      ],
      "MockVotingToken": [
        1034
      ],
      "Ownable": [
        5112
      ],
      "SafeMath": [
        138
      ]
    },
    "id": 1035,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 778,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:5"
      },
      {
        "id": 779,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:19:5"
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 780,
        "nodeType": "ImportDirective",
        "scope": 1035,
        "sourceUnit": 636,
        "src": "44:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol",
        "file": "./interfaces/IPopulousGovernanceV2.sol",
        "id": 781,
        "nodeType": "ImportDirective",
        "scope": 1035,
        "sourceUnit": 9320,
        "src": "66:48:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Ownable.sol",
        "file": "./dependencies/open-zeppelin/Ownable.sol",
        "id": 783,
        "nodeType": "ImportDirective",
        "scope": 1035,
        "sourceUnit": 5113,
        "src": "115:65:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 782,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "123:7:5",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 785,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "283:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "id": 786,
            "nodeType": "InheritanceSpecifier",
            "src": "283:5:5"
          },
          {
            "baseName": {
              "id": 787,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5112,
              "src": "290:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5112",
                "typeString": "contract Ownable"
              }
            },
            "id": 788,
            "nodeType": "InheritanceSpecifier",
            "src": "290:7:5"
          }
        ],
        "contractDependencies": [
          214,
          635,
          4869,
          5112
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 784,
          "nodeType": "StructuredDocumentation",
          "src": "182:72:5",
          "text": " @title MockVotingToken\n @dev Implements ERC20 minting logic"
        },
        "fullyImplemented": true,
        "id": 1034,
        "linearizedBaseContracts": [
          1034,
          5112,
          4869,
          635,
          214
        ],
        "name": "MockVotingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MockVotingToken.DelegationType",
            "id": 791,
            "members": [
              {
                "id": 789,
                "name": "VOTING_POWER",
                "nodeType": "EnumValue",
                "src": "325:12:5"
              },
              {
                "id": 790,
                "name": "PROPOSITION_POWER",
                "nodeType": "EnumValue",
                "src": "339:17:5"
              }
            ],
            "name": "DelegationType",
            "nodeType": "EnumDefinition",
            "src": "304:53:5"
          },
          {
            "constant": false,
            "functionSelector": "0e344376",
            "id": 793,
            "mutability": "mutable",
            "name": "pxtToken",
            "nodeType": "VariableDeclaration",
            "scope": 1034,
            "src": "363:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$635",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 792,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "363:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 795,
            "mutability": "mutable",
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 1034,
            "src": "390:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
              "typeString": "contract IPopulousGovernanceV2"
            },
            "typeName": {
              "id": 794,
              "name": "IPopulousGovernanceV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9319,
              "src": "390:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                "typeString": "contract IPopulousGovernanceV2"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 798,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1034,
            "src": "436:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 796,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "436:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38",
              "id": 797,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "462:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "8"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 801,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1034,
            "src": "469:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 799,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "469:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4754",
              "id": 800,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "492:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b275d0555485319643a6e39fae791932db6d1bb57b5529b0f8111f703023fe74",
                "typeString": "literal_string \"GT\""
              },
              "value": "GT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 804,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1034,
            "src": "502:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 802,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "502:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "506f70756c6f757320476f7665726e616e636520546f6b656e73",
              "id": 803,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "523:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1da7263cb6d7aa01bf010c9bb06305f846a41b1cd17e769245efbc35fdd9ff61",
                "typeString": "literal_string \"Populous Governance Tokens\""
              },
              "value": "Populous Governance Tokens"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 810,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "572:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "594:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "571:38:5"
            },
            "src": "558:52:5"
          },
          {
            "anonymous": false,
            "id": 816,
            "name": "Redeemed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "630:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "652:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:38:5"
            },
            "src": "615:53:5"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "707:116:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 822,
                          "name": "_pxt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "725:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "741:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "733:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 823,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "733:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "733:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "725:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a20496e76616c6964207078742061646472657373",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "745:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb",
                          "typeString": "literal_string \"MockVotingToken: Invalid pxt address\""
                        },
                        "value": "MockVotingToken: Invalid pxt address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb",
                          "typeString": "literal_string \"MockVotingToken: Invalid pxt address\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "717:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "717:67:5"
                },
                {
                  "expression": {
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 831,
                      "name": "pxtToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "794:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 833,
                          "name": "_pxt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "811:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 832,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "805:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$635_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "805:11:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "794:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$635",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "794:22:5"
                }
              ]
            },
            "id": 838,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "_pxt",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "686:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:14:5"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:5"
            },
            "scope": 1034,
            "src": "674:149:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "907:155:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 846,
                          "name": "_governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "925:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "948:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "940:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 847,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "940:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "925:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a20496e76616c696420676f7665726e616e63652061646472657373",
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "952:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70",
                          "typeString": "literal_string \"MockVotingToken: Invalid governance address\""
                        },
                        "value": "MockVotingToken: Invalid governance address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70",
                          "typeString": "literal_string \"MockVotingToken: Invalid governance address\""
                        }
                      ],
                      "id": 845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "917:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:81:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "917:81:5"
                },
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 855,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "1008:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                        "typeString": "contract IPopulousGovernanceV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 857,
                          "name": "_governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "1043:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 856,
                        "name": "IPopulousGovernanceV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9319,
                        "src": "1021:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPopulousGovernanceV2_$9319_$",
                          "typeString": "type(contract IPopulousGovernanceV2)"
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1021:34:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                        "typeString": "contract IPopulousGovernanceV2"
                      }
                    },
                    "src": "1008:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                      "typeString": "contract IPopulousGovernanceV2"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:47:5"
                }
              ]
            },
            "functionSelector": "cfad57a2",
            "id": 862,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 843,
                "modifierName": {
                  "id": 842,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5061,
                  "src": "897:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "897:9:5"
              }
            ],
            "name": "setGov",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "869:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "868:21:5"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:5"
            },
            "scope": 1034,
            "src": "853:209:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "1110:43:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "governance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "1135:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                          "typeString": "contract IPopulousGovernanceV2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                          "typeString": "contract IPopulousGovernanceV2"
                        }
                      ],
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1127:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 867,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1127:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 866,
                  "id": 871,
                  "nodeType": "Return",
                  "src": "1120:26:5"
                }
              ]
            },
            "functionSelector": "a2ab2dee",
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGov",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1083:2:5"
            },
            "returnParameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "1101:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1100:9:5"
            },
            "scope": 1034,
            "src": "1068:85:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "1201:41:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 880,
                        "name": "pxtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "1226:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1218:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 878,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1218:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 877,
                  "id": 882,
                  "nodeType": "Return",
                  "src": "1211:24:5"
                }
              ]
            },
            "functionSelector": "8f10b2e0",
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPXT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:2:5"
            },
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1192:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:9:5"
            },
            "scope": 1034,
            "src": "1159:83:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "1274:476:5",
              "statements": [
                {
                  "assignments": [
                    888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 888,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 940,
                      "src": "1284:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 887,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1284:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 894,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 891,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1321:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1321:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 889,
                        "name": "pxtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "1302:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 256,
                      "src": "1302:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1284:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 896,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "1350:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1360:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1350:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a205058542062616c616e6365206d7573742062652061626f76652030",
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1363:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1",
                          "typeString": "literal_string \"MockVotingToken: PXT balance must be above 0\""
                        },
                        "value": "MockVotingToken: PXT balance must be above 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1",
                          "typeString": "literal_string \"MockVotingToken: PXT balance must be above 0\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1342:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 904,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1438:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1438:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 903,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1428:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1428:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1453:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1428:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a20566f74696e6720746f6b656e2062616c616e6365206d7573742062652030",
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1456:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b",
                          "typeString": "literal_string \"MockVotingToken: Voting token balance must be 0\""
                        },
                        "value": "MockVotingToken: Voting token balance must be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b",
                          "typeString": "literal_string \"MockVotingToken: Voting token balance must be 0\""
                        }
                      ],
                      "id": 902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1420:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:86:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 915,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1559:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1559:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 919,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1579:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockVotingToken_$1034",
                                    "typeString": "contract MockVotingToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockVotingToken_$1034",
                                    "typeString": "contract MockVotingToken"
                                  }
                                ],
                                "id": 918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1571:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 917,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1571:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1571:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 921,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "1586:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 913,
                              "name": "pxtToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "1537:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$635",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 353,
                            "src": "1537:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1537:57:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1598:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1537:65:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a205472616e7366657246726f6d206661696c6564",
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1616:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322",
                          "typeString": "literal_string \"MockVotingToken: TransferFrom failed\""
                        },
                        "value": "MockVotingToken: TransferFrom failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322",
                          "typeString": "literal_string \"MockVotingToken: TransferFrom failed\""
                        }
                      ],
                      "id": 912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1516:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:148:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:148:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 929,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1680:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1680:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 931,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "1692:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 928,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1674:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1723:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1723:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 937,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "1735:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 934,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "1715:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "EmitStatement",
                  "src": "1710:33:5"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 941,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:2:5"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1274:0:5"
            },
            "scope": 1034,
            "src": "1248:502:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "1781:711:5",
              "statements": [
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "govBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1016,
                      "src": "1791:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1791:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 950,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 947,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1822:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1822:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 946,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "1812:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1812:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1791:42:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 952,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1849:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1849:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 954,
                        "name": "govBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "1861:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 951,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "1843:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:29:5"
                },
                {
                  "body": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "1944:403:5",
                    "statements": [
                      {
                        "assignments": [
                          970
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 970,
                            "mutability": "mutable",
                            "name": "state",
                            "nodeType": "VariableDeclaration",
                            "scope": 1002,
                            "src": "1958:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 969,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1958:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 978,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 975,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 958,
                                  "src": "2010:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 973,
                                  "name": "governance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 795,
                                  "src": "1982:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                                    "typeString": "contract IPopulousGovernanceV2"
                                  }
                                },
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getProposalState",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9318,
                                "src": "1982:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_enum$_ProposalState_$8992_$",
                                  "typeString": "function (uint256) view external returns (enum IPopulousGovernanceV2.ProposalState)"
                                }
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1982:30:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalState_$8992",
                                "typeString": "enum IPopulousGovernanceV2.ProposalState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalState_$8992",
                                "typeString": "enum IPopulousGovernanceV2.ProposalState"
                              }
                            ],
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1974:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 971,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1974:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1974:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1958:55:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 981,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 958,
                                  "src": "2060:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 982,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2063:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 983,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2063:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "id": 979,
                                  "name": "governance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 795,
                                  "src": "2031:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                                    "typeString": "contract IPopulousGovernanceV2"
                                  }
                                },
                                "id": 980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getVoteOnProposal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9310,
                                "src": "2031:28:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_Vote_$8997_memory_ptr_$",
                                  "typeString": "function (uint256,address) view external returns (struct IPopulousGovernanceV2.Vote memory)"
                                }
                              },
                              "id": 984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2031:43:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$8997_memory_ptr",
                                "typeString": "struct IPopulousGovernanceV2.Vote memory"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votingPower",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8996,
                            "src": "2031:55:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint248",
                              "typeString": "uint248"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2089:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2031:59:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1001,
                        "nodeType": "IfStatement",
                        "src": "2027:310:5",
                        "trueBody": {
                          "id": 1000,
                          "nodeType": "Block",
                          "src": "2092:245:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 995,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 991,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 989,
                                            "name": "state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 970,
                                            "src": "2166:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "hexValue": "30",
                                            "id": 990,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2175:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "2166:10:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 994,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 992,
                                            "name": "state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 970,
                                            "src": "2180:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "hexValue": "32",
                                            "id": 993,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2189:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          },
                                          "src": "2180:10:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "2166:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 996,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2140:72:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4d6f636b566f74696e67546f6b656e3a20557365722063616e6e6f74206861766520766f7465206f6e2070656e64696e67206f72206163746976652070726f706f73616c",
                                    "id": 997,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2234:70:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468",
                                      "typeString": "literal_string \"MockVotingToken: User cannot have vote on pending or active proposal\""
                                    },
                                    "value": "MockVotingToken: User cannot have vote on pending or active proposal"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468",
                                      "typeString": "literal_string \"MockVotingToken: User cannot have vote on pending or active proposal\""
                                    }
                                  ],
                                  "id": 988,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2110:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2110:212:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 999,
                              "nodeType": "ExpressionStatement",
                              "src": "2110:212:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 961,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 958,
                      "src": "1903:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 962,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "1907:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                            "typeString": "contract IPopulousGovernanceV2"
                          }
                        },
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getProposalsCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9292,
                        "src": "1907:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1907:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1903:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1003,
                  "initializationExpression": {
                    "assignments": [
                      958
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 958,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "1888:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1888:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 960,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1900:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1888:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1939:3:5",
                      "subExpression": {
                        "id": 966,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "1939:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 968,
                    "nodeType": "ExpressionStatement",
                    "src": "1939:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "1883:464:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1007,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2396:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2396:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1009,
                              "name": "govBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "2408:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1005,
                              "name": "pxtToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "2378:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$635",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 277,
                            "src": "2378:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2378:41:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2423:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2378:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a205472616e73666572206661696c6564",
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2441:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844",
                          "typeString": "literal_string \"MockVotingToken: Transfer failed\""
                        },
                        "value": "MockVotingToken: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844",
                          "typeString": "literal_string \"MockVotingToken: Transfer failed\""
                        }
                      ],
                      "id": 1004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2357:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:128:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:128:5"
                }
              ]
            },
            "functionSelector": "be040fb0",
            "id": 1017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1771:2:5"
            },
            "returnParameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:5"
            },
            "scope": 1034,
            "src": "1756:736:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "2733:39:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1029,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "2760:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1028,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "2750:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:15:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1027,
                  "id": 1031,
                  "nodeType": "Return",
                  "src": "2743:22:5"
                }
              ]
            },
            "functionSelector": "c2ffbb91",
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPowerAtBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "2614:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "2636:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "delegationType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "2665:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DelegationType_$791",
                    "typeString": "enum MockVotingToken.DelegationType"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "DelegationType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 791,
                    "src": "2665:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DelegationType_$791",
                      "typeString": "enum MockVotingToken.DelegationType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2604:96:5"
            },
            "returnParameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "2724:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2724:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2723:9:5"
            },
            "scope": 1034,
            "src": "2580:192:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1035,
        "src": "255:2519:5"
      }
    ],
    "src": "0:2774:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
      "exportedSymbols": {
        "ERC20": [
          635
        ],
        "IERC20": [
          214
        ],
        "IExecutorWithTimelock": [
          8919
        ],
        "IPopulousGovernanceV2": [
          9319
        ],
        "MockVotingToken": [
          1034
        ],
        "Ownable": [
          5112
        ],
        "SafeMath": [
          138
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".5"
          ]
        },
        "id": 778,
        "name": "PragmaDirective",
        "src": "0:22:5"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 779,
        "name": "PragmaDirective",
        "src": "23:19:5"
      },
      {
        "attributes": {
          "SourceUnit": 636,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
          "file": "./ERC20.sol",
          "scope": 1035,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 780,
        "name": "ImportDirective",
        "src": "44:21:5"
      },
      {
        "attributes": {
          "SourceUnit": 9320,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol",
          "file": "./interfaces/IPopulousGovernanceV2.sol",
          "scope": 1035,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 781,
        "name": "ImportDirective",
        "src": "66:48:5"
      },
      {
        "attributes": {
          "SourceUnit": 5113,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Ownable.sol",
          "file": "./dependencies/open-zeppelin/Ownable.sol",
          "scope": 1035,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "Ownable"
                },
                "id": 782,
                "name": "Identifier",
                "src": "123:7:5"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 783,
        "name": "ImportDirective",
        "src": "115:65:5"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            214,
            635,
            4869,
            5112
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1034,
            5112,
            4869,
            635,
            214
          ],
          "name": "MockVotingToken",
          "scope": 1035
        },
        "children": [
          {
            "attributes": {
              "text": " @title MockVotingToken\n @dev Implements ERC20 minting logic"
            },
            "id": 784,
            "name": "StructuredDocumentation",
            "src": "182:72:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 785,
                "name": "UserDefinedTypeName",
                "src": "283:5:5"
              }
            ],
            "id": 786,
            "name": "InheritanceSpecifier",
            "src": "283:5:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 5112,
                  "type": "contract Ownable"
                },
                "id": 787,
                "name": "UserDefinedTypeName",
                "src": "290:7:5"
              }
            ],
            "id": 788,
            "name": "InheritanceSpecifier",
            "src": "290:7:5"
          },
          {
            "attributes": {
              "canonicalName": "MockVotingToken.DelegationType",
              "name": "DelegationType"
            },
            "children": [
              {
                "attributes": {
                  "name": "VOTING_POWER"
                },
                "id": 789,
                "name": "EnumValue",
                "src": "325:12:5"
              },
              {
                "attributes": {
                  "name": "PROPOSITION_POWER"
                },
                "id": 790,
                "name": "EnumValue",
                "src": "339:17:5"
              }
            ],
            "id": 791,
            "name": "EnumDefinition",
            "src": "304:53:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "0e344376",
              "mutability": "mutable",
              "name": "pxtToken",
              "scope": 1034,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 792,
                "name": "UserDefinedTypeName",
                "src": "363:5:5"
              }
            ],
            "id": 793,
            "name": "VariableDeclaration",
            "src": "363:21:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "5aa6e675",
              "mutability": "mutable",
              "name": "governance",
              "scope": 1034,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IPopulousGovernanceV2",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IPopulousGovernanceV2",
                  "referencedDeclaration": 9319,
                  "type": "contract IPopulousGovernanceV2"
                },
                "id": 794,
                "name": "UserDefinedTypeName",
                "src": "390:21:5"
              }
            ],
            "id": 795,
            "name": "VariableDeclaration",
            "src": "390:39:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "313ce567",
              "mutability": "mutable",
              "name": "decimals",
              "scope": 1034,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 796,
                "name": "ElementaryTypeName",
                "src": "436:7:5"
              },
              {
                "attributes": {
                  "hexvalue": "38",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 8",
                  "value": "8"
                },
                "id": 797,
                "name": "Literal",
                "src": "462:1:5"
              }
            ],
            "id": 798,
            "name": "VariableDeclaration",
            "src": "436:27:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "95d89b41",
              "mutability": "mutable",
              "name": "symbol",
              "scope": 1034,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 799,
                "name": "ElementaryTypeName",
                "src": "469:6:5"
              },
              {
                "attributes": {
                  "hexvalue": "4754",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"GT\"",
                  "value": "GT"
                },
                "id": 800,
                "name": "Literal",
                "src": "492:4:5"
              }
            ],
            "id": 801,
            "name": "VariableDeclaration",
            "src": "469:27:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "06fdde03",
              "mutability": "mutable",
              "name": "name",
              "scope": 1034,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 802,
                "name": "ElementaryTypeName",
                "src": "502:6:5"
              },
              {
                "attributes": {
                  "hexvalue": "506f70756c6f757320476f7665726e616e636520546f6b656e73",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"Populous Governance Tokens\"",
                  "value": "Populous Governance Tokens"
                },
                "id": 803,
                "name": "Literal",
                "src": "523:28:5"
              }
            ],
            "id": 804,
            "name": "VariableDeclaration",
            "src": "502:49:5"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "Deposit"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 805,
                        "name": "ElementaryTypeName",
                        "src": "572:7:5"
                      }
                    ],
                    "id": 806,
                    "name": "VariableDeclaration",
                    "src": "572:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 807,
                        "name": "ElementaryTypeName",
                        "src": "594:7:5"
                      }
                    ],
                    "id": 808,
                    "name": "VariableDeclaration",
                    "src": "594:14:5"
                  }
                ],
                "id": 809,
                "name": "ParameterList",
                "src": "571:38:5"
              }
            ],
            "id": 810,
            "name": "EventDefinition",
            "src": "558:52:5"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "Redeemed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 816,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 811,
                        "name": "ElementaryTypeName",
                        "src": "630:7:5"
                      }
                    ],
                    "id": 812,
                    "name": "VariableDeclaration",
                    "src": "630:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 816,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 813,
                        "name": "ElementaryTypeName",
                        "src": "652:7:5"
                      }
                    ],
                    "id": 814,
                    "name": "VariableDeclaration",
                    "src": "652:14:5"
                  }
                ],
                "id": 815,
                "name": "ParameterList",
                "src": "629:38:5"
              }
            ],
            "id": 816,
            "name": "EventDefinition",
            "src": "615:53:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1034,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_pxt",
                      "scope": 838,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 817,
                        "name": "ElementaryTypeName",
                        "src": "686:7:5"
                      }
                    ],
                    "id": 818,
                    "name": "VariableDeclaration",
                    "src": "686:12:5"
                  }
                ],
                "id": 819,
                "name": "ParameterList",
                "src": "685:14:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 820,
                "name": "ParameterList",
                "src": "707:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb",
                                  "typeString": "literal_string \"MockVotingToken: Invalid pxt address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 821,
                            "name": "Identifier",
                            "src": "717:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 818,
                                  "type": "address",
                                  "value": "_pxt"
                                },
                                "id": 822,
                                "name": "Identifier",
                                "src": "725:4:5"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 823,
                                        "name": "ElementaryTypeName",
                                        "src": "733:7:5"
                                      }
                                    ],
                                    "id": 824,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "733:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 825,
                                    "name": "Literal",
                                    "src": "741:1:5"
                                  }
                                ],
                                "id": 826,
                                "name": "FunctionCall",
                                "src": "733:10:5"
                              }
                            ],
                            "id": 827,
                            "name": "BinaryOperation",
                            "src": "725:18:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20496e76616c6964207078742061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Invalid pxt address\"",
                              "value": "MockVotingToken: Invalid pxt address"
                            },
                            "id": 828,
                            "name": "Literal",
                            "src": "745:38:5"
                          }
                        ],
                        "id": 829,
                        "name": "FunctionCall",
                        "src": "717:67:5"
                      }
                    ],
                    "id": 830,
                    "name": "ExpressionStatement",
                    "src": "717:67:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 793,
                              "type": "contract ERC20",
                              "value": "pxtToken"
                            },
                            "id": 831,
                            "name": "Identifier",
                            "src": "794:8:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract ERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 635,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 832,
                                "name": "Identifier",
                                "src": "805:5:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 818,
                                  "type": "address",
                                  "value": "_pxt"
                                },
                                "id": 833,
                                "name": "Identifier",
                                "src": "811:4:5"
                              }
                            ],
                            "id": 834,
                            "name": "FunctionCall",
                            "src": "805:11:5"
                          }
                        ],
                        "id": 835,
                        "name": "Assignment",
                        "src": "794:22:5"
                      }
                    ],
                    "id": 836,
                    "name": "ExpressionStatement",
                    "src": "794:22:5"
                  }
                ],
                "id": 837,
                "name": "Block",
                "src": "707:116:5"
              }
            ],
            "id": 838,
            "name": "FunctionDefinition",
            "src": "674:149:5"
          },
          {
            "attributes": {
              "functionSelector": "cfad57a2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setGov",
              "scope": 1034,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_governance",
                      "scope": 862,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 839,
                        "name": "ElementaryTypeName",
                        "src": "869:7:5"
                      }
                    ],
                    "id": 840,
                    "name": "VariableDeclaration",
                    "src": "869:19:5"
                  }
                ],
                "id": 841,
                "name": "ParameterList",
                "src": "868:21:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 844,
                "name": "ParameterList",
                "src": "907:0:5"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5061,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 842,
                    "name": "Identifier",
                    "src": "897:9:5"
                  }
                ],
                "id": 843,
                "name": "ModifierInvocation",
                "src": "897:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70",
                                  "typeString": "literal_string \"MockVotingToken: Invalid governance address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 845,
                            "name": "Identifier",
                            "src": "917:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 840,
                                  "type": "address",
                                  "value": "_governance"
                                },
                                "id": 846,
                                "name": "Identifier",
                                "src": "925:11:5"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 847,
                                        "name": "ElementaryTypeName",
                                        "src": "940:7:5"
                                      }
                                    ],
                                    "id": 848,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "940:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 849,
                                    "name": "Literal",
                                    "src": "948:1:5"
                                  }
                                ],
                                "id": 850,
                                "name": "FunctionCall",
                                "src": "940:10:5"
                              }
                            ],
                            "id": 851,
                            "name": "BinaryOperation",
                            "src": "925:25:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20496e76616c696420676f7665726e616e63652061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Invalid governance address\"",
                              "value": "MockVotingToken: Invalid governance address"
                            },
                            "id": 852,
                            "name": "Literal",
                            "src": "952:45:5"
                          }
                        ],
                        "id": 853,
                        "name": "FunctionCall",
                        "src": "917:81:5"
                      }
                    ],
                    "id": 854,
                    "name": "ExpressionStatement",
                    "src": "917:81:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IPopulousGovernanceV2"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 795,
                              "type": "contract IPopulousGovernanceV2",
                              "value": "governance"
                            },
                            "id": 855,
                            "name": "Identifier",
                            "src": "1008:10:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IPopulousGovernanceV2",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 9319,
                                  "type": "type(contract IPopulousGovernanceV2)",
                                  "value": "IPopulousGovernanceV2"
                                },
                                "id": 856,
                                "name": "Identifier",
                                "src": "1021:21:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 840,
                                  "type": "address",
                                  "value": "_governance"
                                },
                                "id": 857,
                                "name": "Identifier",
                                "src": "1043:11:5"
                              }
                            ],
                            "id": 858,
                            "name": "FunctionCall",
                            "src": "1021:34:5"
                          }
                        ],
                        "id": 859,
                        "name": "Assignment",
                        "src": "1008:47:5"
                      }
                    ],
                    "id": 860,
                    "name": "ExpressionStatement",
                    "src": "1008:47:5"
                  }
                ],
                "id": 861,
                "name": "Block",
                "src": "907:155:5"
              }
            ],
            "id": 862,
            "name": "FunctionDefinition",
            "src": "853:209:5"
          },
          {
            "attributes": {
              "functionSelector": "a2ab2dee",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getGov",
              "scope": 1034,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 863,
                "name": "ParameterList",
                "src": "1083:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 873,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 864,
                        "name": "ElementaryTypeName",
                        "src": "1101:7:5"
                      }
                    ],
                    "id": 865,
                    "name": "VariableDeclaration",
                    "src": "1101:7:5"
                  }
                ],
                "id": 866,
                "name": "ParameterList",
                "src": "1100:9:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 866
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$9319",
                                  "typeString": "contract IPopulousGovernanceV2"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address"
                                },
                                "id": 867,
                                "name": "ElementaryTypeName",
                                "src": "1127:7:5"
                              }
                            ],
                            "id": 868,
                            "name": "ElementaryTypeNameExpression",
                            "src": "1127:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 795,
                              "type": "contract IPopulousGovernanceV2",
                              "value": "governance"
                            },
                            "id": 869,
                            "name": "Identifier",
                            "src": "1135:10:5"
                          }
                        ],
                        "id": 870,
                        "name": "FunctionCall",
                        "src": "1127:19:5"
                      }
                    ],
                    "id": 871,
                    "name": "Return",
                    "src": "1120:26:5"
                  }
                ],
                "id": 872,
                "name": "Block",
                "src": "1110:43:5"
              }
            ],
            "id": 873,
            "name": "FunctionDefinition",
            "src": "1068:85:5"
          },
          {
            "attributes": {
              "functionSelector": "8f10b2e0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPXT",
              "scope": 1034,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 874,
                "name": "ParameterList",
                "src": "1174:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 884,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 875,
                        "name": "ElementaryTypeName",
                        "src": "1192:7:5"
                      }
                    ],
                    "id": 876,
                    "name": "VariableDeclaration",
                    "src": "1192:7:5"
                  }
                ],
                "id": 877,
                "name": "ParameterList",
                "src": "1191:9:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 877
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$635",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address"
                                },
                                "id": 878,
                                "name": "ElementaryTypeName",
                                "src": "1218:7:5"
                              }
                            ],
                            "id": 879,
                            "name": "ElementaryTypeNameExpression",
                            "src": "1218:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 793,
                              "type": "contract ERC20",
                              "value": "pxtToken"
                            },
                            "id": 880,
                            "name": "Identifier",
                            "src": "1226:8:5"
                          }
                        ],
                        "id": 881,
                        "name": "FunctionCall",
                        "src": "1218:17:5"
                      }
                    ],
                    "id": 882,
                    "name": "Return",
                    "src": "1211:24:5"
                  }
                ],
                "id": 883,
                "name": "Block",
                "src": "1201:41:5"
              }
            ],
            "id": 884,
            "name": "FunctionDefinition",
            "src": "1159:83:5"
          },
          {
            "attributes": {
              "functionSelector": "d0e30db0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "deposit",
              "scope": 1034,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 885,
                "name": "ParameterList",
                "src": "1264:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 886,
                "name": "ParameterList",
                "src": "1274:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        888
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "balance",
                          "scope": 940,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 887,
                            "name": "ElementaryTypeName",
                            "src": "1284:7:5"
                          }
                        ],
                        "id": 888,
                        "name": "VariableDeclaration",
                        "src": "1284:15:5"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 256,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 793,
                                  "type": "contract ERC20",
                                  "value": "pxtToken"
                                },
                                "id": 889,
                                "name": "Identifier",
                                "src": "1302:8:5"
                              }
                            ],
                            "id": 890,
                            "name": "MemberAccess",
                            "src": "1302:18:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 891,
                                "name": "Identifier",
                                "src": "1321:3:5"
                              }
                            ],
                            "id": 892,
                            "name": "MemberAccess",
                            "src": "1321:10:5"
                          }
                        ],
                        "id": 893,
                        "name": "FunctionCall",
                        "src": "1302:30:5"
                      }
                    ],
                    "id": 894,
                    "name": "VariableDeclarationStatement",
                    "src": "1284:48:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1",
                                  "typeString": "literal_string \"MockVotingToken: PXT balance must be above 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 895,
                            "name": "Identifier",
                            "src": "1342:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 888,
                                  "type": "uint256",
                                  "value": "balance"
                                },
                                "id": 896,
                                "name": "Identifier",
                                "src": "1350:7:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 897,
                                "name": "Literal",
                                "src": "1360:1:5"
                              }
                            ],
                            "id": 898,
                            "name": "BinaryOperation",
                            "src": "1350:11:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a205058542062616c616e6365206d7573742062652061626f76652030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: PXT balance must be above 0\"",
                              "value": "MockVotingToken: PXT balance must be above 0"
                            },
                            "id": 899,
                            "name": "Literal",
                            "src": "1363:46:5"
                          }
                        ],
                        "id": 900,
                        "name": "FunctionCall",
                        "src": "1342:68:5"
                      }
                    ],
                    "id": 901,
                    "name": "ExpressionStatement",
                    "src": "1342:68:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b",
                                  "typeString": "literal_string \"MockVotingToken: Voting token balance must be 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 902,
                            "name": "Identifier",
                            "src": "1420:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 256,
                                      "type": "function (address) view returns (uint256)",
                                      "value": "balanceOf"
                                    },
                                    "id": 903,
                                    "name": "Identifier",
                                    "src": "1428:9:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 904,
                                        "name": "Identifier",
                                        "src": "1438:3:5"
                                      }
                                    ],
                                    "id": 905,
                                    "name": "MemberAccess",
                                    "src": "1438:10:5"
                                  }
                                ],
                                "id": 906,
                                "name": "FunctionCall",
                                "src": "1428:21:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 907,
                                "name": "Literal",
                                "src": "1453:1:5"
                              }
                            ],
                            "id": 908,
                            "name": "BinaryOperation",
                            "src": "1428:26:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20566f74696e6720746f6b656e2062616c616e6365206d7573742062652030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Voting token balance must be 0\"",
                              "value": "MockVotingToken: Voting token balance must be 0"
                            },
                            "id": 909,
                            "name": "Literal",
                            "src": "1456:49:5"
                          }
                        ],
                        "id": 910,
                        "name": "FunctionCall",
                        "src": "1420:86:5"
                      }
                    ],
                    "id": 911,
                    "name": "ExpressionStatement",
                    "src": "1420:86:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322",
                                  "typeString": "literal_string \"MockVotingToken: TransferFrom failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 912,
                            "name": "Identifier",
                            "src": "1516:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "transferFrom",
                                      "referencedDeclaration": 353,
                                      "type": "function (address,address,uint256) external returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 793,
                                          "type": "contract ERC20",
                                          "value": "pxtToken"
                                        },
                                        "id": 913,
                                        "name": "Identifier",
                                        "src": "1537:8:5"
                                      }
                                    ],
                                    "id": 914,
                                    "name": "MemberAccess",
                                    "src": "1537:21:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 915,
                                        "name": "Identifier",
                                        "src": "1559:3:5"
                                      }
                                    ],
                                    "id": 916,
                                    "name": "MemberAccess",
                                    "src": "1559:10:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_MockVotingToken_$1034",
                                              "typeString": "contract MockVotingToken"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "address"
                                            },
                                            "id": 917,
                                            "name": "ElementaryTypeName",
                                            "src": "1571:7:5"
                                          }
                                        ],
                                        "id": 918,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1571:7:5"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -28,
                                          "type": "contract MockVotingToken",
                                          "value": "this"
                                        },
                                        "id": 919,
                                        "name": "Identifier",
                                        "src": "1579:4:5"
                                      }
                                    ],
                                    "id": 920,
                                    "name": "FunctionCall",
                                    "src": "1571:13:5"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 888,
                                      "type": "uint256",
                                      "value": "balance"
                                    },
                                    "id": 921,
                                    "name": "Identifier",
                                    "src": "1586:7:5"
                                  }
                                ],
                                "id": 922,
                                "name": "FunctionCall",
                                "src": "1537:57:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 923,
                                "name": "Literal",
                                "src": "1598:4:5"
                              }
                            ],
                            "id": 924,
                            "name": "BinaryOperation",
                            "src": "1537:65:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a205472616e7366657246726f6d206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: TransferFrom failed\"",
                              "value": "MockVotingToken: TransferFrom failed"
                            },
                            "id": 925,
                            "name": "Literal",
                            "src": "1616:38:5"
                          }
                        ],
                        "id": 926,
                        "name": "FunctionCall",
                        "src": "1516:148:5"
                      }
                    ],
                    "id": 927,
                    "name": "ExpressionStatement",
                    "src": "1516:148:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 514,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 928,
                            "name": "Identifier",
                            "src": "1674:5:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 929,
                                "name": "Identifier",
                                "src": "1680:3:5"
                              }
                            ],
                            "id": 930,
                            "name": "MemberAccess",
                            "src": "1680:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 888,
                              "type": "uint256",
                              "value": "balance"
                            },
                            "id": 931,
                            "name": "Identifier",
                            "src": "1692:7:5"
                          }
                        ],
                        "id": 932,
                        "name": "FunctionCall",
                        "src": "1674:26:5"
                      }
                    ],
                    "id": 933,
                    "name": "ExpressionStatement",
                    "src": "1674:26:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 810,
                              "type": "function (address,uint256)",
                              "value": "Deposit"
                            },
                            "id": 934,
                            "name": "Identifier",
                            "src": "1715:7:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 935,
                                "name": "Identifier",
                                "src": "1723:3:5"
                              }
                            ],
                            "id": 936,
                            "name": "MemberAccess",
                            "src": "1723:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 888,
                              "type": "uint256",
                              "value": "balance"
                            },
                            "id": 937,
                            "name": "Identifier",
                            "src": "1735:7:5"
                          }
                        ],
                        "id": 938,
                        "name": "FunctionCall",
                        "src": "1715:28:5"
                      }
                    ],
                    "id": 939,
                    "name": "EmitStatement",
                    "src": "1710:33:5"
                  }
                ],
                "id": 940,
                "name": "Block",
                "src": "1274:476:5"
              }
            ],
            "id": 941,
            "name": "FunctionDefinition",
            "src": "1248:502:5"
          },
          {
            "attributes": {
              "functionSelector": "be040fb0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "redeem",
              "scope": 1034,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 942,
                "name": "ParameterList",
                "src": "1771:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 943,
                "name": "ParameterList",
                "src": "1781:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        945
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "govBalance",
                          "scope": 1016,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 944,
                            "name": "ElementaryTypeName",
                            "src": "1791:7:5"
                          }
                        ],
                        "id": 945,
                        "name": "VariableDeclaration",
                        "src": "1791:18:5"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 256,
                              "type": "function (address) view returns (uint256)",
                              "value": "balanceOf"
                            },
                            "id": 946,
                            "name": "Identifier",
                            "src": "1812:9:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 947,
                                "name": "Identifier",
                                "src": "1822:3:5"
                              }
                            ],
                            "id": 948,
                            "name": "MemberAccess",
                            "src": "1822:10:5"
                          }
                        ],
                        "id": 949,
                        "name": "FunctionCall",
                        "src": "1812:21:5"
                      }
                    ],
                    "id": 950,
                    "name": "VariableDeclarationStatement",
                    "src": "1791:42:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 560,
                              "type": "function (address,uint256)",
                              "value": "_burn"
                            },
                            "id": 951,
                            "name": "Identifier",
                            "src": "1843:5:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 952,
                                "name": "Identifier",
                                "src": "1849:3:5"
                              }
                            ],
                            "id": 953,
                            "name": "MemberAccess",
                            "src": "1849:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 945,
                              "type": "uint256",
                              "value": "govBalance"
                            },
                            "id": 954,
                            "name": "Identifier",
                            "src": "1861:10:5"
                          }
                        ],
                        "id": 955,
                        "name": "FunctionCall",
                        "src": "1843:29:5"
                      }
                    ],
                    "id": 956,
                    "name": "ExpressionStatement",
                    "src": "1843:29:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            958
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 1003,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 957,
                                "name": "ElementaryTypeName",
                                "src": "1888:7:5"
                              }
                            ],
                            "id": 958,
                            "name": "VariableDeclaration",
                            "src": "1888:9:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 959,
                            "name": "Literal",
                            "src": "1900:1:5"
                          }
                        ],
                        "id": 960,
                        "name": "VariableDeclarationStatement",
                        "src": "1888:13:5"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 958,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 961,
                            "name": "Identifier",
                            "src": "1903:1:5"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "getProposalsCount",
                                  "referencedDeclaration": 9292,
                                  "type": "function () view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 795,
                                      "type": "contract IPopulousGovernanceV2",
                                      "value": "governance"
                                    },
                                    "id": 962,
                                    "name": "Identifier",
                                    "src": "1907:10:5"
                                  }
                                ],
                                "id": 963,
                                "name": "MemberAccess",
                                "src": "1907:28:5"
                              }
                            ],
                            "id": 964,
                            "name": "FunctionCall",
                            "src": "1907:30:5"
                          }
                        ],
                        "id": 965,
                        "name": "BinaryOperation",
                        "src": "1903:34:5"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 958,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 966,
                                "name": "Identifier",
                                "src": "1939:1:5"
                              }
                            ],
                            "id": 967,
                            "name": "UnaryOperation",
                            "src": "1939:3:5"
                          }
                        ],
                        "id": 968,
                        "name": "ExpressionStatement",
                        "src": "1939:3:5"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                970
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "state",
                                  "scope": 1002,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 969,
                                    "name": "ElementaryTypeName",
                                    "src": "1958:7:5"
                                  }
                                ],
                                "id": 970,
                                "name": "VariableDeclaration",
                                "src": "1958:13:5"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_ProposalState_$8992",
                                          "typeString": "enum IPopulousGovernanceV2.ProposalState"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256"
                                        },
                                        "id": 971,
                                        "name": "ElementaryTypeName",
                                        "src": "1974:7:5"
                                      }
                                    ],
                                    "id": 972,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1974:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "enum IPopulousGovernanceV2.ProposalState",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getProposalState",
                                          "referencedDeclaration": 9318,
                                          "type": "function (uint256) view external returns (enum IPopulousGovernanceV2.ProposalState)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 795,
                                              "type": "contract IPopulousGovernanceV2",
                                              "value": "governance"
                                            },
                                            "id": 973,
                                            "name": "Identifier",
                                            "src": "1982:10:5"
                                          }
                                        ],
                                        "id": 974,
                                        "name": "MemberAccess",
                                        "src": "1982:27:5"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 958,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 975,
                                        "name": "Identifier",
                                        "src": "2010:1:5"
                                      }
                                    ],
                                    "id": 976,
                                    "name": "FunctionCall",
                                    "src": "1982:30:5"
                                  }
                                ],
                                "id": 977,
                                "name": "FunctionCall",
                                "src": "1974:39:5"
                              }
                            ],
                            "id": 978,
                            "name": "VariableDeclarationStatement",
                            "src": "1958:55:5"
                          },
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint248",
                                    "typeString": "uint248"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "votingPower",
                                      "referencedDeclaration": 8996,
                                      "type": "uint248"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "struct IPopulousGovernanceV2.Vote memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "getVoteOnProposal",
                                              "referencedDeclaration": 9310,
                                              "type": "function (uint256,address) view external returns (struct IPopulousGovernanceV2.Vote memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 795,
                                                  "type": "contract IPopulousGovernanceV2",
                                                  "value": "governance"
                                                },
                                                "id": 979,
                                                "name": "Identifier",
                                                "src": "2031:10:5"
                                              }
                                            ],
                                            "id": 980,
                                            "name": "MemberAccess",
                                            "src": "2031:28:5"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 958,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 981,
                                            "name": "Identifier",
                                            "src": "2060:1:5"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -15,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 982,
                                                "name": "Identifier",
                                                "src": "2063:3:5"
                                              }
                                            ],
                                            "id": 983,
                                            "name": "MemberAccess",
                                            "src": "2063:10:5"
                                          }
                                        ],
                                        "id": 984,
                                        "name": "FunctionCall",
                                        "src": "2031:43:5"
                                      }
                                    ],
                                    "id": 985,
                                    "name": "MemberAccess",
                                    "src": "2031:55:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 986,
                                    "name": "Literal",
                                    "src": "2089:1:5"
                                  }
                                ],
                                "id": 987,
                                "name": "BinaryOperation",
                                "src": "2031:59:5"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                {
                                                  "typeIdentifier": "t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468",
                                                  "typeString": "literal_string \"MockVotingToken: User cannot have vote on pending or active proposal\""
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                -18,
                                                -18
                                              ],
                                              "referencedDeclaration": -18,
                                              "type": "function (bool,string memory) pure",
                                              "value": "require"
                                            },
                                            "id": 988,
                                            "name": "Identifier",
                                            "src": "2110:7:5"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "||",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "!=",
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 970,
                                                          "type": "uint256",
                                                          "value": "state"
                                                        },
                                                        "id": 989,
                                                        "name": "Identifier",
                                                        "src": "2166:5:5"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "30",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 0",
                                                          "value": "0"
                                                        },
                                                        "id": 990,
                                                        "name": "Literal",
                                                        "src": "2175:1:5"
                                                      }
                                                    ],
                                                    "id": 991,
                                                    "name": "BinaryOperation",
                                                    "src": "2166:10:5"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "!=",
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 970,
                                                          "type": "uint256",
                                                          "value": "state"
                                                        },
                                                        "id": 992,
                                                        "name": "Identifier",
                                                        "src": "2180:5:5"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "32",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 2",
                                                          "value": "2"
                                                        },
                                                        "id": 993,
                                                        "name": "Literal",
                                                        "src": "2189:1:5"
                                                      }
                                                    ],
                                                    "id": 994,
                                                    "name": "BinaryOperation",
                                                    "src": "2180:10:5"
                                                  }
                                                ],
                                                "id": 995,
                                                "name": "BinaryOperation",
                                                "src": "2166:24:5"
                                              }
                                            ],
                                            "id": 996,
                                            "name": "TupleExpression",
                                            "src": "2140:72:5"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20557365722063616e6e6f74206861766520766f7465206f6e2070656e64696e67206f72206163746976652070726f706f73616c",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "string",
                                              "type": "literal_string \"MockVotingToken: User cannot have vote on pending or active proposal\"",
                                              "value": "MockVotingToken: User cannot have vote on pending or active proposal"
                                            },
                                            "id": 997,
                                            "name": "Literal",
                                            "src": "2234:70:5"
                                          }
                                        ],
                                        "id": 998,
                                        "name": "FunctionCall",
                                        "src": "2110:212:5"
                                      }
                                    ],
                                    "id": 999,
                                    "name": "ExpressionStatement",
                                    "src": "2110:212:5"
                                  }
                                ],
                                "id": 1000,
                                "name": "Block",
                                "src": "2092:245:5"
                              }
                            ],
                            "id": 1001,
                            "name": "IfStatement",
                            "src": "2027:310:5"
                          }
                        ],
                        "id": 1002,
                        "name": "Block",
                        "src": "1944:403:5"
                      }
                    ],
                    "id": 1003,
                    "name": "ForStatement",
                    "src": "1883:464:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844",
                                  "typeString": "literal_string \"MockVotingToken: Transfer failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1004,
                            "name": "Identifier",
                            "src": "2357:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "transfer",
                                      "referencedDeclaration": 277,
                                      "type": "function (address,uint256) external returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 793,
                                          "type": "contract ERC20",
                                          "value": "pxtToken"
                                        },
                                        "id": 1005,
                                        "name": "Identifier",
                                        "src": "2378:8:5"
                                      }
                                    ],
                                    "id": 1006,
                                    "name": "MemberAccess",
                                    "src": "2378:17:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 1007,
                                        "name": "Identifier",
                                        "src": "2396:3:5"
                                      }
                                    ],
                                    "id": 1008,
                                    "name": "MemberAccess",
                                    "src": "2396:10:5"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 945,
                                      "type": "uint256",
                                      "value": "govBalance"
                                    },
                                    "id": 1009,
                                    "name": "Identifier",
                                    "src": "2408:10:5"
                                  }
                                ],
                                "id": 1010,
                                "name": "FunctionCall",
                                "src": "2378:41:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 1011,
                                "name": "Literal",
                                "src": "2423:4:5"
                              }
                            ],
                            "id": 1012,
                            "name": "BinaryOperation",
                            "src": "2378:49:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a205472616e73666572206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Transfer failed\"",
                              "value": "MockVotingToken: Transfer failed"
                            },
                            "id": 1013,
                            "name": "Literal",
                            "src": "2441:34:5"
                          }
                        ],
                        "id": 1014,
                        "name": "FunctionCall",
                        "src": "2357:128:5"
                      }
                    ],
                    "id": 1015,
                    "name": "ExpressionStatement",
                    "src": "2357:128:5"
                  }
                ],
                "id": 1016,
                "name": "Block",
                "src": "1781:711:5"
              }
            ],
            "id": 1017,
            "name": "FunctionDefinition",
            "src": "1756:736:5"
          },
          {
            "attributes": {
              "functionSelector": "c2ffbb91",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPowerAtBlock",
              "scope": 1034,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 1033,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1018,
                        "name": "ElementaryTypeName",
                        "src": "2614:7:5"
                      }
                    ],
                    "id": 1019,
                    "name": "VariableDeclaration",
                    "src": "2614:12:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "scope": 1033,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1020,
                        "name": "ElementaryTypeName",
                        "src": "2636:7:5"
                      }
                    ],
                    "id": 1021,
                    "name": "VariableDeclaration",
                    "src": "2636:19:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "delegationType",
                      "scope": 1033,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum MockVotingToken.DelegationType",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "DelegationType",
                          "referencedDeclaration": 791,
                          "type": "enum MockVotingToken.DelegationType"
                        },
                        "id": 1022,
                        "name": "UserDefinedTypeName",
                        "src": "2665:14:5"
                      }
                    ],
                    "id": 1023,
                    "name": "VariableDeclaration",
                    "src": "2665:29:5"
                  }
                ],
                "id": 1024,
                "name": "ParameterList",
                "src": "2604:96:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1033,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1025,
                        "name": "ElementaryTypeName",
                        "src": "2724:7:5"
                      }
                    ],
                    "id": 1026,
                    "name": "VariableDeclaration",
                    "src": "2724:7:5"
                  }
                ],
                "id": 1027,
                "name": "ParameterList",
                "src": "2723:9:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1027
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 256,
                              "type": "function (address) view returns (uint256)",
                              "value": "balanceOf"
                            },
                            "id": 1028,
                            "name": "Identifier",
                            "src": "2750:9:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1019,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 1029,
                            "name": "Identifier",
                            "src": "2760:4:5"
                          }
                        ],
                        "id": 1030,
                        "name": "FunctionCall",
                        "src": "2750:15:5"
                      }
                    ],
                    "id": 1031,
                    "name": "Return",
                    "src": "2743:22:5"
                  }
                ],
                "id": 1032,
                "name": "Block",
                "src": "2733:39:5"
              }
            ],
            "id": 1033,
            "name": "FunctionDefinition",
            "src": "2580:192:5"
          }
        ],
        "id": 1034,
        "name": "ContractDefinition",
        "src": "255:2519:5"
      }
    ],
    "id": 1035,
    "name": "SourceUnit",
    "src": "0:2774:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-04-19T19:49:49.780Z",
  "devdoc": {
    "details": "Implements ERC20 minting logic",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MockVotingToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}