{
  "contractName": "MockVotingToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pxt",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "contract IPopulousGovernanceV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pxtToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPXT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "enum MockVotingToken.DelegationType",
          "name": "delegationType",
          "type": "uint8"
        }
      ],
      "name": "getPowerAtBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pxt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPXT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum MockVotingToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"contract IPopulousGovernanceV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pxtToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 minting logic\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"ERC20Mintable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol\":\"MockVotingToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol\":{\"keccak256\":\"0xe0c517bf9078a763269f3e8f1ec0940788692163491aab614641d4c34c22e6d5\",\"urls\":[\"bzz-raw://2003d8c68c16a6cb1b42c3a746ced842112a19714460cfb94e51395a214d7edd\",\"dweb:/ipfs/QmQ2fAeqfpahSEiySGT8GMkB9viLvpSb8U1mA7xAgdvfEW\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol\":{\"keccak256\":\"0xb2a4f17096f4459c111e2028c107ece46b59005f70d086fbdf28e4dad8734921\",\"urls\":[\"bzz-raw://4cb6aa22dc035994baa69b8d80046e4421d662476468f8d73df3a34d20336a63\",\"dweb:/ipfs/QmZWoWZo63f5saHoNUH38RwXKzaJ9QiRKTrNXdoBDGgNWY\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IExecutorWithTimelock.sol\":{\"keccak256\":\"0xe27ae25a8abbeaf73dafda3cf0917a32ba43b3d81bd96515eb8ecf1885e62661\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://853b9bfaff76bf4f22a1e63025340c9931734a2c8120658ed9eaf92fa1651483\",\"dweb:/ipfs/Qmcx4UjPCZTwoHWh3AMeWj43U5Br8FVBn4DFg2zqpoKuX7\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol\":{\"keccak256\":\"0x9abedeacf8546d2ecc6286d815bf232c59acacc24c3314a65b3c23885278f332\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://66815e35f4140a4929237ebb1285e5cab7df38f707eafb1853df417548aa6e60\",\"dweb:/ipfs/Qmba7wctr5qjUaXK3evf3yfn6yVaW7XT6p8xQrBsLGtEDw\"]}},\"version\":1}",
  "bytecode": "0x600860055560c0604052600260808190526111d560f21b60a09081526200002a9160069190620000fa565b5060408051808201909152601a8082527f506f70756c6f757320476f7665726e616e636520546f6b656e7300000000000060209092019182526200007191600791620000fa565b503480156200007f57600080fd5b506040516200157e3803806200157e833981016040819052620000a291620001a6565b6001600160a01b038116620000d45760405162461bcd60e51b8152600401620000cb90620001d6565b60405180910390fd5b600380546001600160a01b0319166001600160a01b03929092169190911790556200021a565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200013257600085556200017d565b82601f106200014d57805160ff19168380011785556200017d565b828001600101855582156200017d579182015b828111156200017d57825182559160200191906001019062000160565b506200018b9291506200018f565b5090565b5b808211156200018b576000815560010162000190565b600060208284031215620001b8578081fd5b81516001600160a01b0381168114620001cf578182fd5b9392505050565b60208082526024908201527f4d6f636b566f74696e67546f6b656e3a20496e76616c696420707874206164646040820152637265737360e01b606082015260800190565b611354806200022a6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638f10b2e0116100ad578063be040fb011610071578063be040fb014610215578063c2ffbb911461021f578063cfad57a214610232578063d0e30db014610245578063dd62ed3e1461024d57610121565b80638f10b2e0146101d757806395d89b41146101df578063a2ab2dee146101e7578063a457c2d7146101ef578063a9059cbb1461020257610121565b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a157806339509351146101a95780635aa6e675146101bc57806370a08231146101c457610121565b806306fdde0314610126578063095ea7b3146101445780630e3443761461016457806318160ddd14610179575b600080fd5b61012e610260565b60405161013b9190611033565b60405180910390f35b610157610152366004610eba565b6102ee565b60405161013b9190611028565b61016c610304565b60405161013b9190610fd7565b610181610313565b60405161013b919061124f565b61015761019c366004610e7f565b610319565b61018161036a565b6101576101b7366004610eba565b610370565b61016c6103a6565b6101816101d2366004610e33565b6103b5565b61016c6103d4565b61012e6103e3565b61016c61043e565b6101576101fd366004610eba565b61044d565b610157610210366004610eba565b610483565b61021d610490565b005b61018161022d366004610ee3565b610737565b61021d610240366004610e33565b61074a565b61021d610792565b61018161025b366004610e4d565b610950565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b505050505081565b60006102fb33848461097b565b50600192915050565b6003546001600160a01b031681565b60025490565b6000610326848484610a67565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461036091869161035b9086610b9d565b61097b565b5060019392505050565b60055481565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102fb91859061035b9086610bfa565b6004546001600160a01b031681565b6001600160a01b0381166000908152602081905260409020545b919050565b6003546001600160a01b031690565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102e65780601f106102bb576101008083540402835291602001916102e6565b6004546001600160a01b031690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102fb91859061035b9086610b9d565b60006102fb338484610a67565b600061049b336103b5565b90506104a73382610c5b565b60005b60048054604080516398e527d360e01b815290516001600160a01b03909216926398e527d3928282019260209290829003018186803b1580156104ec57600080fd5b505afa158015610500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105249190610fbf565b81101561068e5760048054604051639080936f60e01b81526000926001600160a01b0390921691639080936f9161055d9186910161124f565b60206040518083038186803b15801561057557600080fd5b505afa158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad9190610f3f565b60078111156105b857fe5b60048054604051634185ff8360e01b81529293506000926001600160a01b0390911691634185ff83916105ef918791339101611258565b604080518083038186803b15801561060657600080fd5b505afa15801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e9190610f5e565b602001516001600160f81b031611156106855780151580610660575080600214155b6106855760405162461bcd60e51b815260040161067c9061110a565b60405180910390fd5b506001016104aa565b5060035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906106c1903390859060040161100f565b602060405180830381600087803b1580156106db57600080fd5b505af11580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190610f25565b15156001146107345760405162461bcd60e51b815260040161067c906110d5565b50565b6000610742846103b5565b949350505050565b6001600160a01b0381166107705760405162461bcd60e51b815260040161067c90611174565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906107c3903390600401610fd7565b60206040518083038186803b1580156107db57600080fd5b505afa1580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108139190610fbf565b9050600081116108355760405162461bcd60e51b815260040161067c90611203565b61083e336103b5565b1561085b5760405162461bcd60e51b815260040161067c90611086565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061088f90339030908690600401610feb565b602060405180830381600087803b1580156108a957600080fd5b505af11580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190610f25565b15156001146109025760405162461bcd60e51b815260040161067c906111bf565b61090c3382610d28565b336001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610945919061124f565b60405180910390a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166109c05760405162461bcd60e51b81526004018080602001828103825260248152602001806112fb6024913960400191505060405180910390fd5b6001600160a01b038216610a055760405162461bcd60e51b81526004018080602001828103825260228152602001806112936022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610aac5760405162461bcd60e51b81526004018080602001828103825260258152602001806112d66025913960400191505060405180910390fd5b6001600160a01b038216610af15760405162461bcd60e51b81526004018080602001828103825260238152602001806112706023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054610b149082610b9d565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b439082610bfa565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610bf4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610c54576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610ca05760405162461bcd60e51b81526004018080602001828103825260218152602001806112b56021913960400191505060405180910390fd5b600254610cad9082610b9d565b6002556001600160a01b038216600090815260208190526040902054610cd39082610b9d565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038216610d83576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610d909082610bfa565b6002556001600160a01b038216600090815260208190526040902054610db69082610bfa565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b80356001600160a01b03811681146103cf57600080fd5b805180151581146103cf57600080fd5b600060208284031215610e44578081fd5b610c5482610e0c565b60008060408385031215610e5f578081fd5b610e6883610e0c565b9150610e7660208401610e0c565b90509250929050565b600080600060608486031215610e93578081fd5b610e9c84610e0c565b9250610eaa60208501610e0c565b9150604084013590509250925092565b60008060408385031215610ecc578182fd5b610ed583610e0c565b946020939093013593505050565b600080600060608486031215610ef7578283fd5b610f0084610e0c565b925060208401359150604084013560028110610f1a578182fd5b809150509250925092565b600060208284031215610f36578081fd5b610c5482610e23565b600060208284031215610f50578081fd5b815160088110610c54578182fd5b600060408284031215610f6f578081fd5b6040516040810181811067ffffffffffffffff82111715610f8c57fe5b604052610f9883610e23565b815260208301516001600160f81b0381168114610fb3578283fd5b60208201529392505050565b600060208284031215610fd0578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561105f57858101830151858201604001528201611043565b818111156110705783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602f908201527f4d6f636b566f74696e67546f6b656e3a20566f74696e6720746f6b656e20626160408201526e06c616e6365206d757374206265203608c1b606082015260800190565b6020808252818101527f4d6f636b566f74696e67546f6b656e3a205472616e73666572206661696c6564604082015260600190565b60208082526044908201527f4d6f636b566f74696e67546f6b656e3a20557365722063616e6e6f742068617660408201527f6520766f7465206f6e2070656e64696e67206f72206163746976652070726f706060820152631bdcd85b60e21b608082015260a00190565b6020808252602b908201527f4d6f636b566f74696e67546f6b656e3a20496e76616c696420676f7665726e6160408201526a6e6365206164647265737360a81b606082015260800190565b60208082526024908201527f4d6f636b566f74696e67546f6b656e3a205472616e7366657246726f6d2066616040820152631a5b195960e21b606082015260800190565b6020808252602c908201527f4d6f636b566f74696e67546f6b656e3a205058542062616c616e6365206d757360408201526b0742062652061626f766520360a41b606082015260800190565b90815260200190565b9182526001600160a01b031660208201526040019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a2646970667358221220dcdee62352ce7790d3ea60450895510279734febde7fad4b6318c3efd4b0b03064736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80638f10b2e0116100ad578063be040fb011610071578063be040fb014610215578063c2ffbb911461021f578063cfad57a214610232578063d0e30db014610245578063dd62ed3e1461024d57610121565b80638f10b2e0146101d757806395d89b41146101df578063a2ab2dee146101e7578063a457c2d7146101ef578063a9059cbb1461020257610121565b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a157806339509351146101a95780635aa6e675146101bc57806370a08231146101c457610121565b806306fdde0314610126578063095ea7b3146101445780630e3443761461016457806318160ddd14610179575b600080fd5b61012e610260565b60405161013b9190611033565b60405180910390f35b610157610152366004610eba565b6102ee565b60405161013b9190611028565b61016c610304565b60405161013b9190610fd7565b610181610313565b60405161013b919061124f565b61015761019c366004610e7f565b610319565b61018161036a565b6101576101b7366004610eba565b610370565b61016c6103a6565b6101816101d2366004610e33565b6103b5565b61016c6103d4565b61012e6103e3565b61016c61043e565b6101576101fd366004610eba565b61044d565b610157610210366004610eba565b610483565b61021d610490565b005b61018161022d366004610ee3565b610737565b61021d610240366004610e33565b61074a565b61021d610792565b61018161025b366004610e4d565b610950565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b505050505081565b60006102fb33848461097b565b50600192915050565b6003546001600160a01b031681565b60025490565b6000610326848484610a67565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461036091869161035b9086610b9d565b61097b565b5060019392505050565b60055481565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102fb91859061035b9086610bfa565b6004546001600160a01b031681565b6001600160a01b0381166000908152602081905260409020545b919050565b6003546001600160a01b031690565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102e65780601f106102bb576101008083540402835291602001916102e6565b6004546001600160a01b031690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102fb91859061035b9086610b9d565b60006102fb338484610a67565b600061049b336103b5565b90506104a73382610c5b565b60005b60048054604080516398e527d360e01b815290516001600160a01b03909216926398e527d3928282019260209290829003018186803b1580156104ec57600080fd5b505afa158015610500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105249190610fbf565b81101561068e5760048054604051639080936f60e01b81526000926001600160a01b0390921691639080936f9161055d9186910161124f565b60206040518083038186803b15801561057557600080fd5b505afa158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad9190610f3f565b60078111156105b857fe5b60048054604051634185ff8360e01b81529293506000926001600160a01b0390911691634185ff83916105ef918791339101611258565b604080518083038186803b15801561060657600080fd5b505afa15801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e9190610f5e565b602001516001600160f81b031611156106855780151580610660575080600214155b6106855760405162461bcd60e51b815260040161067c9061110a565b60405180910390fd5b506001016104aa565b5060035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906106c1903390859060040161100f565b602060405180830381600087803b1580156106db57600080fd5b505af11580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190610f25565b15156001146107345760405162461bcd60e51b815260040161067c906110d5565b50565b6000610742846103b5565b949350505050565b6001600160a01b0381166107705760405162461bcd60e51b815260040161067c90611174565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906107c3903390600401610fd7565b60206040518083038186803b1580156107db57600080fd5b505afa1580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108139190610fbf565b9050600081116108355760405162461bcd60e51b815260040161067c90611203565b61083e336103b5565b1561085b5760405162461bcd60e51b815260040161067c90611086565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061088f90339030908690600401610feb565b602060405180830381600087803b1580156108a957600080fd5b505af11580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190610f25565b15156001146109025760405162461bcd60e51b815260040161067c906111bf565b61090c3382610d28565b336001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610945919061124f565b60405180910390a250565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166109c05760405162461bcd60e51b81526004018080602001828103825260248152602001806112fb6024913960400191505060405180910390fd5b6001600160a01b038216610a055760405162461bcd60e51b81526004018080602001828103825260228152602001806112936022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610aac5760405162461bcd60e51b81526004018080602001828103825260258152602001806112d66025913960400191505060405180910390fd5b6001600160a01b038216610af15760405162461bcd60e51b81526004018080602001828103825260238152602001806112706023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054610b149082610b9d565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b439082610bfa565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610bf4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610c54576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610ca05760405162461bcd60e51b81526004018080602001828103825260218152602001806112b56021913960400191505060405180910390fd5b600254610cad9082610b9d565b6002556001600160a01b038216600090815260208190526040902054610cd39082610b9d565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038216610d83576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610d909082610bfa565b6002556001600160a01b038216600090815260208190526040902054610db69082610bfa565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b80356001600160a01b03811681146103cf57600080fd5b805180151581146103cf57600080fd5b600060208284031215610e44578081fd5b610c5482610e0c565b60008060408385031215610e5f578081fd5b610e6883610e0c565b9150610e7660208401610e0c565b90509250929050565b600080600060608486031215610e93578081fd5b610e9c84610e0c565b9250610eaa60208501610e0c565b9150604084013590509250925092565b60008060408385031215610ecc578182fd5b610ed583610e0c565b946020939093013593505050565b600080600060608486031215610ef7578283fd5b610f0084610e0c565b925060208401359150604084013560028110610f1a578182fd5b809150509250925092565b600060208284031215610f36578081fd5b610c5482610e23565b600060208284031215610f50578081fd5b815160088110610c54578182fd5b600060408284031215610f6f578081fd5b6040516040810181811067ffffffffffffffff82111715610f8c57fe5b604052610f9883610e23565b815260208301516001600160f81b0381168114610fb3578283fd5b60208201529392505050565b600060208284031215610fd0578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561105f57858101830151858201604001528201611043565b818111156110705783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602f908201527f4d6f636b566f74696e67546f6b656e3a20566f74696e6720746f6b656e20626160408201526e06c616e6365206d757374206265203608c1b606082015260800190565b6020808252818101527f4d6f636b566f74696e67546f6b656e3a205472616e73666572206661696c6564604082015260600190565b60208082526044908201527f4d6f636b566f74696e67546f6b656e3a20557365722063616e6e6f742068617660408201527f6520766f7465206f6e2070656e64696e67206f72206163746976652070726f706060820152631bdcd85b60e21b608082015260a00190565b6020808252602b908201527f4d6f636b566f74696e67546f6b656e3a20496e76616c696420676f7665726e6160408201526a6e6365206164647265737360a81b606082015260800190565b60208082526024908201527f4d6f636b566f74696e67546f6b656e3a205472616e7366657246726f6d2066616040820152631a5b195960e21b606082015260800190565b6020808252602c908201527f4d6f636b566f74696e67546f6b656e3a205058542062616c616e6365206d757360408201526b0742062652061626f766520360a41b606082015260800190565b90815260200190565b9182526001600160a01b031660208201526040019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a2646970667358221220dcdee62352ce7790d3ea60450895510279734febde7fad4b6318c3efd4b0b03064736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:731:57",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:57",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:57"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:57"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:57",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:57",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:57"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:57"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:57"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:57"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:57"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:57",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:57",
                "type": ""
              }
            ],
            "src": "14:310:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:226:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "520:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "554:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "565:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "550:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "550:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:2:57",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "543:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "543:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "609:34:57",
                        "type": "",
                        "value": "MockVotingToken: Invalid pxt add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "664:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "675:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "660:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "660:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "680:6:57",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "653:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:34:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:34:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "696:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "708:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "719:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "704:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "696:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "480:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "494:4:57",
                "type": ""
              }
            ],
            "src": "329:400:57"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"MockVotingToken: Invalid pxt add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 57,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8580:57",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:57",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:57"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:57"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:57"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:57",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:57",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:57"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:57"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:57"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:57"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:57"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:57"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:57",
                "type": ""
              }
            ],
            "src": "14:175:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "253:107:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "263:22:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "278:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "272:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "272:13:57"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "263:5:57"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:57",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:57",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "307:5:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "328:5:57"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "321:6:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "321:13:57"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "314:6:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "314:21:57"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "304:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "304:32:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "297:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "297:40:57"
                  },
                  "nodeType": "YulIf",
                  "src": "294:2:57"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "232:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "243:5:57",
                "type": ""
              }
            ],
            "src": "194:166:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "435:128:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "481:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "490:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "498:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "483:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "483:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "483:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "456:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "465:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "452:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "452:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "477:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "448:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "448:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "445:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "516:41:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "547:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "526:20:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:31:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "401:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "412:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "424:6:57",
                "type": ""
              }
            ],
            "src": "365:198:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "655:187:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "701:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "710:6:57"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "718:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "703:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "703:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "703:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "676:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "685:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "736:41:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "767:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "746:20:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:31:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "736:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "786:50:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "821:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "832:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "817:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "817:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:20:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:40:57"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "786:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "613:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "624:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "636:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "644:6:57",
                "type": ""
              }
            ],
            "src": "568:274:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "951:238:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "997:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1006:6:57"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1014:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "999:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "999:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "999:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "972:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "981:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "968:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "968:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "993:2:57",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "964:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "961:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1032:41:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1063:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1042:20:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1042:31:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1032:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1082:50:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1117:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1128:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1113:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1113:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1092:20:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:40:57"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1082:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1141:42:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1168:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1179:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1164:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1164:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1151:12:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:32:57"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1141:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:57",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "940:6:57",
                "type": ""
              }
            ],
            "src": "847:342:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1281:179:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1327:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1336:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1344:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1329:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1329:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1329:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1302:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1298:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1298:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1323:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1294:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1294:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "1291:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1362:41:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1393:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1372:20:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1372:31:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1362:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1412:42:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1439:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1450:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1435:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1435:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1422:12:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1422:32:57"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1412:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1239:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1250:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1262:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1270:6:57",
                "type": ""
              }
            ],
            "src": "1194:266:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1587:316:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1633:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1642:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1650:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1635:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1635:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1635:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1608:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1617:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1604:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1604:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1629:2:57",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1600:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1600:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "1597:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1668:41:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1699:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1678:20:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:31:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1668:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1718:42:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1745:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1756:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1741:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1741:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1728:12:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1728:32:57"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1718:6:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1769:45:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1799:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1810:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1795:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1795:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1782:12:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:32:57"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1773:5:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1847:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1856:6:57"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1864:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1849:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1849:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1849:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1836:5:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:1:57",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1833:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1833:12:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1826:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:20:57"
                  },
                  "nodeType": "YulIf",
                  "src": "1823:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1882:15:57",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1892:5:57"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1882:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_enum$_DelegationType_$787",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1537:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1548:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1560:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1568:6:57",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1576:6:57",
                "type": ""
              }
            ],
            "src": "1465:438:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1986:136:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2032:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2041:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2049:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2034:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2034:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2034:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2007:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2016:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2003:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2028:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1999:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1999:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "1996:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2067:49:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2106:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bool_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2077:28:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2077:39:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2067:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1952:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1963:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1975:6:57",
                "type": ""
              }
            ],
            "src": "1908:214:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2226:199:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2272:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2281:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2289:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2274:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2274:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2274:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2247:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2256:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2243:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2243:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2268:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2239:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2236:2:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2307:29:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2326:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2320:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2320:16:57"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2311:5:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2369:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2378:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2386:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2371:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2371:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2371:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2358:5:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2365:1:57",
                            "type": "",
                            "value": "8"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2355:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2355:12:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2348:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:20:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2345:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2404:15:57",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2414:5:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2404:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_ProposalState_$8018_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2192:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2203:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2215:6:57",
                "type": ""
              }
            ],
            "src": "2127:298:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2533:535:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2579:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2588:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2596:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2581:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2581:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2581:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2554:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2563:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2550:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2550:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2575:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2546:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2543:2:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2614:23:57",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2634:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2628:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2628:9:57"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2618:6:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2646:33:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2668:6:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2676:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2664:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:15:57"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2650:10:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2754:13:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "2756:7:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2756:9:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2756:9:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2697:10:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2709:18:57",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2694:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:34:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2733:10:57"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2745:6:57"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2730:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2730:22:57"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2691:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2691:62:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2688:2:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2783:2:57",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2787:10:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2776:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2776:22:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2776:22:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2814:6:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2851:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2822:28:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2822:39:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2807:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2807:55:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2807:55:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2871:38:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2894:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2905:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2890:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2890:18:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2884:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2884:25:57"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2875:5:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2972:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2981:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2989:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2974:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2974:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2974:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2931:5:57"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2942:5:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2957:3:57",
                                        "type": "",
                                        "value": "248"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2962:1:57",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2953:3:57"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2953:11:57"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2966:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2949:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2949:19:57"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2938:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2938:31:57"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2928:2:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2928:42:57"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2921:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2921:50:57"
                  },
                  "nodeType": "YulIf",
                  "src": "2918:2:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3018:6:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3026:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3014:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:15:57"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3031:5:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3007:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3007:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3007:30:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3046:16:57",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3056:6:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3046:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Vote_$8023_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2499:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2510:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2522:6:57",
                "type": ""
              }
            ],
            "src": "2430:638:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3154:113:57",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3200:26:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3209:6:57"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3217:6:57"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3202:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3202:22:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3202:22:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3175:7:57"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3184:9:57"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3171:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3171:23:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3196:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3167:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3167:32:57"
                  },
                  "nodeType": "YulIf",
                  "src": "3164:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3235:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3251:9:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3245:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3245:16:57"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3235:6:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3120:9:57",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3131:7:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3143:6:57",
                "type": ""
              }
            ],
            "src": "3073:194:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3373:102:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3383:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3395:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3406:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3391:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3391:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3383:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3425:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3440:6:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3456:3:57",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3461:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3452:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3452:11:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3465:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3448:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3448:19:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3436:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3436:32:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3418:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3418:51:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3418:51:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3353:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3364:4:57",
                "type": ""
              }
            ],
            "src": "3272:203:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3589:102:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3599:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3611:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3622:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3607:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3607:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3599:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3641:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3656:6:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3672:3:57",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3677:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3668:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3668:11:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3681:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3664:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3664:19:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3652:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3652:32:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3634:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3634:51:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3634:51:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3558:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3569:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3580:4:57",
                "type": ""
              }
            ],
            "src": "3480:211:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3861:218:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3871:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3883:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3894:2:57",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3879:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3879:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3871:4:57"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3906:29:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3924:3:57",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3929:1:57",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3920:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3920:11:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3933:1:57",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3916:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3916:19:57"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3910:2:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3951:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3966:6:57"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3974:2:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3962:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3962:15:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3944:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3944:34:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3944:34:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3998:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4009:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3994:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3994:18:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4018:6:57"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4026:2:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4014:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4014:15:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3987:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3987:43:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3987:43:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4050:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4061:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4046:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4046:18:57"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4066:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4039:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4039:34:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4039:34:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3814:9:57",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3825:6:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3833:6:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3841:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3852:4:57",
                "type": ""
              }
            ],
            "src": "3696:383:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4221:145:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4231:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4243:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4254:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4239:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4239:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4231:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4273:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4288:6:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4304:3:57",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4309:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4300:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4300:11:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4313:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4296:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4296:19:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4284:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4284:32:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4266:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:51:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4266:51:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4337:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4348:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4333:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4333:18:57"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4353:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4326:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4326:34:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4326:34:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4182:9:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4193:6:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4201:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4212:4:57",
                "type": ""
              }
            ],
            "src": "4084:282:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4466:92:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4476:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4488:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4499:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4484:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4476:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4518:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4543:6:57"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4536:6:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4536:14:57"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4529:6:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4529:22:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4511:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4511:41:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4511:41:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4435:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4446:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4457:4:57",
                "type": ""
              }
            ],
            "src": "4371:187:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4677:102:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4687:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4699:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4710:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4695:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4695:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4687:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4729:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4744:6:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4760:3:57",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4765:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4756:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4756:11:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4769:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4752:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4752:19:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4740:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4740:32:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4722:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4722:51:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4722:51:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$635__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4646:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4657:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4668:4:57",
                "type": ""
              }
            ],
            "src": "4563:216:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4915:102:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4925:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4937:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4948:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4933:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4933:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4925:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4967:9:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4982:6:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4998:3:57",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5003:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4994:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4994:11:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5007:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4990:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4990:19:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4978:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4978:32:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4960:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4960:51:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4960:51:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IPopulousGovernanceV2_$8345__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4884:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4895:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4906:4:57",
                "type": ""
              }
            ],
            "src": "4784:233:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5143:482:57",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5153:12:57",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5163:2:57",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5157:2:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5181:9:57"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5192:2:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5174:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5174:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5174:21:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5204:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5224:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5218:5:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5218:13:57"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5208:6:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5251:9:57"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5262:2:57"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5247:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5247:18:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5267:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5240:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5240:34:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5240:34:57"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5283:13:57",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5292:4:57"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5287:1:57",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5355:90:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5384:9:57"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5395:1:57"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5380:3:57"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5380:17:57"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5399:2:57",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5376:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5376:26:57"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5418:6:57"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5426:1:57"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5414:3:57"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5414:14:57"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5430:2:57"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5410:3:57"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5410:23:57"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5404:5:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5404:30:57"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5369:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5369:66:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5369:66:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5316:1:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5319:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5313:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5313:13:57"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5327:19:57",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5329:15:57",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5338:1:57"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5341:2:57"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5334:3:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5334:10:57"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5329:1:57"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5309:3:57",
                    "statements": []
                  },
                  "src": "5305:140:57"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5479:69:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5508:9:57"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "5519:6:57"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5504:3:57"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5504:22:57"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5528:2:57",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5500:3:57"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5500:31:57"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5533:4:57"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5493:6:57"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5493:45:57"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5493:45:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5460:1:57"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5463:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5457:2:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:13:57"
                  },
                  "nodeType": "YulIf",
                  "src": "5454:2:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5557:62:57",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5573:9:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5592:6:57"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5600:2:57",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5588:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5588:15:57"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5609:2:57",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5605:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5605:7:57"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5584:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5584:29:57"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5569:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5569:45:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5616:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5565:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5565:54:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5557:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5112:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5123:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5134:4:57",
                "type": ""
              }
            ],
            "src": "5022:603:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5804:237:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5821:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5832:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5814:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5814:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5855:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5866:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5851:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5851:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5871:2:57",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5844:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5844:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5844:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5894:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5905:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5890:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5890:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5910:34:57",
                        "type": "",
                        "value": "MockVotingToken: Voting token ba"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5883:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5883:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5883:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5965:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5976:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5961:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5961:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5981:17:57",
                        "type": "",
                        "value": "lance must be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5954:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5954:45:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5954:45:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6008:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6020:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6031:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6016:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6016:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6008:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5781:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5795:4:57",
                "type": ""
              }
            ],
            "src": "5630:411:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6220:182:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6237:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6248:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6230:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6230:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6230:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6271:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6282:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6267:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6267:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6287:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6260:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6260:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6260:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6310:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6321:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6306:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6326:34:57",
                        "type": "",
                        "value": "MockVotingToken: Transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6299:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6299:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6299:62:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6370:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6382:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6393:2:57",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6378:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6370:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6197:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6211:4:57",
                "type": ""
              }
            ],
            "src": "6046:356:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6581:298:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6598:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6609:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6591:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6591:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6591:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6632:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6643:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6628:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6628:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6648:2:57",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6621:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6621:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6621:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6671:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6682:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6667:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6667:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6687:34:57",
                        "type": "",
                        "value": "MockVotingToken: User cannot hav"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6660:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6660:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6660:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6742:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6753:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6738:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6738:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6758:34:57",
                        "type": "",
                        "value": "e vote on pending or active prop"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6731:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6813:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6824:3:57",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6809:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6809:19:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6830:6:57",
                        "type": "",
                        "value": "osal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6802:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6802:35:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6802:35:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6846:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6858:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6869:3:57",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6854:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6854:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6846:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6558:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6572:4:57",
                "type": ""
              }
            ],
            "src": "6407:472:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7058:233:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7075:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7086:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7068:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7068:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7068:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7109:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7120:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7105:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7105:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7125:2:57",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7098:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7098:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7098:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7148:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7159:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7144:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7144:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7164:34:57",
                        "type": "",
                        "value": "MockVotingToken: Invalid governa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7137:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7137:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7137:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7219:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7230:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7215:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7235:13:57",
                        "type": "",
                        "value": "nce address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7208:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:41:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7208:41:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7258:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7270:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7281:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7266:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7266:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7258:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7035:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7049:4:57",
                "type": ""
              }
            ],
            "src": "6884:407:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7470:226:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7487:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7498:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7480:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7480:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7480:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7521:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7517:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7537:2:57",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7510:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7510:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7510:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7560:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7571:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7556:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7556:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7576:34:57",
                        "type": "",
                        "value": "MockVotingToken: TransferFrom fa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7549:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7549:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7549:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7631:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7642:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7627:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7627:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7647:6:57",
                        "type": "",
                        "value": "iled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7620:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7620:34:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7620:34:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7663:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7675:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7686:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7671:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7671:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7663:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7447:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7461:4:57",
                "type": ""
              }
            ],
            "src": "7296:400:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7875:234:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7892:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7903:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7885:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7885:21:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7885:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7926:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7937:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7922:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7922:18:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7942:2:57",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7915:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7915:30:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7915:30:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7965:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7976:2:57",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7961:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7961:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7981:34:57",
                        "type": "",
                        "value": "MockVotingToken: PXT balance mus"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7954:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7954:62:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7954:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8036:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8047:2:57",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8032:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8032:18:57"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8052:14:57",
                        "type": "",
                        "value": "t be above 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8025:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8025:42:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8025:42:57"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8076:27:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8088:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8099:3:57",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8084:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8084:19:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8076:4:57"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7852:9:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7866:4:57",
                "type": ""
              }
            ],
            "src": "7701:408:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8215:76:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8225:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8237:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8248:2:57",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8233:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8233:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8225:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8267:9:57"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8278:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8260:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8260:25:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8260:25:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8184:9:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8195:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8206:4:57",
                "type": ""
              }
            ],
            "src": "8114:177:57"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8433:145:57",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8443:26:57",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8455:9:57"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8466:2:57",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8451:3:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8451:18:57"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8443:4:57"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8485:9:57"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8496:6:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8478:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8478:25:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8478:25:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8523:9:57"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8534:2:57",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8519:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8519:18:57"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8543:6:57"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8559:3:57",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8564:1:57",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8555:3:57"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8555:11:57"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8568:1:57",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8551:3:57"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8551:19:57"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8539:3:57"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8539:32:57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8512:6:57"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8512:60:57"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8512:60:57"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8394:9:57",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8405:6:57",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8413:6:57",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8424:4:57",
                "type": ""
              }
            ],
            "src": "8296:282:57"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_enum$_DelegationType_$787(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(lt(value, 2)) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_bool_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_enum$_ProposalState_$8018_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 8)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_Vote_$8023_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_t_bool_fromMemory(headStart))\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(248, 1), 1)))) { revert(value0, value0) }\n        mstore(add(memPtr, 32), value)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$635__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPopulousGovernanceV2_$8345__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"MockVotingToken: Voting token ba\")\n        mstore(add(headStart, 96), \"lance must be 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"MockVotingToken: Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"MockVotingToken: User cannot hav\")\n        mstore(add(headStart, 96), \"e vote on pending or active prop\")\n        mstore(add(headStart, 128), \"osal\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"MockVotingToken: Invalid governa\")\n        mstore(add(headStart, 96), \"nce address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"MockVotingToken: TransferFrom fa\")\n        mstore(add(headStart, 96), \"iled\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"MockVotingToken: PXT balance mus\")\n        mstore(add(headStart, 96), \"t be above 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 57,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "471:1:5:-:0;445:27;;478;176:2521;478:27;;176:2521;478:27;;;-1:-1:-1;;;478:27:5;;;;;;;;;;:::i;:::-;-1:-1:-1;511:49:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;683:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;734:18:5;;726:67;;;;-1:-1:-1;;;726:67:5;;;;;;;:::i;:::-;;;;;;;;;803:8;:22;;-1:-1:-1;;;;;;803:22:5;-1:-1:-1;;;;;803:22:5;;;;;;;;;;176:2521;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;176:2521:5;;;-1:-1:-1;176:2521:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:310:57;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:57;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:57:o;329:400::-;531:2;513:21;;;570:2;550:18;;;543:30;609:34;604:2;589:18;;582:62;-1:-1:-1;;;675:2:57;660:18;;653:34;719:3;704:19;;503:226::o;:::-;176:2521:5;;;;;;",
  "deployedSourceMap": "176:2521:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8681:154:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;372:21:5:-;;;:::i;:::-;;;;;;;:::i;7706:98:0:-;;;:::i;:::-;;;;;;;:::i;9292:261::-;;;;;;:::i;:::-;;:::i;445:27:5:-;;;:::i;9948:203:0:-;;;;;;:::i;:::-;;:::i;399:39:5:-;;;:::i;7862:117:0:-;;;;;;:::i;:::-;;:::i;1134:83:5:-;;;:::i;478:27::-;;;:::i;1043:85::-;;;:::i;10638:213:0:-;;;;;;:::i;:::-;;:::i;8182:162::-;;;;;;:::i;:::-;;:::i;1731:736:5:-;;;:::i;:::-;;2503:192;;;;;;:::i;:::-;;:::i;838:199::-;;;;;;:::i;:::-;;:::i;1223:502::-;;;:::i;8402:141:0:-;;;;;;:::i;:::-;;:::i;511:49:5:-;;;;;;;;;;;;;;;-1:-1:-1;;511:49:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8681:154:0:-;8755:4;8771:36;8780:10;8792:7;8801:5;8771:8;:36::i;:::-;-1:-1:-1;8824:4:0;8681:154;;;;:::o;372:21:5:-;;;-1:-1:-1;;;;;372:21:5;;:::o;7706:98:0:-;7785:12;;7706:98;:::o;9292:261::-;9390:4;9406:36;9416:6;9424:9;9435:6;9406:9;:36::i;:::-;-1:-1:-1;;;;;9481:19:0;;;;;;:11;:19;;;;;;;;9469:10;9481:31;;;;;;;;;9452:73;;9461:6;;9481:43;;9517:6;9481:35;:43::i;:::-;9452:8;:73::i;:::-;-1:-1:-1;9542:4:0;9292:261;;;;;:::o;445:27:5:-;;;;:::o;9948:203:0:-;10053:10;10028:4;10074:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10074:32:0;;;;;;;;;;10028:4;;10044:79;;10065:7;;10074:48;;10111:10;10074:36;:48::i;399:39:5:-;;;-1:-1:-1;;;;;399:39:5;;:::o;7862:117:0:-;-1:-1:-1;;;;;7954:18:0;;7928:7;7954:18;;;;;;;;;;;7862:117;;;;:::o;1134:83:5:-;1201:8;;-1:-1:-1;;;;;1201:8:5;1134:83;:::o;478:27::-;;;;;;;;;;;;;;;-1:-1:-1;;478:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:85;1110:10;;-1:-1:-1;;;;;1110:10:5;1043:85;:::o;10638:213:0:-;10748:10;10723:4;10769:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10769:32:0;;;;;;;;;;10723:4;;10739:84;;10760:7;;10769:53;;10806:15;10769:36;:53::i;8182:162::-;8260:4;8276:40;8286:10;8298:9;8309:6;8276:9;:40::i;1731:736:5:-;1766:18;1787:21;1797:10;1787:9;:21::i;:::-;1766:42;;1818:29;1824:10;1836;1818:5;:29::i;:::-;1863:9;1858:464;1882:10;;;:30;;;-1:-1:-1;;;1882:30:5;;;;-1:-1:-1;;;;;1882:10:5;;;;:28;;:30;;;;;;;;;;;;:10;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1878:1;:34;1858:464;;;1957:10;;;:30;;-1:-1:-1;;;1957:30:5;;1933:13;;-1:-1:-1;;;;;1957:10:5;;;;:27;;:30;;1985:1;;1957:30;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1949:39;;;;;;;;2006:10;;;:43;;-1:-1:-1;;;2006:43:5;;1933:55;;-1:-1:-1;2064:1:5;;-1:-1:-1;;;;;2006:10:5;;;;:28;;:43;;2035:1;;2038:10;;2006:43;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;;-1:-1:-1;;;;;2006:59:5;;2002:310;;;2141:10;;;;:24;;;2155:5;2164:1;2155:10;;2141:24;2085:212;;;;-1:-1:-1;;;2085:212:5;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1914:3:5;;1858:464;;;-1:-1:-1;2353:8:5;;:41;;-1:-1:-1;;;2353:41:5;;-1:-1:-1;;;;;2353:8:5;;;;:17;;:41;;2371:10;;2383;;2353:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;2398:4;2353:49;2332:128;;;;-1:-1:-1;;;2332:128:5;;;;;;;:::i;:::-;1731:736;:::o;2503:192::-;2647:7;2673:15;2683:4;2673:9;:15::i;:::-;2666:22;2503:192;-1:-1:-1;;;;2503:192:5:o;838:199::-;-1:-1:-1;;;;;900:25:5;;892:81;;;;-1:-1:-1;;;892:81:5;;;;;;;:::i;:::-;983:10;:47;;-1:-1:-1;;;;;;983:47:5;-1:-1:-1;;;;;983:47:5;;;;;;;;;;838:199::o;1223:502::-;1277:8;;:30;;-1:-1:-1;;;1277:30:5;;1259:15;;-1:-1:-1;;;;;1277:8:5;;:18;;:30;;1296:10;;1277:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1259:48;;1335:1;1325:7;:11;1317:68;;;;-1:-1:-1;;;1317:68:5;;;;;;;:::i;:::-;1403:21;1413:10;1403:9;:21::i;:::-;:26;1395:86;;;;-1:-1:-1;;;1395:86:5;;;;;;;:::i;:::-;1512:8;;:57;;-1:-1:-1;;;1512:57:5;;-1:-1:-1;;;;;1512:8:5;;;;:21;;:57;;1534:10;;1554:4;;1561:7;;1512:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;1573:4;1512:65;1491:148;;;;-1:-1:-1;;;1491:148:5;;;;;;;:::i;:::-;1649:26;1655:10;1667:7;1649:5;:26::i;:::-;1698:10;-1:-1:-1;;;;;1690:28:5;;1710:7;1690:28;;;;;;:::i;:::-;;;;;;;;1223:502;:::o;8402:141:0:-;-1:-1:-1;;;;;8509:18:0;;;8483:7;8509:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8402:141::o;13363:329::-;-1:-1:-1;;;;;13455:19:0;;13447:68;;;;-1:-1:-1;;;13447:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13533:21:0;;13525:68;;;;-1:-1:-1;;;13525:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13604:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;13654:31;;;;;;;;;;;;;;;;;13363:329;;;:::o;11325:422::-;-1:-1:-1;;;;;11422:20:0;;11414:70;;;;-1:-1:-1;;;11414:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11502:23:0;;11494:71;;;;-1:-1:-1;;;11494:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11596:17:0;;:9;:17;;;;;;;;;;;:29;;11618:6;11596:21;:29::i;:::-;-1:-1:-1;;;;;11576:17:0;;;:9;:17;;;;;;;;;;;:49;;;;11658:20;;;;;;;:32;;11683:6;11658:24;:32::i;:::-;-1:-1:-1;;;;;11635:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;11705:35;;;;;;;11635:20;;11705:35;;;;;;;;;;;;;11325:422;;;:::o;1310:179::-;1368:7;1400:1;1395;:6;;1387:49;;;;;-1:-1:-1;;;1387:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1458:5:0;;;1310:179::o;870:176::-;928:7;959:5;;;982:6;;;;974:46;;;;;-1:-1:-1;;;974:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:1;870:176;-1:-1:-1;;;870:176:0:o;12638:300::-;-1:-1:-1;;;;;12712:21:0;;12704:67;;;;-1:-1:-1;;;12704:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12797:12;;:23;;12814:5;12797:16;:23::i;:::-;12782:12;:38;-1:-1:-1;;;;;12851:18:0;;:9;:18;;;;;;;;;;;:29;;12874:5;12851:22;:29::i;:::-;-1:-1:-1;;;;;12830:18:0;;:9;:18;;;;;;;;;;;:50;;;;12895:36;;;;;;;12830:9;;12895:36;;;;;;;;;;;12638:300;;:::o;12017:302::-;-1:-1:-1;;;;;12092:21:0;;12084:65;;;;;-1:-1:-1;;;12084:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12175:12;;:24;;12192:6;12175:16;:24::i;:::-;12160:12;:39;-1:-1:-1;;;;;12230:18:0;;:9;:18;;;;;;;;;;;:30;;12253:6;12230:22;:30::i;:::-;-1:-1:-1;;;;;12209:18:0;;:9;:18;;;;;;;;;;;:51;;;;12275:37;;;;;;;12209:18;;:9;;12275:37;;;;;;;;;;12017:302;;:::o;14:175:57:-;84:20;;-1:-1:-1;;;;;133:31:57;;123:42;;113:2;;179:1;176;169:12;194:166;272:13;;321;;314:21;304:32;;294:2;;350:1;347;340:12;365:198;;477:2;465:9;456:7;452:23;448:32;445:2;;;498:6;490;483:22;445:2;526:31;547:9;526:31;:::i;568:274::-;;;697:2;685:9;676:7;672:23;668:32;665:2;;;718:6;710;703:22;665:2;746:31;767:9;746:31;:::i;:::-;736:41;;796:40;832:2;821:9;817:18;796:40;:::i;:::-;786:50;;655:187;;;;;:::o;847:342::-;;;;993:2;981:9;972:7;968:23;964:32;961:2;;;1014:6;1006;999:22;961:2;1042:31;1063:9;1042:31;:::i;:::-;1032:41;;1092:40;1128:2;1117:9;1113:18;1092:40;:::i;:::-;1082:50;;1179:2;1168:9;1164:18;1151:32;1141:42;;951:238;;;;;:::o;1194:266::-;;;1323:2;1311:9;1302:7;1298:23;1294:32;1291:2;;;1344:6;1336;1329:22;1291:2;1372:31;1393:9;1372:31;:::i;:::-;1362:41;1450:2;1435:18;;;;1422:32;;-1:-1:-1;;;1281:179:57:o;1465:438::-;;;;1629:2;1617:9;1608:7;1604:23;1600:32;1597:2;;;1650:6;1642;1635:22;1597:2;1678:31;1699:9;1678:31;:::i;:::-;1668:41;;1756:2;1745:9;1741:18;1728:32;1718:42;;1810:2;1799:9;1795:18;1782:32;1843:1;1836:5;1833:12;1823:2;;1864:6;1856;1849:22;1823:2;1892:5;1882:15;;;1587:316;;;;;:::o;1908:214::-;;2028:2;2016:9;2007:7;2003:23;1999:32;1996:2;;;2049:6;2041;2034:22;1996:2;2077:39;2106:9;2077:39;:::i;2127:298::-;;2268:2;2256:9;2247:7;2243:23;2239:32;2236:2;;;2289:6;2281;2274:22;2236:2;2326:9;2320:16;2365:1;2358:5;2355:12;2345:2;;2386:6;2378;2371:22;2430:638;;2575:2;2563:9;2554:7;2550:23;2546:32;2543:2;;;2596:6;2588;2581:22;2543:2;2634;2628:9;2676:2;2668:6;2664:15;2745:6;2733:10;2730:22;2709:18;2697:10;2694:34;2691:62;2688:2;;;2756:9;2688:2;2783;2776:22;2822:39;2851:9;2822:39;:::i;:::-;2807:55;;2905:2;2890:18;;2884:25;-1:-1:-1;;;;;2938:31:57;;2928:42;;2918:2;;2989:6;2981;2974:22;2918:2;3026;3014:15;;3007:30;3018:6;2533:535;-1:-1:-1;;;2533:535:57:o;3073:194::-;;3196:2;3184:9;3175:7;3171:23;3167:32;3164:2;;;3217:6;3209;3202:22;3164:2;-1:-1:-1;3245:16:57;;3154:113;-1:-1:-1;3154:113:57:o;3272:203::-;-1:-1:-1;;;;;3436:32:57;;;;3418:51;;3406:2;3391:18;;3373:102::o;3696:383::-;-1:-1:-1;;;;;3962:15:57;;;3944:34;;4014:15;;;;4009:2;3994:18;;3987:43;4061:2;4046:18;;4039:34;;;;3894:2;3879:18;;3861:218::o;4084:282::-;-1:-1:-1;;;;;4284:32:57;;;;4266:51;;4348:2;4333:18;;4326:34;4254:2;4239:18;;4221:145::o;4371:187::-;4536:14;;4529:22;4511:41;;4499:2;4484:18;;4466:92::o;5022:603::-;;5163:2;5192;5181:9;5174:21;5224:6;5218:13;5267:6;5262:2;5251:9;5247:18;5240:34;5292:4;5305:140;5319:6;5316:1;5313:13;5305:140;;;5414:14;;;5410:23;;5404:30;5380:17;;;5399:2;5376:26;5369:66;5334:10;;5305:140;;;5463:6;5460:1;5457:13;5454:2;;;5533:4;5528:2;5519:6;5508:9;5504:22;5500:31;5493:45;5454:2;-1:-1:-1;5609:2:57;5588:15;-1:-1:-1;;5584:29:57;5569:45;;;;5616:2;5565:54;;5143:482;-1:-1:-1;;;5143:482:57:o;5630:411::-;5832:2;5814:21;;;5871:2;5851:18;;;5844:30;5910:34;5905:2;5890:18;;5883:62;-1:-1:-1;;;5976:2:57;5961:18;;5954:45;6031:3;6016:19;;5804:237::o;6046:356::-;6248:2;6230:21;;;6267:18;;;6260:30;6326:34;6321:2;6306:18;;6299:62;6393:2;6378:18;;6220:182::o;6407:472::-;6609:2;6591:21;;;6648:2;6628:18;;;6621:30;6687:34;6682:2;6667:18;;6660:62;6758:34;6753:2;6738:18;;6731:62;-1:-1:-1;;;6824:3:57;6809:19;;6802:35;6869:3;6854:19;;6581:298::o;6884:407::-;7086:2;7068:21;;;7125:2;7105:18;;;7098:30;7164:34;7159:2;7144:18;;7137:62;-1:-1:-1;;;7230:2:57;7215:18;;7208:41;7281:3;7266:19;;7058:233::o;7296:400::-;7498:2;7480:21;;;7537:2;7517:18;;;7510:30;7576:34;7571:2;7556:18;;7549:62;-1:-1:-1;;;7642:2:57;7627:18;;7620:34;7686:3;7671:19;;7470:226::o;7701:408::-;7903:2;7885:21;;;7942:2;7922:18;;;7915:30;7981:34;7976:2;7961:18;;7954:62;-1:-1:-1;;;8047:2:57;8032:18;;8025:42;8099:3;8084:19;;7875:234::o;8114:177::-;8260:25;;;8248:2;8233:18;;8215:76::o;8296:282::-;8478:25;;;-1:-1:-1;;;;;8539:32:57;8534:2;8519:18;;8512:60;8466:2;8451:18;;8433:145::o",
  "source": "pragma solidity 0.7.5;\npragma abicoder v2;\n\nimport \"./ERC20.sol\";\nimport \"./interfaces/IPopulousGovernanceV2.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract MockVotingToken is ERC20 {\n    enum DelegationType {VOTING_POWER, PROPOSITION_POWER}\n    enum ProposalState {Pending, Canceled, Active, Failed, Succeeded, Queued, Expired, Executed}\n\n    ERC20 public pxtToken;\n    IPopulousGovernanceV2 public governance;\n\n    uint256 public decimals = 8;\n    string public symbol = \"GT\";\n    string public name = \"Populous Governance Tokens\";\n\n    event Deposit(address indexed user, uint256 amount);\n    event Redeemed(address indexed user, uint256 amount);\n\n    constructor(address _pxt) public {\n        require(_pxt != address(0), \"MockVotingToken: Invalid pxt address\");\n        pxtToken = ERC20(_pxt);\n    }\n\n    function setGov(address _governance) public {\n        require(_governance != address(0), \"MockVotingToken: Invalid governance address\");\n        governance = IPopulousGovernanceV2(_governance);\n    }\n\n    function getGov() public returns(address) {\n        return address(governance);\n    }\n\n    function getPXT() public returns(address) {\n        return address(pxtToken);\n    }\n\n    function deposit() public {\n        uint256 balance = pxtToken.balanceOf(msg.sender);\n        require(balance > 0, \"MockVotingToken: PXT balance must be above 0\");\n        require(balanceOf(msg.sender) == 0, \"MockVotingToken: Voting token balance must be 0\");\n        require(\n            pxtToken.transferFrom(msg.sender, address(this), balance) == true,\n            \"MockVotingToken: TransferFrom failed\"\n        );\n        _mint(msg.sender, balance);\n        emit Deposit(msg.sender, balance);\n    }\n\n    function redeem() public {\n        uint256 govBalance = balanceOf(msg.sender);\n        _burn(msg.sender, govBalance);\n\n        for (uint256 i = 0; i < governance.getProposalsCount(); i++) {\n            uint256 state = uint256(governance.getProposalState(i));\n            if (governance.getVoteOnProposal(i, msg.sender).votingPower > 0) {\n                require (\n                    (\n                        state != 0 || state != 2\n                    ),\n                    \"MockVotingToken: User cannot have vote on pending or active proposal\"\n                );\n            }\n        }\n\n        require(\n            pxtToken.transfer(msg.sender, govBalance) == true,\n            \"MockVotingToken: Transfer failed\"\n        );\n    }\n\n    // increase voting power\n\n    function getPowerAtBlock(\n        address user,\n        uint256 blockNumber,\n        DelegationType delegationType\n    ) external view returns (uint256) {\n        return balanceOf(user);\n    }\n}",
  "sourcePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
  "ast": {
    "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
    "exportedSymbols": {
      "ERC20": [
        635
      ],
      "IERC20": [
        214
      ],
      "IExecutorWithTimelock": [
        7945
      ],
      "IPopulousGovernanceV2": [
        8345
      ],
      "MockVotingToken": [
        1037
      ],
      "SafeMath": [
        138
      ]
    },
    "id": 1038,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 778,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:5"
      },
      {
        "id": 779,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:19:5"
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 780,
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 636,
        "src": "44:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol",
        "file": "./interfaces/IPopulousGovernanceV2.sol",
        "id": 781,
        "nodeType": "ImportDirective",
        "scope": 1038,
        "sourceUnit": 8346,
        "src": "66:48:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 783,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "204:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "id": 784,
            "nodeType": "InheritanceSpecifier",
            "src": "204:5:5"
          }
        ],
        "contractDependencies": [
          214,
          635
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 782,
          "nodeType": "StructuredDocumentation",
          "src": "116:59:5",
          "text": " @title ERC20Mintable\n @dev ERC20 minting logic"
        },
        "fullyImplemented": true,
        "id": 1037,
        "linearizedBaseContracts": [
          1037,
          635,
          214
        ],
        "name": "MockVotingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MockVotingToken.DelegationType",
            "id": 787,
            "members": [
              {
                "id": 785,
                "name": "VOTING_POWER",
                "nodeType": "EnumValue",
                "src": "237:12:5"
              },
              {
                "id": 786,
                "name": "PROPOSITION_POWER",
                "nodeType": "EnumValue",
                "src": "251:17:5"
              }
            ],
            "name": "DelegationType",
            "nodeType": "EnumDefinition",
            "src": "216:53:5"
          },
          {
            "canonicalName": "MockVotingToken.ProposalState",
            "id": 796,
            "members": [
              {
                "id": 788,
                "name": "Pending",
                "nodeType": "EnumValue",
                "src": "294:7:5"
              },
              {
                "id": 789,
                "name": "Canceled",
                "nodeType": "EnumValue",
                "src": "303:8:5"
              },
              {
                "id": 790,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "313:6:5"
              },
              {
                "id": 791,
                "name": "Failed",
                "nodeType": "EnumValue",
                "src": "321:6:5"
              },
              {
                "id": 792,
                "name": "Succeeded",
                "nodeType": "EnumValue",
                "src": "329:9:5"
              },
              {
                "id": 793,
                "name": "Queued",
                "nodeType": "EnumValue",
                "src": "340:6:5"
              },
              {
                "id": 794,
                "name": "Expired",
                "nodeType": "EnumValue",
                "src": "348:7:5"
              },
              {
                "id": 795,
                "name": "Executed",
                "nodeType": "EnumValue",
                "src": "357:8:5"
              }
            ],
            "name": "ProposalState",
            "nodeType": "EnumDefinition",
            "src": "274:92:5"
          },
          {
            "constant": false,
            "functionSelector": "0e344376",
            "id": 798,
            "mutability": "mutable",
            "name": "pxtToken",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "372:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$635",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 797,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "372:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 800,
            "mutability": "mutable",
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "399:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
              "typeString": "contract IPopulousGovernanceV2"
            },
            "typeName": {
              "id": 799,
              "name": "IPopulousGovernanceV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8345,
              "src": "399:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                "typeString": "contract IPopulousGovernanceV2"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 803,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "445:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 801,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "445:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38",
              "id": 802,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "471:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "8"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 806,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "478:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 804,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "478:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4754",
              "id": 805,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "501:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b275d0555485319643a6e39fae791932db6d1bb57b5529b0f8111f703023fe74",
                "typeString": "literal_string \"GT\""
              },
              "value": "GT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 809,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1037,
            "src": "511:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 807,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "511:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "506f70756c6f757320476f7665726e616e636520546f6b656e73",
              "id": 808,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "532:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1da7263cb6d7aa01bf010c9bb06305f846a41b1cd17e769245efbc35fdd9ff61",
                "typeString": "literal_string \"Populous Governance Tokens\""
              },
              "value": "Populous Governance Tokens"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 815,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "581:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 813,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "603:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "580:38:5"
            },
            "src": "567:52:5"
          },
          {
            "anonymous": false,
            "id": 821,
            "name": "Redeemed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "639:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "661:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:38:5"
            },
            "src": "624:53:5"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "716:116:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 827,
                          "name": "_pxt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "734:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "750:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "742:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 828,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "742:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "742:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "734:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a20496e76616c6964207078742061646472657373",
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "754:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb",
                          "typeString": "literal_string \"MockVotingToken: Invalid pxt address\""
                        },
                        "value": "MockVotingToken: Invalid pxt address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb",
                          "typeString": "literal_string \"MockVotingToken: Invalid pxt address\""
                        }
                      ],
                      "id": 826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "726:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "726:67:5"
                },
                {
                  "expression": {
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 836,
                      "name": "pxtToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 798,
                      "src": "803:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 838,
                          "name": "_pxt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "820:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 837,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "814:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$635_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "814:11:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "803:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$635",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "803:22:5"
                }
              ]
            },
            "id": 843,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "_pxt",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "695:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "694:14:5"
            },
            "returnParameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:0:5"
            },
            "scope": 1037,
            "src": "683:149:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "882:155:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 849,
                          "name": "_governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "900:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "923:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "915:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 850,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "915:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "915:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "900:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a20496e76616c696420676f7665726e616e63652061646472657373",
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "927:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70",
                          "typeString": "literal_string \"MockVotingToken: Invalid governance address\""
                        },
                        "value": "MockVotingToken: Invalid governance address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70",
                          "typeString": "literal_string \"MockVotingToken: Invalid governance address\""
                        }
                      ],
                      "id": 848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "892:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:81:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "892:81:5"
                },
                {
                  "expression": {
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 858,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "983:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                        "typeString": "contract IPopulousGovernanceV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 860,
                          "name": "_governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "1018:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 859,
                        "name": "IPopulousGovernanceV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8345,
                        "src": "996:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPopulousGovernanceV2_$8345_$",
                          "typeString": "type(contract IPopulousGovernanceV2)"
                        }
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "996:34:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                        "typeString": "contract IPopulousGovernanceV2"
                      }
                    },
                    "src": "983:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                      "typeString": "contract IPopulousGovernanceV2"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "983:47:5"
                }
              ]
            },
            "functionSelector": "cfad57a2",
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGov",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "854:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:21:5"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "882:0:5"
            },
            "scope": 1037,
            "src": "838:199:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "1085:43:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 872,
                        "name": "governance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "1110:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                          "typeString": "contract IPopulousGovernanceV2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                          "typeString": "contract IPopulousGovernanceV2"
                        }
                      ],
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1102:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 870,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1102:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 869,
                  "id": 874,
                  "nodeType": "Return",
                  "src": "1095:26:5"
                }
              ]
            },
            "functionSelector": "a2ab2dee",
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGov",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1058:2:5"
            },
            "returnParameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1076:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:9:5"
            },
            "scope": 1037,
            "src": "1043:85:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "1176:41:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 883,
                        "name": "pxtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "1201:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1193:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 881,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1193:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 885,
                  "nodeType": "Return",
                  "src": "1186:24:5"
                }
              ]
            },
            "functionSelector": "8f10b2e0",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPXT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:2:5"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "1167:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:9:5"
            },
            "scope": 1037,
            "src": "1134:83:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "1249:476:5",
              "statements": [
                {
                  "assignments": [
                    891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 891,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "1259:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 890,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1259:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 897,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 894,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1296:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1296:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 892,
                        "name": "pxtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "1277:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 256,
                      "src": "1277:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1259:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 899,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "1325:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1335:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1325:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a205058542062616c616e6365206d7573742062652061626f76652030",
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1338:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1",
                          "typeString": "literal_string \"MockVotingToken: PXT balance must be above 0\""
                        },
                        "value": "MockVotingToken: PXT balance must be above 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1",
                          "typeString": "literal_string \"MockVotingToken: PXT balance must be above 0\""
                        }
                      ],
                      "id": 898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1317:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 907,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1413:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1413:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 906,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1403:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1403:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1428:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1403:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a20566f74696e6720746f6b656e2062616c616e6365206d7573742062652030",
                        "id": 912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1431:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b",
                          "typeString": "literal_string \"MockVotingToken: Voting token balance must be 0\""
                        },
                        "value": "MockVotingToken: Voting token balance must be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b",
                          "typeString": "literal_string \"MockVotingToken: Voting token balance must be 0\""
                        }
                      ],
                      "id": 905,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1395:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:86:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 918,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1534:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1534:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 922,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1554:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockVotingToken_$1037",
                                    "typeString": "contract MockVotingToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockVotingToken_$1037",
                                    "typeString": "contract MockVotingToken"
                                  }
                                ],
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1546:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 920,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1546:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1546:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 924,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "1561:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 916,
                              "name": "pxtToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 798,
                              "src": "1512:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$635",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 353,
                            "src": "1512:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1512:57:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1573:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1512:65:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a205472616e7366657246726f6d206661696c6564",
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1591:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322",
                          "typeString": "literal_string \"MockVotingToken: TransferFrom failed\""
                        },
                        "value": "MockVotingToken: TransferFrom failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322",
                          "typeString": "literal_string \"MockVotingToken: TransferFrom failed\""
                        }
                      ],
                      "id": 915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1491:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1491:148:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "1491:148:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 932,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1655:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1655:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 934,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "1667:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 931,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1649:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 938,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1698:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1698:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 940,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "1710:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 937,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "1690:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 942,
                  "nodeType": "EmitStatement",
                  "src": "1685:33:5"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:2:5"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:5"
            },
            "scope": 1037,
            "src": "1223:502:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "1756:711:5",
              "statements": [
                {
                  "assignments": [
                    948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 948,
                      "mutability": "mutable",
                      "name": "govBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1019,
                      "src": "1766:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 947,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1766:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 953,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 950,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1797:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1797:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 949,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "1787:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1787:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1766:42:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 955,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1824:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1824:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 957,
                        "name": "govBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "1836:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 954,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "1818:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "1818:29:5"
                },
                {
                  "body": {
                    "id": 1005,
                    "nodeType": "Block",
                    "src": "1919:403:5",
                    "statements": [
                      {
                        "assignments": [
                          973
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 973,
                            "mutability": "mutable",
                            "name": "state",
                            "nodeType": "VariableDeclaration",
                            "scope": 1005,
                            "src": "1933:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 972,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1933:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 981,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 978,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 961,
                                  "src": "1985:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 976,
                                  "name": "governance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 800,
                                  "src": "1957:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                                    "typeString": "contract IPopulousGovernanceV2"
                                  }
                                },
                                "id": 977,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getProposalState",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8344,
                                "src": "1957:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_enum$_ProposalState_$8018_$",
                                  "typeString": "function (uint256) view external returns (enum IPopulousGovernanceV2.ProposalState)"
                                }
                              },
                              "id": 979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1957:30:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalState_$8018",
                                "typeString": "enum IPopulousGovernanceV2.ProposalState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProposalState_$8018",
                                "typeString": "enum IPopulousGovernanceV2.ProposalState"
                              }
                            ],
                            "id": 975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1949:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 974,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1949:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1949:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1933:55:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint248",
                            "typeString": "uint248"
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 984,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 961,
                                  "src": "2035:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 985,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2038:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 986,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2038:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "id": 982,
                                  "name": "governance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 800,
                                  "src": "2006:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                                    "typeString": "contract IPopulousGovernanceV2"
                                  }
                                },
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getVoteOnProposal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8336,
                                "src": "2006:28:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_Vote_$8023_memory_ptr_$",
                                  "typeString": "function (uint256,address) view external returns (struct IPopulousGovernanceV2.Vote memory)"
                                }
                              },
                              "id": 987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2006:43:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vote_$8023_memory_ptr",
                                "typeString": "struct IPopulousGovernanceV2.Vote memory"
                              }
                            },
                            "id": 988,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votingPower",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8022,
                            "src": "2006:55:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint248",
                              "typeString": "uint248"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2064:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2006:59:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1004,
                        "nodeType": "IfStatement",
                        "src": "2002:310:5",
                        "trueBody": {
                          "id": 1003,
                          "nodeType": "Block",
                          "src": "2067:245:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 998,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 994,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 992,
                                            "name": "state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 973,
                                            "src": "2141:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "hexValue": "30",
                                            "id": 993,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2150:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "2141:10:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 997,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 995,
                                            "name": "state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 973,
                                            "src": "2155:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "hexValue": "32",
                                            "id": 996,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2164:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          },
                                          "src": "2155:10:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "2141:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 999,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2115:72:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4d6f636b566f74696e67546f6b656e3a20557365722063616e6e6f74206861766520766f7465206f6e2070656e64696e67206f72206163746976652070726f706f73616c",
                                    "id": 1000,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2209:70:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468",
                                      "typeString": "literal_string \"MockVotingToken: User cannot have vote on pending or active proposal\""
                                    },
                                    "value": "MockVotingToken: User cannot have vote on pending or active proposal"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468",
                                      "typeString": "literal_string \"MockVotingToken: User cannot have vote on pending or active proposal\""
                                    }
                                  ],
                                  "id": 991,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2085:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2085:212:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1002,
                              "nodeType": "ExpressionStatement",
                              "src": "2085:212:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 964,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "1878:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 965,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 800,
                          "src": "1882:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                            "typeString": "contract IPopulousGovernanceV2"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getProposalsCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8318,
                        "src": "1882:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1882:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1878:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1006,
                  "initializationExpression": {
                    "assignments": [
                      961
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 961,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1006,
                        "src": "1863:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 960,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1863:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 963,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1875:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1863:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1914:3:5",
                      "subExpression": {
                        "id": 969,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "1914:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 971,
                    "nodeType": "ExpressionStatement",
                    "src": "1914:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "1858:464:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1010,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2371:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2371:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1012,
                              "name": "govBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "2383:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1008,
                              "name": "pxtToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 798,
                              "src": "2353:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$635",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 277,
                            "src": "2353:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2353:41:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2398:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2353:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a205472616e73666572206661696c6564",
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2416:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844",
                          "typeString": "literal_string \"MockVotingToken: Transfer failed\""
                        },
                        "value": "MockVotingToken: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844",
                          "typeString": "literal_string \"MockVotingToken: Transfer failed\""
                        }
                      ],
                      "id": 1007,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2332:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:128:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1018,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:128:5"
                }
              ]
            },
            "functionSelector": "be040fb0",
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1746:2:5"
            },
            "returnParameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1756:0:5"
            },
            "scope": 1037,
            "src": "1731:736:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1035,
              "nodeType": "Block",
              "src": "2656:39:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1032,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1022,
                        "src": "2683:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1031,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "2673:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2673:15:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1030,
                  "id": 1034,
                  "nodeType": "Return",
                  "src": "2666:22:5"
                }
              ]
            },
            "functionSelector": "c2ffbb91",
            "id": 1036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPowerAtBlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "2537:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "2559:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2559:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "delegationType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "2588:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DelegationType_$787",
                    "typeString": "enum MockVotingToken.DelegationType"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "DelegationType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 787,
                    "src": "2588:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DelegationType_$787",
                      "typeString": "enum MockVotingToken.DelegationType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:96:5"
            },
            "returnParameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "2647:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2646:9:5"
            },
            "scope": 1037,
            "src": "2503:192:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1038,
        "src": "176:2521:5"
      }
    ],
    "src": "0:2697:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
      "exportedSymbols": {
        "ERC20": [
          635
        ],
        "IERC20": [
          214
        ],
        "IExecutorWithTimelock": [
          7945
        ],
        "IPopulousGovernanceV2": [
          8345
        ],
        "MockVotingToken": [
          1037
        ],
        "SafeMath": [
          138
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".5"
          ]
        },
        "id": 778,
        "name": "PragmaDirective",
        "src": "0:22:5"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 779,
        "name": "PragmaDirective",
        "src": "23:19:5"
      },
      {
        "attributes": {
          "SourceUnit": 636,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
          "file": "./ERC20.sol",
          "scope": 1038,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 780,
        "name": "ImportDirective",
        "src": "44:21:5"
      },
      {
        "attributes": {
          "SourceUnit": 8346,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol",
          "file": "./interfaces/IPopulousGovernanceV2.sol",
          "scope": 1038,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 781,
        "name": "ImportDirective",
        "src": "66:48:5"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            214,
            635
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1037,
            635,
            214
          ],
          "name": "MockVotingToken",
          "scope": 1038
        },
        "children": [
          {
            "attributes": {
              "text": " @title ERC20Mintable\n @dev ERC20 minting logic"
            },
            "id": 782,
            "name": "StructuredDocumentation",
            "src": "116:59:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 783,
                "name": "UserDefinedTypeName",
                "src": "204:5:5"
              }
            ],
            "id": 784,
            "name": "InheritanceSpecifier",
            "src": "204:5:5"
          },
          {
            "attributes": {
              "canonicalName": "MockVotingToken.DelegationType",
              "name": "DelegationType"
            },
            "children": [
              {
                "attributes": {
                  "name": "VOTING_POWER"
                },
                "id": 785,
                "name": "EnumValue",
                "src": "237:12:5"
              },
              {
                "attributes": {
                  "name": "PROPOSITION_POWER"
                },
                "id": 786,
                "name": "EnumValue",
                "src": "251:17:5"
              }
            ],
            "id": 787,
            "name": "EnumDefinition",
            "src": "216:53:5"
          },
          {
            "attributes": {
              "canonicalName": "MockVotingToken.ProposalState",
              "name": "ProposalState"
            },
            "children": [
              {
                "attributes": {
                  "name": "Pending"
                },
                "id": 788,
                "name": "EnumValue",
                "src": "294:7:5"
              },
              {
                "attributes": {
                  "name": "Canceled"
                },
                "id": 789,
                "name": "EnumValue",
                "src": "303:8:5"
              },
              {
                "attributes": {
                  "name": "Active"
                },
                "id": 790,
                "name": "EnumValue",
                "src": "313:6:5"
              },
              {
                "attributes": {
                  "name": "Failed"
                },
                "id": 791,
                "name": "EnumValue",
                "src": "321:6:5"
              },
              {
                "attributes": {
                  "name": "Succeeded"
                },
                "id": 792,
                "name": "EnumValue",
                "src": "329:9:5"
              },
              {
                "attributes": {
                  "name": "Queued"
                },
                "id": 793,
                "name": "EnumValue",
                "src": "340:6:5"
              },
              {
                "attributes": {
                  "name": "Expired"
                },
                "id": 794,
                "name": "EnumValue",
                "src": "348:7:5"
              },
              {
                "attributes": {
                  "name": "Executed"
                },
                "id": 795,
                "name": "EnumValue",
                "src": "357:8:5"
              }
            ],
            "id": 796,
            "name": "EnumDefinition",
            "src": "274:92:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "0e344376",
              "mutability": "mutable",
              "name": "pxtToken",
              "scope": 1037,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 797,
                "name": "UserDefinedTypeName",
                "src": "372:5:5"
              }
            ],
            "id": 798,
            "name": "VariableDeclaration",
            "src": "372:21:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "5aa6e675",
              "mutability": "mutable",
              "name": "governance",
              "scope": 1037,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IPopulousGovernanceV2",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IPopulousGovernanceV2",
                  "referencedDeclaration": 8345,
                  "type": "contract IPopulousGovernanceV2"
                },
                "id": 799,
                "name": "UserDefinedTypeName",
                "src": "399:21:5"
              }
            ],
            "id": 800,
            "name": "VariableDeclaration",
            "src": "399:39:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "313ce567",
              "mutability": "mutable",
              "name": "decimals",
              "scope": 1037,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 801,
                "name": "ElementaryTypeName",
                "src": "445:7:5"
              },
              {
                "attributes": {
                  "hexvalue": "38",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 8",
                  "value": "8"
                },
                "id": 802,
                "name": "Literal",
                "src": "471:1:5"
              }
            ],
            "id": 803,
            "name": "VariableDeclaration",
            "src": "445:27:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "95d89b41",
              "mutability": "mutable",
              "name": "symbol",
              "scope": 1037,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 804,
                "name": "ElementaryTypeName",
                "src": "478:6:5"
              },
              {
                "attributes": {
                  "hexvalue": "4754",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"GT\"",
                  "value": "GT"
                },
                "id": 805,
                "name": "Literal",
                "src": "501:4:5"
              }
            ],
            "id": 806,
            "name": "VariableDeclaration",
            "src": "478:27:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "06fdde03",
              "mutability": "mutable",
              "name": "name",
              "scope": 1037,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 807,
                "name": "ElementaryTypeName",
                "src": "511:6:5"
              },
              {
                "attributes": {
                  "hexvalue": "506f70756c6f757320476f7665726e616e636520546f6b656e73",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"Populous Governance Tokens\"",
                  "value": "Populous Governance Tokens"
                },
                "id": 808,
                "name": "Literal",
                "src": "532:28:5"
              }
            ],
            "id": 809,
            "name": "VariableDeclaration",
            "src": "511:49:5"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "Deposit"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 815,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 810,
                        "name": "ElementaryTypeName",
                        "src": "581:7:5"
                      }
                    ],
                    "id": 811,
                    "name": "VariableDeclaration",
                    "src": "581:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 815,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 812,
                        "name": "ElementaryTypeName",
                        "src": "603:7:5"
                      }
                    ],
                    "id": 813,
                    "name": "VariableDeclaration",
                    "src": "603:14:5"
                  }
                ],
                "id": 814,
                "name": "ParameterList",
                "src": "580:38:5"
              }
            ],
            "id": 815,
            "name": "EventDefinition",
            "src": "567:52:5"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "Redeemed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 821,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 816,
                        "name": "ElementaryTypeName",
                        "src": "639:7:5"
                      }
                    ],
                    "id": 817,
                    "name": "VariableDeclaration",
                    "src": "639:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 821,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 818,
                        "name": "ElementaryTypeName",
                        "src": "661:7:5"
                      }
                    ],
                    "id": 819,
                    "name": "VariableDeclaration",
                    "src": "661:14:5"
                  }
                ],
                "id": 820,
                "name": "ParameterList",
                "src": "638:38:5"
              }
            ],
            "id": 821,
            "name": "EventDefinition",
            "src": "624:53:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1037,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_pxt",
                      "scope": 843,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 822,
                        "name": "ElementaryTypeName",
                        "src": "695:7:5"
                      }
                    ],
                    "id": 823,
                    "name": "VariableDeclaration",
                    "src": "695:12:5"
                  }
                ],
                "id": 824,
                "name": "ParameterList",
                "src": "694:14:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 825,
                "name": "ParameterList",
                "src": "716:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1cc420d2a036560a7f34feb9ca325afa77743ea37387699a544a202ff33039cb",
                                  "typeString": "literal_string \"MockVotingToken: Invalid pxt address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 826,
                            "name": "Identifier",
                            "src": "726:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 823,
                                  "type": "address",
                                  "value": "_pxt"
                                },
                                "id": 827,
                                "name": "Identifier",
                                "src": "734:4:5"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 828,
                                        "name": "ElementaryTypeName",
                                        "src": "742:7:5"
                                      }
                                    ],
                                    "id": 829,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "742:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 830,
                                    "name": "Literal",
                                    "src": "750:1:5"
                                  }
                                ],
                                "id": 831,
                                "name": "FunctionCall",
                                "src": "742:10:5"
                              }
                            ],
                            "id": 832,
                            "name": "BinaryOperation",
                            "src": "734:18:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20496e76616c6964207078742061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Invalid pxt address\"",
                              "value": "MockVotingToken: Invalid pxt address"
                            },
                            "id": 833,
                            "name": "Literal",
                            "src": "754:38:5"
                          }
                        ],
                        "id": 834,
                        "name": "FunctionCall",
                        "src": "726:67:5"
                      }
                    ],
                    "id": 835,
                    "name": "ExpressionStatement",
                    "src": "726:67:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 798,
                              "type": "contract ERC20",
                              "value": "pxtToken"
                            },
                            "id": 836,
                            "name": "Identifier",
                            "src": "803:8:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract ERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 635,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 837,
                                "name": "Identifier",
                                "src": "814:5:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 823,
                                  "type": "address",
                                  "value": "_pxt"
                                },
                                "id": 838,
                                "name": "Identifier",
                                "src": "820:4:5"
                              }
                            ],
                            "id": 839,
                            "name": "FunctionCall",
                            "src": "814:11:5"
                          }
                        ],
                        "id": 840,
                        "name": "Assignment",
                        "src": "803:22:5"
                      }
                    ],
                    "id": 841,
                    "name": "ExpressionStatement",
                    "src": "803:22:5"
                  }
                ],
                "id": 842,
                "name": "Block",
                "src": "716:116:5"
              }
            ],
            "id": 843,
            "name": "FunctionDefinition",
            "src": "683:149:5"
          },
          {
            "attributes": {
              "functionSelector": "cfad57a2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setGov",
              "scope": 1037,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_governance",
                      "scope": 865,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 844,
                        "name": "ElementaryTypeName",
                        "src": "854:7:5"
                      }
                    ],
                    "id": 845,
                    "name": "VariableDeclaration",
                    "src": "854:19:5"
                  }
                ],
                "id": 846,
                "name": "ParameterList",
                "src": "853:21:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 847,
                "name": "ParameterList",
                "src": "882:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a1c99cba1a0b84a5bb56b107fa6fb3cbd8f6e39e3902da1edeee19cd8115dd70",
                                  "typeString": "literal_string \"MockVotingToken: Invalid governance address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 848,
                            "name": "Identifier",
                            "src": "892:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 845,
                                  "type": "address",
                                  "value": "_governance"
                                },
                                "id": 849,
                                "name": "Identifier",
                                "src": "900:11:5"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 850,
                                        "name": "ElementaryTypeName",
                                        "src": "915:7:5"
                                      }
                                    ],
                                    "id": 851,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "915:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 852,
                                    "name": "Literal",
                                    "src": "923:1:5"
                                  }
                                ],
                                "id": 853,
                                "name": "FunctionCall",
                                "src": "915:10:5"
                              }
                            ],
                            "id": 854,
                            "name": "BinaryOperation",
                            "src": "900:25:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20496e76616c696420676f7665726e616e63652061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Invalid governance address\"",
                              "value": "MockVotingToken: Invalid governance address"
                            },
                            "id": 855,
                            "name": "Literal",
                            "src": "927:45:5"
                          }
                        ],
                        "id": 856,
                        "name": "FunctionCall",
                        "src": "892:81:5"
                      }
                    ],
                    "id": 857,
                    "name": "ExpressionStatement",
                    "src": "892:81:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IPopulousGovernanceV2"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 800,
                              "type": "contract IPopulousGovernanceV2",
                              "value": "governance"
                            },
                            "id": 858,
                            "name": "Identifier",
                            "src": "983:10:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IPopulousGovernanceV2",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8345,
                                  "type": "type(contract IPopulousGovernanceV2)",
                                  "value": "IPopulousGovernanceV2"
                                },
                                "id": 859,
                                "name": "Identifier",
                                "src": "996:21:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 845,
                                  "type": "address",
                                  "value": "_governance"
                                },
                                "id": 860,
                                "name": "Identifier",
                                "src": "1018:11:5"
                              }
                            ],
                            "id": 861,
                            "name": "FunctionCall",
                            "src": "996:34:5"
                          }
                        ],
                        "id": 862,
                        "name": "Assignment",
                        "src": "983:47:5"
                      }
                    ],
                    "id": 863,
                    "name": "ExpressionStatement",
                    "src": "983:47:5"
                  }
                ],
                "id": 864,
                "name": "Block",
                "src": "882:155:5"
              }
            ],
            "id": 865,
            "name": "FunctionDefinition",
            "src": "838:199:5"
          },
          {
            "attributes": {
              "functionSelector": "a2ab2dee",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getGov",
              "scope": 1037,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 866,
                "name": "ParameterList",
                "src": "1058:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 876,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 867,
                        "name": "ElementaryTypeName",
                        "src": "1076:7:5"
                      }
                    ],
                    "id": 868,
                    "name": "VariableDeclaration",
                    "src": "1076:7:5"
                  }
                ],
                "id": 869,
                "name": "ParameterList",
                "src": "1075:9:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 869
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IPopulousGovernanceV2_$8345",
                                  "typeString": "contract IPopulousGovernanceV2"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address"
                                },
                                "id": 870,
                                "name": "ElementaryTypeName",
                                "src": "1102:7:5"
                              }
                            ],
                            "id": 871,
                            "name": "ElementaryTypeNameExpression",
                            "src": "1102:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 800,
                              "type": "contract IPopulousGovernanceV2",
                              "value": "governance"
                            },
                            "id": 872,
                            "name": "Identifier",
                            "src": "1110:10:5"
                          }
                        ],
                        "id": 873,
                        "name": "FunctionCall",
                        "src": "1102:19:5"
                      }
                    ],
                    "id": 874,
                    "name": "Return",
                    "src": "1095:26:5"
                  }
                ],
                "id": 875,
                "name": "Block",
                "src": "1085:43:5"
              }
            ],
            "id": 876,
            "name": "FunctionDefinition",
            "src": "1043:85:5"
          },
          {
            "attributes": {
              "functionSelector": "8f10b2e0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPXT",
              "scope": 1037,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 877,
                "name": "ParameterList",
                "src": "1149:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 887,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 878,
                        "name": "ElementaryTypeName",
                        "src": "1167:7:5"
                      }
                    ],
                    "id": 879,
                    "name": "VariableDeclaration",
                    "src": "1167:7:5"
                  }
                ],
                "id": 880,
                "name": "ParameterList",
                "src": "1166:9:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 880
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$635",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address"
                                },
                                "id": 881,
                                "name": "ElementaryTypeName",
                                "src": "1193:7:5"
                              }
                            ],
                            "id": 882,
                            "name": "ElementaryTypeNameExpression",
                            "src": "1193:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 798,
                              "type": "contract ERC20",
                              "value": "pxtToken"
                            },
                            "id": 883,
                            "name": "Identifier",
                            "src": "1201:8:5"
                          }
                        ],
                        "id": 884,
                        "name": "FunctionCall",
                        "src": "1193:17:5"
                      }
                    ],
                    "id": 885,
                    "name": "Return",
                    "src": "1186:24:5"
                  }
                ],
                "id": 886,
                "name": "Block",
                "src": "1176:41:5"
              }
            ],
            "id": 887,
            "name": "FunctionDefinition",
            "src": "1134:83:5"
          },
          {
            "attributes": {
              "functionSelector": "d0e30db0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "deposit",
              "scope": 1037,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 888,
                "name": "ParameterList",
                "src": "1239:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 889,
                "name": "ParameterList",
                "src": "1249:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        891
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "balance",
                          "scope": 943,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 890,
                            "name": "ElementaryTypeName",
                            "src": "1259:7:5"
                          }
                        ],
                        "id": 891,
                        "name": "VariableDeclaration",
                        "src": "1259:15:5"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 256,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 798,
                                  "type": "contract ERC20",
                                  "value": "pxtToken"
                                },
                                "id": 892,
                                "name": "Identifier",
                                "src": "1277:8:5"
                              }
                            ],
                            "id": 893,
                            "name": "MemberAccess",
                            "src": "1277:18:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 894,
                                "name": "Identifier",
                                "src": "1296:3:5"
                              }
                            ],
                            "id": 895,
                            "name": "MemberAccess",
                            "src": "1296:10:5"
                          }
                        ],
                        "id": 896,
                        "name": "FunctionCall",
                        "src": "1277:30:5"
                      }
                    ],
                    "id": 897,
                    "name": "VariableDeclarationStatement",
                    "src": "1259:48:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ceef2ed4ea4e9522f6a466855b3e87859412fb4a07eb43391ee1df3be1215ac1",
                                  "typeString": "literal_string \"MockVotingToken: PXT balance must be above 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 898,
                            "name": "Identifier",
                            "src": "1317:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 891,
                                  "type": "uint256",
                                  "value": "balance"
                                },
                                "id": 899,
                                "name": "Identifier",
                                "src": "1325:7:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 900,
                                "name": "Literal",
                                "src": "1335:1:5"
                              }
                            ],
                            "id": 901,
                            "name": "BinaryOperation",
                            "src": "1325:11:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a205058542062616c616e6365206d7573742062652061626f76652030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: PXT balance must be above 0\"",
                              "value": "MockVotingToken: PXT balance must be above 0"
                            },
                            "id": 902,
                            "name": "Literal",
                            "src": "1338:46:5"
                          }
                        ],
                        "id": 903,
                        "name": "FunctionCall",
                        "src": "1317:68:5"
                      }
                    ],
                    "id": 904,
                    "name": "ExpressionStatement",
                    "src": "1317:68:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_65289d9935fc7fc7500fa121f5babf596a07f14c6ec9ef87e67049a666f0cd5b",
                                  "typeString": "literal_string \"MockVotingToken: Voting token balance must be 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 905,
                            "name": "Identifier",
                            "src": "1395:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 256,
                                      "type": "function (address) view returns (uint256)",
                                      "value": "balanceOf"
                                    },
                                    "id": 906,
                                    "name": "Identifier",
                                    "src": "1403:9:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 907,
                                        "name": "Identifier",
                                        "src": "1413:3:5"
                                      }
                                    ],
                                    "id": 908,
                                    "name": "MemberAccess",
                                    "src": "1413:10:5"
                                  }
                                ],
                                "id": 909,
                                "name": "FunctionCall",
                                "src": "1403:21:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 910,
                                "name": "Literal",
                                "src": "1428:1:5"
                              }
                            ],
                            "id": 911,
                            "name": "BinaryOperation",
                            "src": "1403:26:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20566f74696e6720746f6b656e2062616c616e6365206d7573742062652030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Voting token balance must be 0\"",
                              "value": "MockVotingToken: Voting token balance must be 0"
                            },
                            "id": 912,
                            "name": "Literal",
                            "src": "1431:49:5"
                          }
                        ],
                        "id": 913,
                        "name": "FunctionCall",
                        "src": "1395:86:5"
                      }
                    ],
                    "id": 914,
                    "name": "ExpressionStatement",
                    "src": "1395:86:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b0c60d9780390b118bc784fb2157e3224df4b9966992c8da5ead50ee9998b322",
                                  "typeString": "literal_string \"MockVotingToken: TransferFrom failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 915,
                            "name": "Identifier",
                            "src": "1491:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "transferFrom",
                                      "referencedDeclaration": 353,
                                      "type": "function (address,address,uint256) external returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 798,
                                          "type": "contract ERC20",
                                          "value": "pxtToken"
                                        },
                                        "id": 916,
                                        "name": "Identifier",
                                        "src": "1512:8:5"
                                      }
                                    ],
                                    "id": 917,
                                    "name": "MemberAccess",
                                    "src": "1512:21:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 918,
                                        "name": "Identifier",
                                        "src": "1534:3:5"
                                      }
                                    ],
                                    "id": 919,
                                    "name": "MemberAccess",
                                    "src": "1534:10:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_MockVotingToken_$1037",
                                              "typeString": "contract MockVotingToken"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "address"
                                            },
                                            "id": 920,
                                            "name": "ElementaryTypeName",
                                            "src": "1546:7:5"
                                          }
                                        ],
                                        "id": 921,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1546:7:5"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -28,
                                          "type": "contract MockVotingToken",
                                          "value": "this"
                                        },
                                        "id": 922,
                                        "name": "Identifier",
                                        "src": "1554:4:5"
                                      }
                                    ],
                                    "id": 923,
                                    "name": "FunctionCall",
                                    "src": "1546:13:5"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 891,
                                      "type": "uint256",
                                      "value": "balance"
                                    },
                                    "id": 924,
                                    "name": "Identifier",
                                    "src": "1561:7:5"
                                  }
                                ],
                                "id": 925,
                                "name": "FunctionCall",
                                "src": "1512:57:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 926,
                                "name": "Literal",
                                "src": "1573:4:5"
                              }
                            ],
                            "id": 927,
                            "name": "BinaryOperation",
                            "src": "1512:65:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a205472616e7366657246726f6d206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: TransferFrom failed\"",
                              "value": "MockVotingToken: TransferFrom failed"
                            },
                            "id": 928,
                            "name": "Literal",
                            "src": "1591:38:5"
                          }
                        ],
                        "id": 929,
                        "name": "FunctionCall",
                        "src": "1491:148:5"
                      }
                    ],
                    "id": 930,
                    "name": "ExpressionStatement",
                    "src": "1491:148:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 514,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 931,
                            "name": "Identifier",
                            "src": "1649:5:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 932,
                                "name": "Identifier",
                                "src": "1655:3:5"
                              }
                            ],
                            "id": 933,
                            "name": "MemberAccess",
                            "src": "1655:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 891,
                              "type": "uint256",
                              "value": "balance"
                            },
                            "id": 934,
                            "name": "Identifier",
                            "src": "1667:7:5"
                          }
                        ],
                        "id": 935,
                        "name": "FunctionCall",
                        "src": "1649:26:5"
                      }
                    ],
                    "id": 936,
                    "name": "ExpressionStatement",
                    "src": "1649:26:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 815,
                              "type": "function (address,uint256)",
                              "value": "Deposit"
                            },
                            "id": 937,
                            "name": "Identifier",
                            "src": "1690:7:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 938,
                                "name": "Identifier",
                                "src": "1698:3:5"
                              }
                            ],
                            "id": 939,
                            "name": "MemberAccess",
                            "src": "1698:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 891,
                              "type": "uint256",
                              "value": "balance"
                            },
                            "id": 940,
                            "name": "Identifier",
                            "src": "1710:7:5"
                          }
                        ],
                        "id": 941,
                        "name": "FunctionCall",
                        "src": "1690:28:5"
                      }
                    ],
                    "id": 942,
                    "name": "EmitStatement",
                    "src": "1685:33:5"
                  }
                ],
                "id": 943,
                "name": "Block",
                "src": "1249:476:5"
              }
            ],
            "id": 944,
            "name": "FunctionDefinition",
            "src": "1223:502:5"
          },
          {
            "attributes": {
              "functionSelector": "be040fb0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "redeem",
              "scope": 1037,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 945,
                "name": "ParameterList",
                "src": "1746:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 946,
                "name": "ParameterList",
                "src": "1756:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        948
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "govBalance",
                          "scope": 1019,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 947,
                            "name": "ElementaryTypeName",
                            "src": "1766:7:5"
                          }
                        ],
                        "id": 948,
                        "name": "VariableDeclaration",
                        "src": "1766:18:5"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 256,
                              "type": "function (address) view returns (uint256)",
                              "value": "balanceOf"
                            },
                            "id": 949,
                            "name": "Identifier",
                            "src": "1787:9:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 950,
                                "name": "Identifier",
                                "src": "1797:3:5"
                              }
                            ],
                            "id": 951,
                            "name": "MemberAccess",
                            "src": "1797:10:5"
                          }
                        ],
                        "id": 952,
                        "name": "FunctionCall",
                        "src": "1787:21:5"
                      }
                    ],
                    "id": 953,
                    "name": "VariableDeclarationStatement",
                    "src": "1766:42:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 560,
                              "type": "function (address,uint256)",
                              "value": "_burn"
                            },
                            "id": 954,
                            "name": "Identifier",
                            "src": "1818:5:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 955,
                                "name": "Identifier",
                                "src": "1824:3:5"
                              }
                            ],
                            "id": 956,
                            "name": "MemberAccess",
                            "src": "1824:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 948,
                              "type": "uint256",
                              "value": "govBalance"
                            },
                            "id": 957,
                            "name": "Identifier",
                            "src": "1836:10:5"
                          }
                        ],
                        "id": 958,
                        "name": "FunctionCall",
                        "src": "1818:29:5"
                      }
                    ],
                    "id": 959,
                    "name": "ExpressionStatement",
                    "src": "1818:29:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            961
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 1006,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 960,
                                "name": "ElementaryTypeName",
                                "src": "1863:7:5"
                              }
                            ],
                            "id": 961,
                            "name": "VariableDeclaration",
                            "src": "1863:9:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 962,
                            "name": "Literal",
                            "src": "1875:1:5"
                          }
                        ],
                        "id": 963,
                        "name": "VariableDeclarationStatement",
                        "src": "1863:13:5"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 961,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 964,
                            "name": "Identifier",
                            "src": "1878:1:5"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "getProposalsCount",
                                  "referencedDeclaration": 8318,
                                  "type": "function () view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 800,
                                      "type": "contract IPopulousGovernanceV2",
                                      "value": "governance"
                                    },
                                    "id": 965,
                                    "name": "Identifier",
                                    "src": "1882:10:5"
                                  }
                                ],
                                "id": 966,
                                "name": "MemberAccess",
                                "src": "1882:28:5"
                              }
                            ],
                            "id": 967,
                            "name": "FunctionCall",
                            "src": "1882:30:5"
                          }
                        ],
                        "id": 968,
                        "name": "BinaryOperation",
                        "src": "1878:34:5"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 961,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 969,
                                "name": "Identifier",
                                "src": "1914:1:5"
                              }
                            ],
                            "id": 970,
                            "name": "UnaryOperation",
                            "src": "1914:3:5"
                          }
                        ],
                        "id": 971,
                        "name": "ExpressionStatement",
                        "src": "1914:3:5"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                973
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "state",
                                  "scope": 1005,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 972,
                                    "name": "ElementaryTypeName",
                                    "src": "1933:7:5"
                                  }
                                ],
                                "id": 973,
                                "name": "VariableDeclaration",
                                "src": "1933:13:5"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_ProposalState_$8018",
                                          "typeString": "enum IPopulousGovernanceV2.ProposalState"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256"
                                        },
                                        "id": 974,
                                        "name": "ElementaryTypeName",
                                        "src": "1949:7:5"
                                      }
                                    ],
                                    "id": 975,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1949:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "enum IPopulousGovernanceV2.ProposalState",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getProposalState",
                                          "referencedDeclaration": 8344,
                                          "type": "function (uint256) view external returns (enum IPopulousGovernanceV2.ProposalState)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 800,
                                              "type": "contract IPopulousGovernanceV2",
                                              "value": "governance"
                                            },
                                            "id": 976,
                                            "name": "Identifier",
                                            "src": "1957:10:5"
                                          }
                                        ],
                                        "id": 977,
                                        "name": "MemberAccess",
                                        "src": "1957:27:5"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 961,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 978,
                                        "name": "Identifier",
                                        "src": "1985:1:5"
                                      }
                                    ],
                                    "id": 979,
                                    "name": "FunctionCall",
                                    "src": "1957:30:5"
                                  }
                                ],
                                "id": 980,
                                "name": "FunctionCall",
                                "src": "1949:39:5"
                              }
                            ],
                            "id": 981,
                            "name": "VariableDeclarationStatement",
                            "src": "1933:55:5"
                          },
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint248",
                                    "typeString": "uint248"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "votingPower",
                                      "referencedDeclaration": 8022,
                                      "type": "uint248"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "struct IPopulousGovernanceV2.Vote memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "getVoteOnProposal",
                                              "referencedDeclaration": 8336,
                                              "type": "function (uint256,address) view external returns (struct IPopulousGovernanceV2.Vote memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 800,
                                                  "type": "contract IPopulousGovernanceV2",
                                                  "value": "governance"
                                                },
                                                "id": 982,
                                                "name": "Identifier",
                                                "src": "2006:10:5"
                                              }
                                            ],
                                            "id": 983,
                                            "name": "MemberAccess",
                                            "src": "2006:28:5"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 961,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 984,
                                            "name": "Identifier",
                                            "src": "2035:1:5"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -15,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 985,
                                                "name": "Identifier",
                                                "src": "2038:3:5"
                                              }
                                            ],
                                            "id": 986,
                                            "name": "MemberAccess",
                                            "src": "2038:10:5"
                                          }
                                        ],
                                        "id": 987,
                                        "name": "FunctionCall",
                                        "src": "2006:43:5"
                                      }
                                    ],
                                    "id": 988,
                                    "name": "MemberAccess",
                                    "src": "2006:55:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 989,
                                    "name": "Literal",
                                    "src": "2064:1:5"
                                  }
                                ],
                                "id": 990,
                                "name": "BinaryOperation",
                                "src": "2006:59:5"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                {
                                                  "typeIdentifier": "t_stringliteral_a00d3f0cf0ade350cea5351f0f6e31a682d3fcb68f293e4d5146022618c83468",
                                                  "typeString": "literal_string \"MockVotingToken: User cannot have vote on pending or active proposal\""
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                -18,
                                                -18
                                              ],
                                              "referencedDeclaration": -18,
                                              "type": "function (bool,string memory) pure",
                                              "value": "require"
                                            },
                                            "id": 991,
                                            "name": "Identifier",
                                            "src": "2085:7:5"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "||",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "!=",
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 973,
                                                          "type": "uint256",
                                                          "value": "state"
                                                        },
                                                        "id": 992,
                                                        "name": "Identifier",
                                                        "src": "2141:5:5"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "30",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 0",
                                                          "value": "0"
                                                        },
                                                        "id": 993,
                                                        "name": "Literal",
                                                        "src": "2150:1:5"
                                                      }
                                                    ],
                                                    "id": 994,
                                                    "name": "BinaryOperation",
                                                    "src": "2141:10:5"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "!=",
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 973,
                                                          "type": "uint256",
                                                          "value": "state"
                                                        },
                                                        "id": 995,
                                                        "name": "Identifier",
                                                        "src": "2155:5:5"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "32",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 2",
                                                          "value": "2"
                                                        },
                                                        "id": 996,
                                                        "name": "Literal",
                                                        "src": "2164:1:5"
                                                      }
                                                    ],
                                                    "id": 997,
                                                    "name": "BinaryOperation",
                                                    "src": "2155:10:5"
                                                  }
                                                ],
                                                "id": 998,
                                                "name": "BinaryOperation",
                                                "src": "2141:24:5"
                                              }
                                            ],
                                            "id": 999,
                                            "name": "TupleExpression",
                                            "src": "2115:72:5"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20557365722063616e6e6f74206861766520766f7465206f6e2070656e64696e67206f72206163746976652070726f706f73616c",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "string",
                                              "type": "literal_string \"MockVotingToken: User cannot have vote on pending or active proposal\"",
                                              "value": "MockVotingToken: User cannot have vote on pending or active proposal"
                                            },
                                            "id": 1000,
                                            "name": "Literal",
                                            "src": "2209:70:5"
                                          }
                                        ],
                                        "id": 1001,
                                        "name": "FunctionCall",
                                        "src": "2085:212:5"
                                      }
                                    ],
                                    "id": 1002,
                                    "name": "ExpressionStatement",
                                    "src": "2085:212:5"
                                  }
                                ],
                                "id": 1003,
                                "name": "Block",
                                "src": "2067:245:5"
                              }
                            ],
                            "id": 1004,
                            "name": "IfStatement",
                            "src": "2002:310:5"
                          }
                        ],
                        "id": 1005,
                        "name": "Block",
                        "src": "1919:403:5"
                      }
                    ],
                    "id": 1006,
                    "name": "ForStatement",
                    "src": "1858:464:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9bb84df761db99f638848e80e65339c8d06c1b48ba029805e1bfff638356d844",
                                  "typeString": "literal_string \"MockVotingToken: Transfer failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1007,
                            "name": "Identifier",
                            "src": "2332:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "transfer",
                                      "referencedDeclaration": 277,
                                      "type": "function (address,uint256) external returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 798,
                                          "type": "contract ERC20",
                                          "value": "pxtToken"
                                        },
                                        "id": 1008,
                                        "name": "Identifier",
                                        "src": "2353:8:5"
                                      }
                                    ],
                                    "id": 1009,
                                    "name": "MemberAccess",
                                    "src": "2353:17:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 1010,
                                        "name": "Identifier",
                                        "src": "2371:3:5"
                                      }
                                    ],
                                    "id": 1011,
                                    "name": "MemberAccess",
                                    "src": "2371:10:5"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 948,
                                      "type": "uint256",
                                      "value": "govBalance"
                                    },
                                    "id": 1012,
                                    "name": "Identifier",
                                    "src": "2383:10:5"
                                  }
                                ],
                                "id": 1013,
                                "name": "FunctionCall",
                                "src": "2353:41:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 1014,
                                "name": "Literal",
                                "src": "2398:4:5"
                              }
                            ],
                            "id": 1015,
                            "name": "BinaryOperation",
                            "src": "2353:49:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a205472616e73666572206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Transfer failed\"",
                              "value": "MockVotingToken: Transfer failed"
                            },
                            "id": 1016,
                            "name": "Literal",
                            "src": "2416:34:5"
                          }
                        ],
                        "id": 1017,
                        "name": "FunctionCall",
                        "src": "2332:128:5"
                      }
                    ],
                    "id": 1018,
                    "name": "ExpressionStatement",
                    "src": "2332:128:5"
                  }
                ],
                "id": 1019,
                "name": "Block",
                "src": "1756:711:5"
              }
            ],
            "id": 1020,
            "name": "FunctionDefinition",
            "src": "1731:736:5"
          },
          {
            "attributes": {
              "functionSelector": "c2ffbb91",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPowerAtBlock",
              "scope": 1037,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 1036,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1021,
                        "name": "ElementaryTypeName",
                        "src": "2537:7:5"
                      }
                    ],
                    "id": 1022,
                    "name": "VariableDeclaration",
                    "src": "2537:12:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "scope": 1036,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1023,
                        "name": "ElementaryTypeName",
                        "src": "2559:7:5"
                      }
                    ],
                    "id": 1024,
                    "name": "VariableDeclaration",
                    "src": "2559:19:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "delegationType",
                      "scope": 1036,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum MockVotingToken.DelegationType",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "DelegationType",
                          "referencedDeclaration": 787,
                          "type": "enum MockVotingToken.DelegationType"
                        },
                        "id": 1025,
                        "name": "UserDefinedTypeName",
                        "src": "2588:14:5"
                      }
                    ],
                    "id": 1026,
                    "name": "VariableDeclaration",
                    "src": "2588:29:5"
                  }
                ],
                "id": 1027,
                "name": "ParameterList",
                "src": "2527:96:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1036,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1028,
                        "name": "ElementaryTypeName",
                        "src": "2647:7:5"
                      }
                    ],
                    "id": 1029,
                    "name": "VariableDeclaration",
                    "src": "2647:7:5"
                  }
                ],
                "id": 1030,
                "name": "ParameterList",
                "src": "2646:9:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1030
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 256,
                              "type": "function (address) view returns (uint256)",
                              "value": "balanceOf"
                            },
                            "id": 1031,
                            "name": "Identifier",
                            "src": "2673:9:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1022,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 1032,
                            "name": "Identifier",
                            "src": "2683:4:5"
                          }
                        ],
                        "id": 1033,
                        "name": "FunctionCall",
                        "src": "2673:15:5"
                      }
                    ],
                    "id": 1034,
                    "name": "Return",
                    "src": "2666:22:5"
                  }
                ],
                "id": 1035,
                "name": "Block",
                "src": "2656:39:5"
              }
            ],
            "id": 1036,
            "name": "FunctionDefinition",
            "src": "2503:192:5"
          }
        ],
        "id": 1037,
        "name": "ContractDefinition",
        "src": "176:2521:5"
      }
    ],
    "id": 1038,
    "name": "SourceUnit",
    "src": "0:2697:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {
    "1618829795519": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b9369": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Redeemed",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x68235bE15aB67e79F1acDa121BF4AeAe83a9cC66",
      "transactionHash": "0x60568e2926e0e6c9518977a0fca6223032a14527647d40216bb0f9034a369f6e"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-04-19T10:58:21.366Z",
  "devdoc": {
    "details": "ERC20 minting logic",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "ERC20Mintable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}