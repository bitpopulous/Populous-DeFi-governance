{
  "contractName": "MockVotingToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements ERC20 minting logic\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MockVotingToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol\":\"MockVotingToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol\":{\"keccak256\":\"0xc6bc392dfd3a028e8afeee2ccdbda7c709b0157bb99114443b5796b2b52fa0a9\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://2c7c0170736ae84638919f07c0c8416a3df3ff77c4c0223596d8172869c5cc42\",\"dweb:/ipfs/QmavZRBLgMR5mQuH43uef43W3Nf6HYGf7cVzwiYA53JymR\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol\":{\"keccak256\":\"0xe6005139912c846fdbf4d922c87958fb2a0df460f6588c0cbfc393d6cd95e7ba\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d0b2c7b864f0239cef346633490d24ec9c487175f0e3763772639072869b74c3\",\"dweb:/ipfs/QmaoSrJkGQ1vNhVutk6kycywCuj98STdMX59K2ribCKTu9\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Context.sol\":{\"keccak256\":\"0x1184b768b1e5b8e13eb4a589c3b14c2bf6e04e9d061012c6c772a9830272a1f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be5034806781ef4986f7edd2ff2fe8dead05c2aeee627f55a4a68cfe21d43479\",\"dweb:/ipfs/QmQ5QNcLBdQSPRQSmxmNvBf6r2pS1AbNPPoEWw3Q2WHRmN\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IExecutorWithTimelock.sol\":{\"keccak256\":\"0xe27ae25a8abbeaf73dafda3cf0917a32ba43b3d81bd96515eb8ecf1885e62661\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://853b9bfaff76bf4f22a1e63025340c9931734a2c8120658ed9eaf92fa1651483\",\"dweb:/ipfs/Qmcx4UjPCZTwoHWh3AMeWj43U5Br8FVBn4DFg2zqpoKuX7\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol\":{\"keccak256\":\"0x19e9b81bdd748beac15a0b8e0d93e27d1bf980e5168c687230e10c96eb4a061e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6082c64c8fb2178d4edb88332070d4bfad38cf5c317f583d2161411a9e2c2d75\",\"dweb:/ipfs/QmUFYPqk4CTAEdrMxnPNY3YRgkMxEzZ2e9nbDTmxok2bqc\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/misc/Ownable.sol\":{\"keccak256\":\"0xa792b05d4ece249c74a878fa7de3ac3740275c3b5011b6e35a1d998caa45f7ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a6b379ee7e2f4cd32a095745835bbeabbb54d9afe3380c920e4bb80e527774d\",\"dweb:/ipfs/QmVrc6YCwd5uxrgRawCArDSwihdzxy1cYQAYjWh4FzCvRP\"]}},\"version\":1}",
  "bytecode": "0x600860045560c060405260036080819052621411d560ea1b60a09081526200002b9160059190620000e5565b506040805180820190915260198082527f506f70756c6f757320476f7665726e616e636520546f6b656e0000000000000060209092019182526200007291600691620000e5565b503480156200008057600080fd5b5060006200008d620000e1565b600380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000191565b3390565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200011d576000855562000168565b82601f106200013857805160ff191683800117855562000168565b8280016001018555821562000168579182015b82811115620001685782518255916020019190600101906200014b565b50620001769291506200017a565b5090565b5b808211156200017657600081556001016200017b565b610f2e80620001a16000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb1461022d578063b2bdfa7b14610240578063dd62ed3e14610248578063f2fde38b1461025b578063f851a4401461026e57610121565b8063715018a6146101e25780638da5cb5b146101ea57806395d89b41146101ff5780639dc29fac14610207578063a457c2d71461021a57610121565b8063313ce567116100f4578063313ce5671461018c578063395093511461019457806340c10f19146101a7578063704b6c02146101ba57806370a08231146101cf57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016457806323b872dd14610179575b600080fd5b61012e610276565b60405161013b9190610d39565b60405180910390f35b610157610152366004610cf1565b610304565b60405161013b9190610d2e565b61016c61031a565b60405161013b9190610e1a565b610157610187366004610cb6565b610320565b61016c610371565b6101576101a2366004610cf1565b610377565b6101576101b5366004610cf1565b6103ad565b6101cd6101c8366004610c6a565b6103f7565b005b61016c6101dd366004610c6a565b6104a9565b6101cd6104c8565b6101f261057c565b60405161013b9190610d1a565b61012e61058b565b610157610215366004610cf1565b6105e6565b610157610228366004610cf1565b610627565b61015761023b366004610cf1565b61065d565b6101f261066a565b61016c610256366004610c84565b610679565b6101cd610269366004610c6a565b6106a4565b6101f26107af565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b60006103113384846107be565b50600192915050565b60025490565b600061032d8484846108aa565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461036791869161036290866109e0565b6107be565b5060019392505050565b60045481565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103119185906103629086610a3d565b60006103b7610a9e565b6007546001600160a01b039081169116146103ed5760405162461bcd60e51b81526004016103e490610d8c565b60405180910390fd5b6103118383610aa2565b6103ff610a9e565b6003546001600160a01b03908116911614610461576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104875760405162461bcd60e51b81526004016103e490610dd4565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152602081905260409020545b919050565b6104d0610a9e565b6003546001600160a01b03908116911614610532576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6003546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380546001600160a01b0319169055565b6003546001600160a01b031690565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102fc5780601f106102d1576101008083540402835291602001916102fc565b60006105f0610a9e565b6007546001600160a01b0390811691161461061d5760405162461bcd60e51b81526004016103e490610d8c565b6103118383610b86565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161031191859061036290866109e0565b60006103113384846108aa565b6003546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6106ac610a9e565b6003546001600160a01b0390811691161461070e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166107535760405162461bcd60e51b8152600401808060200182810382526026815260200180610e476026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031681565b6001600160a01b0383166108035760405162461bcd60e51b8152600401808060200182810382526024815260200180610ed56024913960400191505060405180910390fd5b6001600160a01b0382166108485760405162461bcd60e51b8152600401808060200182810382526022815260200180610e6d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108ef5760405162461bcd60e51b8152600401808060200182810382526025815260200180610eb06025913960400191505060405180910390fd5b6001600160a01b0382166109345760405162461bcd60e51b8152600401808060200182810382526023815260200180610e246023913960400191505060405180910390fd5b6001600160a01b03831660009081526020819052604090205461095790826109e0565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109869082610a3d565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610a37576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610a97576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b038216610afd576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610b0a9082610a3d565b6002556001600160a01b038216600090815260208190526040902054610b309082610a3d565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610bcb5760405162461bcd60e51b8152600401808060200182810382526021815260200180610e8f6021913960400191505060405180910390fd5b600254610bd890826109e0565b6002556001600160a01b038216600090815260208190526040902054610bfe90826109e0565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b80356001600160a01b03811681146104c357600080fd5b600060208284031215610c7b578081fd5b610a9782610c53565b60008060408385031215610c96578081fd5b610c9f83610c53565b9150610cad60208401610c53565b90509250929050565b600080600060608486031215610cca578081fd5b610cd384610c53565b9250610ce160208501610c53565b9150604084013590509250925092565b60008060408385031215610d03578182fd5b610d0c83610c53565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610d6557858101830151858201604001528201610d49565b81811115610d765783604083870101525b50601f01601f1916929092016040019392505050565b60208082526028908201527f4d6f636b566f74696e67546f6b656e3a2063616c6c6572206973206e6f74207460408201526734329030b236b4b760c11b606082015260800190565b60208082526026908201527f4d6f636b566f74696e67546f6b656e3a20496e76616c69642061646d696e206160408201526564647265737360d01b606082015260800190565b9081526020019056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a2646970667358221220262647e10a7e7dc87ddb8a3a142d011f234a3a549543402864dbf53025fb274364736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb1461022d578063b2bdfa7b14610240578063dd62ed3e14610248578063f2fde38b1461025b578063f851a4401461026e57610121565b8063715018a6146101e25780638da5cb5b146101ea57806395d89b41146101ff5780639dc29fac14610207578063a457c2d71461021a57610121565b8063313ce567116100f4578063313ce5671461018c578063395093511461019457806340c10f19146101a7578063704b6c02146101ba57806370a08231146101cf57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016457806323b872dd14610179575b600080fd5b61012e610276565b60405161013b9190610d39565b60405180910390f35b610157610152366004610cf1565b610304565b60405161013b9190610d2e565b61016c61031a565b60405161013b9190610e1a565b610157610187366004610cb6565b610320565b61016c610371565b6101576101a2366004610cf1565b610377565b6101576101b5366004610cf1565b6103ad565b6101cd6101c8366004610c6a565b6103f7565b005b61016c6101dd366004610c6a565b6104a9565b6101cd6104c8565b6101f261057c565b60405161013b9190610d1a565b61012e61058b565b610157610215366004610cf1565b6105e6565b610157610228366004610cf1565b610627565b61015761023b366004610cf1565b61065d565b6101f261066a565b61016c610256366004610c84565b610679565b6101cd610269366004610c6a565b6106a4565b6101f26107af565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b60006103113384846107be565b50600192915050565b60025490565b600061032d8484846108aa565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461036791869161036290866109e0565b6107be565b5060019392505050565b60045481565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103119185906103629086610a3d565b60006103b7610a9e565b6007546001600160a01b039081169116146103ed5760405162461bcd60e51b81526004016103e490610d8c565b60405180910390fd5b6103118383610aa2565b6103ff610a9e565b6003546001600160a01b03908116911614610461576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104875760405162461bcd60e51b81526004016103e490610dd4565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152602081905260409020545b919050565b6104d0610a9e565b6003546001600160a01b03908116911614610532576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6003546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380546001600160a01b0319169055565b6003546001600160a01b031690565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102fc5780601f106102d1576101008083540402835291602001916102fc565b60006105f0610a9e565b6007546001600160a01b0390811691161461061d5760405162461bcd60e51b81526004016103e490610d8c565b6103118383610b86565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161031191859061036290866109e0565b60006103113384846108aa565b6003546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6106ac610a9e565b6003546001600160a01b0390811691161461070e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166107535760405162461bcd60e51b8152600401808060200182810382526026815260200180610e476026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031681565b6001600160a01b0383166108035760405162461bcd60e51b8152600401808060200182810382526024815260200180610ed56024913960400191505060405180910390fd5b6001600160a01b0382166108485760405162461bcd60e51b8152600401808060200182810382526022815260200180610e6d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108ef5760405162461bcd60e51b8152600401808060200182810382526025815260200180610eb06025913960400191505060405180910390fd5b6001600160a01b0382166109345760405162461bcd60e51b8152600401808060200182810382526023815260200180610e246023913960400191505060405180910390fd5b6001600160a01b03831660009081526020819052604090205461095790826109e0565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109869082610a3d565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610a37576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610a97576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b038216610afd576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610b0a9082610a3d565b6002556001600160a01b038216600090815260208190526040902054610b309082610a3d565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610bcb5760405162461bcd60e51b8152600401808060200182810382526021815260200180610e8f6021913960400191505060405180910390fd5b600254610bd890826109e0565b6002556001600160a01b038216600090815260208190526040902054610bfe90826109e0565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b80356001600160a01b03811681146104c357600080fd5b600060208284031215610c7b578081fd5b610a9782610c53565b60008060408385031215610c96578081fd5b610c9f83610c53565b9150610cad60208401610c53565b90509250929050565b600080600060608486031215610cca578081fd5b610cd384610c53565b9250610ce160208501610c53565b9150604084013590509250925092565b60008060408385031215610d03578182fd5b610d0c83610c53565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610d6557858101830151858201604001528201610d49565b81811115610d765783604083870101525b50601f01601f1916929092016040019392505050565b60208082526028908201527f4d6f636b566f74696e67546f6b656e3a2063616c6c6572206973206e6f74207460408201526734329030b236b4b760c11b606082015260800190565b60208082526026908201527f4d6f636b566f74696e67546f6b656e3a20496e76616c69642061646d696e206160408201526564647265737360d01b606082015260800190565b9081526020019056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a2646970667358221220262647e10a7e7dc87ddb8a3a142d011f234a3a549543402864dbf53025fb274364736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3297:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:35"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:35",
                "type": ""
              }
            ],
            "src": "14:175:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:35",
                "type": ""
              }
            ],
            "src": "194:198:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:35",
                "type": ""
              }
            ],
            "src": "397:274:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:35"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:35",
                "type": ""
              }
            ],
            "src": "676:342:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:179:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1156:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1165:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1173:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1158:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1158:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1158:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1131:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1140:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1152:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1120:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1201:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1241:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1268:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1279:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1079:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1091:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1099:6:35",
                "type": ""
              }
            ],
            "src": "1023:266:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1405:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1417:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1428:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1405:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1447:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1462:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1483:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1474:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1474:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1487:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1470:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1470:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1458:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1458:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1440:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1375:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1386:4:35",
                "type": ""
              }
            ],
            "src": "1294:203:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1597:92:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1607:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1619:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1630:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1615:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1615:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1607:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1649:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1674:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1667:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1667:14:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1660:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1642:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1642:41:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1642:41:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1566:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1577:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1588:4:35",
                "type": ""
              }
            ],
            "src": "1502:187:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1815:482:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1825:12:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1835:2:35",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1829:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1853:9:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1864:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1846:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1846:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1846:21:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1876:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1896:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1890:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:13:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1880:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1923:9:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1934:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1919:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1919:18:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1939:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1912:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1912:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1912:34:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1955:13:35",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "1964:4:35"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1959:1:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2027:90:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2056:9:35"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2067:1:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2052:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2052:17:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2071:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2048:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2048:26:35"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2090:6:35"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2098:1:35"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2086:3:35"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2086:14:35"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2102:2:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2082:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2082:23:35"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2076:5:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2076:30:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2041:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2041:66:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2041:66:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1988:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1991:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1985:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1985:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1999:19:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2001:15:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2010:1:35"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2013:2:35"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2006:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2006:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2001:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1981:3:35",
                    "statements": []
                  },
                  "src": "1977:140:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2151:69:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2180:9:35"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2191:6:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2176:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2176:22:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2200:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2172:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2172:31:35"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2205:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2165:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2165:45:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2165:45:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2132:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2135:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2129:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2129:13:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2126:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2229:62:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2245:9:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2264:6:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2272:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2260:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2260:15:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2281:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2277:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2277:7:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2256:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2256:29:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2241:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2241:45:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2288:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2237:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2237:54:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2229:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1784:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1795:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1806:4:35",
                "type": ""
              }
            ],
            "src": "1694:603:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2476:230:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2493:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2504:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2486:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2486:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2486:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2527:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2538:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2523:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2523:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2543:2:35",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2516:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2516:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2566:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2577:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2562:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2562:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2582:34:35",
                        "type": "",
                        "value": "MockVotingToken: caller is not t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2555:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2555:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2555:62:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2637:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2648:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2633:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2633:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2653:10:35",
                        "type": "",
                        "value": "he admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2626:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2626:38:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2626:38:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2673:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2685:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2681:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2673:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_607ab4213cacb4e608436f7c15831f844f6c39a52a1d3352410951ed044d1002__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2453:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2467:4:35",
                "type": ""
              }
            ],
            "src": "2302:404:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2885:228:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2902:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2913:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2895:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2895:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2895:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2936:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2947:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2932:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2932:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2952:2:35",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2925:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2925:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2925:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2975:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2986:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2971:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2971:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2991:34:35",
                        "type": "",
                        "value": "MockVotingToken: Invalid admin a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2964:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2964:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2964:62:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3046:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3057:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3042:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3042:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3062:8:35",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3035:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3035:36:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3035:36:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3080:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3092:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3103:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3088:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3088:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3080:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d7c759815dd605a327d32efd3847309a54aac8da0d1c34536aec43530f45402__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2862:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2876:4:35",
                "type": ""
              }
            ],
            "src": "2711:402:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3219:76:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3229:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3241:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3252:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3237:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3237:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3229:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3271:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3282:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3264:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3264:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3264:25:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3188:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3199:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3210:4:35",
                "type": ""
              }
            ],
            "src": "3118:177:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_607ab4213cacb4e608436f7c15831f844f6c39a52a1d3352410951ed044d1002__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"MockVotingToken: caller is not t\")\n        mstore(add(headStart, 96), \"he admin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9d7c759815dd605a327d32efd3847309a54aac8da0d1c34536aec43530f45402__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"MockVotingToken: Invalid admin a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "346:1:4:-:0;320:27;;353:28;271:786;353:28;;271:786;353:28;;;-1:-1:-1;;;353:28:4;;;;;;;;;;:::i;:::-;-1:-1:-1;387:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;271:786;;;;;;;;;-1:-1:-1;861:17:31;881:12;:10;:12::i;:::-;899:6;:18;;-1:-1:-1;;;;;;899:18:31;-1:-1:-1;;;;;899:18:31;;;;;;;;928:43;;899:18;;-1:-1:-1;899:18:31;-1:-1:-1;;928:43:31;;-1:-1:-1;;928:43:31;841:135;271:786:4;;586:98:8;669:10;586:98;:::o;271:786:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;271:786:4;;;-1:-1:-1;271:786:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "271:786:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8719:154:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7744:98::-;;;:::i;:::-;;;;;;;:::i;9330:261::-;;;;;;:::i;:::-;;:::i;320:27:4:-;;;:::i;9986:203:0:-;;;;;;:::i;:::-;;:::i;767:141:4:-;;;;;;:::i;:::-;;:::i;598:163::-;;;;;;:::i;:::-;;:::i;:::-;;7900:117:0;;;;;;:::i;:::-;;:::i;1627:135:31:-;;;:::i;1044:71::-;;;:::i;:::-;;;;;;;:::i;353:28:4:-;;;:::i;914:141::-;;;;;;:::i;:::-;;:::i;10676:213:0:-;;;;;;:::i;:::-;;:::i;8220:162::-;;;;;;:::i;:::-;;:::i;636:21:31:-;;;:::i;8440:141:0:-;;;;;;:::i;:::-;;:::i;1901:226:31:-;;;;;;:::i;:::-;;:::i;442:20:4:-;;;:::i;387:48::-;;;;;;;;;;;;;;;-1:-1:-1;;387:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8719:154:0:-;8793:4;8809:36;8818:10;8830:7;8839:5;8809:8;:36::i;:::-;-1:-1:-1;8862:4:0;8719:154;;;;:::o;7744:98::-;7823:12;;7744:98;:::o;9330:261::-;9428:4;9444:36;9454:6;9462:9;9473:6;9444:9;:36::i;:::-;-1:-1:-1;;;;;9519:19:0;;;;;;:11;:19;;;;;;;;9507:10;9519:31;;;;;;;;;9490:73;;9499:6;;9519:43;;9555:6;9519:35;:43::i;:::-;9490:8;:73::i;:::-;-1:-1:-1;9580:4:0;9330:261;;;;;:::o;320:27:4:-;;;;:::o;9986:203:0:-;10091:10;10066:4;10112:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10112:32:0;;;;;;;;;;10066:4;;10082:79;;10103:7;;10112:48;;10149:10;10112:36;:48::i;767:141:4:-;842:4;517:12;:10;:12::i;:::-;508:5;;-1:-1:-1;;;;;508:5:4;;;:21;;;500:74;;;;-1:-1:-1;;;500:74:4;;;;;;;:::i;:::-;;;;;;;;;858:22:::1;864:7;873:6;858:5;:22::i;598:163::-:0;1240:12:31;:10;:12::i;:::-;1230:6;;-1:-1:-1;;;;;1230:6:31;;;:22;;;1222:67;;;;;-1:-1:-1;;;1222:67:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:20:4;::::1;659:71;;;;-1:-1:-1::0;;;659:71:4::1;;;;;;;:::i;:::-;740:5;:14:::0;;-1:-1:-1;;;;;;740:14:4::1;-1:-1:-1::0;;;;;740:14:4;;;::::1;::::0;;;::::1;::::0;;598:163::o;7900:117:0:-;-1:-1:-1;;;;;7992:18:0;;7966:7;7992:18;;;;;;;;;;;7900:117;;;;:::o;1627:135:31:-;1240:12;:10;:12::i;:::-;1230:6;;-1:-1:-1;;;;;1230:6:31;;;:22;;;1222:67;;;;;-1:-1:-1;;;1222:67:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:6:::1;::::0;1692:40:::1;::::0;1729:1:::1;::::0;-1:-1:-1;;;;;1713:6:31::1;::::0;1692:40:::1;::::0;1729:1;;1692:40:::1;1738:6;:19:::0;;-1:-1:-1;;;;;;1738:19:31::1;::::0;;1627:135::o;1044:71::-;1104:6;;-1:-1:-1;;;;;1104:6:31;1044:71;:::o;353:28:4:-;;;;;;;;;;;;;;;-1:-1:-1;;353:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;914:141;989:4;517:12;:10;:12::i;:::-;508:5;;-1:-1:-1;;;;;508:5:4;;;:21;;;500:74;;;;-1:-1:-1;;;500:74:4;;;;;;;:::i;:::-;1005:22:::1;1011:7;1020:6;1005:5;:22::i;10676:213:0:-:0;10786:10;10761:4;10807:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10807:32:0;;;;;;;;;;10761:4;;10777:84;;10798:7;;10807:53;;10844:15;10807:36;:53::i;8220:162::-;8298:4;8314:40;8324:10;8336:9;8347:6;8314:9;:40::i;636:21:31:-;;;-1:-1:-1;;;;;636:21:31;;:::o;8440:141:0:-;-1:-1:-1;;;;;8547:18:0;;;8521:7;8547:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8440:141::o;1901:226:31:-;1240:12;:10;:12::i;:::-;1230:6;;-1:-1:-1;;;;;1230:6:31;;;:22;;;1222:67;;;;;-1:-1:-1;;;1222:67:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1985:22:31;::::1;1977:73;;;;-1:-1:-1::0;;;1977:73:31::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:6;::::0;2061:38:::1;::::0;-1:-1:-1;;;;;2061:38:31;;::::1;::::0;2082:6:::1;::::0;2061:38:::1;::::0;2082:6:::1;::::0;2061:38:::1;2105:6;:17:::0;;-1:-1:-1;;;;;;2105:17:31::1;-1:-1:-1::0;;;;;2105:17:31;;;::::1;::::0;;;::::1;::::0;;1901:226::o;442:20:4:-;;;-1:-1:-1;;;;;442:20:4;;:::o;13401:329:0:-;-1:-1:-1;;;;;13493:19:0;;13485:68;;;;-1:-1:-1;;;13485:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13571:21:0;;13563:68;;;;-1:-1:-1;;;13563:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13642:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;13692:31;;;;;;;;;;;;;;;;;13401:329;;;:::o;11363:422::-;-1:-1:-1;;;;;11460:20:0;;11452:70;;;;-1:-1:-1;;;11452:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11540:23:0;;11532:71;;;;-1:-1:-1;;;11532:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11634:17:0;;:9;:17;;;;;;;;;;;:29;;11656:6;11634:21;:29::i;:::-;-1:-1:-1;;;;;11614:17:0;;;:9;:17;;;;;;;;;;;:49;;;;11696:20;;;;;;;:32;;11721:6;11696:24;:32::i;:::-;-1:-1:-1;;;;;11673:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;11743:35;;;;;;;11673:20;;11743:35;;;;;;;;;;;;;11363:422;;;:::o;1348:179::-;1406:7;1438:1;1433;:6;;1425:49;;;;;-1:-1:-1;;;1425:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1496:5:0;;;1348:179::o;908:176::-;966:7;997:5;;;1020:6;;;;1012:46;;;;;-1:-1:-1;;;1012:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:1;908:176;-1:-1:-1;;;908:176:0:o;586:98:8:-;669:10;586:98;:::o;12055:302:0:-;-1:-1:-1;;;;;12130:21:0;;12122:65;;;;;-1:-1:-1;;;12122:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12213:12;;:24;;12230:6;12213:16;:24::i;:::-;12198:12;:39;-1:-1:-1;;;;;12268:18:0;;:9;:18;;;;;;;;;;;:30;;12291:6;12268:22;:30::i;:::-;-1:-1:-1;;;;;12247:18:0;;:9;:18;;;;;;;;;;;:51;;;;12313:37;;;;;;;12247:18;;:9;;12313:37;;;;;;;;;;12055:302;;:::o;12676:300::-;-1:-1:-1;;;;;12750:21:0;;12742:67;;;;-1:-1:-1;;;12742:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12835:12;;:23;;12852:5;12835:16;:23::i;:::-;12820:12;:38;-1:-1:-1;;;;;12889:18:0;;:9;:18;;;;;;;;;;;:29;;12912:5;12889:22;:29::i;:::-;-1:-1:-1;;;;;12868:18:0;;:9;:18;;;;;;;;;;;:50;;;;12933:36;;;;;;;12868:9;;12933:36;;;;;;;;;;;12676:300;;:::o;14:175:35:-;84:20;;-1:-1:-1;;;;;133:31:35;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:35:o;1294:203::-;-1:-1:-1;;;;;1458:32:35;;;;1440:51;;1428:2;1413:18;;1395:102::o;1502:187::-;1667:14;;1660:22;1642:41;;1630:2;1615:18;;1597:92::o;1694:603::-;;1835:2;1864;1853:9;1846:21;1896:6;1890:13;1939:6;1934:2;1923:9;1919:18;1912:34;1964:4;1977:140;1991:6;1988:1;1985:13;1977:140;;;2086:14;;;2082:23;;2076:30;2052:17;;;2071:2;2048:26;2041:66;2006:10;;1977:140;;;2135:6;2132:1;2129:13;2126:2;;;2205:4;2200:2;2191:6;2180:9;2176:22;2172:31;2165:45;2126:2;-1:-1:-1;2281:2:35;2260:15;-1:-1:-1;;2256:29:35;2241:45;;;;2288:2;2237:54;;1815:482;-1:-1:-1;;;1815:482:35:o;2302:404::-;2504:2;2486:21;;;2543:2;2523:18;;;2516:30;2582:34;2577:2;2562:18;;2555:62;-1:-1:-1;;;2648:2:35;2633:18;;2626:38;2696:3;2681:19;;2476:230::o;2711:402::-;2913:2;2895:21;;;2952:2;2932:18;;;2925:30;2991:34;2986:2;2971:18;;2964:62;-1:-1:-1;;;3057:2:35;3042:18;;3035:36;3103:3;3088:19;;2885:228::o;3118:177::-;3264:25;;;3252:2;3237:18;;3219:76::o",
  "source": "//SPDX-License-Identifier: Unlicensed\npragma solidity 0.7.5;\npragma abicoder v2;\n\nimport \"./ERC20.sol\";\nimport \"./interfaces/IPopulousGovernanceV2.sol\";\nimport {Ownable} from './misc/Ownable.sol';\n\n/**\n * @title MockVotingToken\n * @dev Implements ERC20 minting logic\n */\ncontract MockVotingToken is ERC20, Ownable {\n    uint256 public decimals = 8;\n    string public symbol = \"PGT\";\n    string public name = \"Populous Governance Token\";\n\n    address public admin;\n\n    modifier onlyAdmin() {\n        require(admin == _msgSender(), 'MockVotingToken: caller is not the admin');\n        _;\n    }\n\n    function setAdmin(address _admin) public onlyOwner {\n        require(_admin != address(0), \"MockVotingToken: Invalid admin address\");\n        admin = _admin;\n    }\n\n    function mint(address account, uint256 amount) external onlyAdmin returns (bool) {\n        _mint(account, amount);\n        return true;\n    }\n\n    function burn(address account, uint256 amount) external onlyAdmin returns (bool) {\n        _burn(account, amount);\n        return true;\n    }\n}",
  "sourcePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
  "ast": {
    "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
    "exportedSymbols": {
      "ERC20": [
        635
      ],
      "IERC20": [
        214
      ],
      "IExecutorWithTimelock": [
        5004
      ],
      "IPopulousGovernanceV2": [
        5467
      ],
      "MockVotingToken": [
        850
      ],
      "Ownable": [
        5739
      ],
      "SafeMath": [
        138
      ]
    },
    "id": 851,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 756,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:22:4"
      },
      {
        "id": 757,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:19:4"
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 758,
        "nodeType": "ImportDirective",
        "scope": 851,
        "sourceUnit": 636,
        "src": "82:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol",
        "file": "./interfaces/IPopulousGovernanceV2.sol",
        "id": 759,
        "nodeType": "ImportDirective",
        "scope": 851,
        "sourceUnit": 5468,
        "src": "104:48:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/misc/Ownable.sol",
        "file": "./misc/Ownable.sol",
        "id": 761,
        "nodeType": "ImportDirective",
        "scope": 851,
        "sourceUnit": 5740,
        "src": "153:43:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 760,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "161:7:4",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 763,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "299:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "id": 764,
            "nodeType": "InheritanceSpecifier",
            "src": "299:5:4"
          },
          {
            "baseName": {
              "id": 765,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5739,
              "src": "306:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5739",
                "typeString": "contract Ownable"
              }
            },
            "id": 766,
            "nodeType": "InheritanceSpecifier",
            "src": "306:7:4"
          }
        ],
        "contractDependencies": [
          214,
          635,
          1172,
          5739
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 762,
          "nodeType": "StructuredDocumentation",
          "src": "198:72:4",
          "text": " @title MockVotingToken\n @dev Implements ERC20 minting logic"
        },
        "fullyImplemented": true,
        "id": 850,
        "linearizedBaseContracts": [
          850,
          5739,
          1172,
          635,
          214
        ],
        "name": "MockVotingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 769,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 850,
            "src": "320:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 767,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "320:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38",
              "id": 768,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "346:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "8"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 772,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 850,
            "src": "353:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 770,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "353:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "504754",
              "id": 771,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "376:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f0d3c9ef90764c3b30530e8fa3826c04ae4c2fea112aa2964c653b2c7cc9265d",
                "typeString": "literal_string \"PGT\""
              },
              "value": "PGT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 775,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 850,
            "src": "387:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 773,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "387:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "506f70756c6f757320476f7665726e616e636520546f6b656e",
              "id": 774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "408:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_df72cf89ec3bd8a38a17ae18f46f911c7085e465b2e6a67afa551d1148f7ab89",
                "typeString": "literal_string \"Populous Governance Token\""
              },
              "value": "Populous Governance Token"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 777,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 850,
            "src": "442:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 776,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 788,
              "nodeType": "Block",
              "src": "490:102:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 780,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "508:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 781,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1160,
                            "src": "517:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "517:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "508:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a2063616c6c6572206973206e6f74207468652061646d696e",
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "531:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_607ab4213cacb4e608436f7c15831f844f6c39a52a1d3352410951ed044d1002",
                          "typeString": "literal_string \"MockVotingToken: caller is not the admin\""
                        },
                        "value": "MockVotingToken: caller is not the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_607ab4213cacb4e608436f7c15831f844f6c39a52a1d3352410951ed044d1002",
                          "typeString": "literal_string \"MockVotingToken: caller is not the admin\""
                        }
                      ],
                      "id": 779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "500:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "500:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "500:74:4"
                },
                {
                  "id": 787,
                  "nodeType": "PlaceholderStatement",
                  "src": "584:1:4"
                }
              ]
            },
            "id": 789,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:2:4"
            },
            "src": "469:123:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 810,
              "nodeType": "Block",
              "src": "649:112:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 797,
                          "name": "_admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 791,
                          "src": "667:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "685:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "677:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 798,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "677:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "677:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "667:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b566f74696e67546f6b656e3a20496e76616c69642061646d696e2061646472657373",
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "689:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d7c759815dd605a327d32efd3847309a54aac8da0d1c34536aec43530f45402",
                          "typeString": "literal_string \"MockVotingToken: Invalid admin address\""
                        },
                        "value": "MockVotingToken: Invalid admin address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d7c759815dd605a327d32efd3847309a54aac8da0d1c34536aec43530f45402",
                          "typeString": "literal_string \"MockVotingToken: Invalid admin address\""
                        }
                      ],
                      "id": 796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "659:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "659:71:4"
                },
                {
                  "expression": {
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 806,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "740:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 807,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "748:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "740:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "740:14:4"
                }
              ]
            },
            "functionSelector": "704b6c02",
            "id": 811,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 794,
                "modifierName": {
                  "id": 793,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5688,
                  "src": "639:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "639:9:4"
              }
            ],
            "name": "setAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 811,
                  "src": "616:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "615:16:4"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "649:0:4"
            },
            "scope": 850,
            "src": "598:163:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "848:60:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 823,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "864:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 824,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "873:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 822,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "858:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "858:22:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "897:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 821,
                  "id": 828,
                  "nodeType": "Return",
                  "src": "890:11:4"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 818,
                "modifierName": {
                  "id": 817,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 789,
                  "src": "823:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "823:9:4"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "781:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "798:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "780:33:4"
            },
            "returnParameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "842:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "841:6:4"
            },
            "scope": 850,
            "src": "767:141:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 848,
              "nodeType": "Block",
              "src": "995:60:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 842,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "1011:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 843,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "1020:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 841,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "1005:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:22:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1044:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 840,
                  "id": 847,
                  "nodeType": "Return",
                  "src": "1037:11:4"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 849,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 837,
                "modifierName": {
                  "id": 836,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 789,
                  "src": "970:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "970:9:4"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "928:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "945:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "927:33:4"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "989:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "988:6:4"
            },
            "scope": 850,
            "src": "914:141:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 851,
        "src": "271:786:4"
      }
    ],
    "src": "38:1019:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/MockVotingToken.sol",
      "exportedSymbols": {
        "ERC20": [
          635
        ],
        "IERC20": [
          214
        ],
        "IExecutorWithTimelock": [
          5004
        ],
        "IPopulousGovernanceV2": [
          5467
        ],
        "MockVotingToken": [
          850
        ],
        "Ownable": [
          5739
        ],
        "SafeMath": [
          138
        ]
      },
      "license": "Unlicensed"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".5"
          ]
        },
        "id": 756,
        "name": "PragmaDirective",
        "src": "38:22:4"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 757,
        "name": "PragmaDirective",
        "src": "61:19:4"
      },
      {
        "attributes": {
          "SourceUnit": 636,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
          "file": "./ERC20.sol",
          "scope": 851,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 758,
        "name": "ImportDirective",
        "src": "82:21:4"
      },
      {
        "attributes": {
          "SourceUnit": 5468,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IPopulousGovernanceV2.sol",
          "file": "./interfaces/IPopulousGovernanceV2.sol",
          "scope": 851,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 759,
        "name": "ImportDirective",
        "src": "104:48:4"
      },
      {
        "attributes": {
          "SourceUnit": 5740,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/misc/Ownable.sol",
          "file": "./misc/Ownable.sol",
          "scope": 851,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "Ownable"
                },
                "id": 760,
                "name": "Identifier",
                "src": "161:7:4"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 761,
        "name": "ImportDirective",
        "src": "153:43:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            214,
            635,
            1172,
            5739
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            850,
            5739,
            1172,
            635,
            214
          ],
          "name": "MockVotingToken",
          "scope": 851
        },
        "children": [
          {
            "attributes": {
              "text": " @title MockVotingToken\n @dev Implements ERC20 minting logic"
            },
            "id": 762,
            "name": "StructuredDocumentation",
            "src": "198:72:4"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 763,
                "name": "UserDefinedTypeName",
                "src": "299:5:4"
              }
            ],
            "id": 764,
            "name": "InheritanceSpecifier",
            "src": "299:5:4"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 5739,
                  "type": "contract Ownable"
                },
                "id": 765,
                "name": "UserDefinedTypeName",
                "src": "306:7:4"
              }
            ],
            "id": 766,
            "name": "InheritanceSpecifier",
            "src": "306:7:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "313ce567",
              "mutability": "mutable",
              "name": "decimals",
              "scope": 850,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 767,
                "name": "ElementaryTypeName",
                "src": "320:7:4"
              },
              {
                "attributes": {
                  "hexvalue": "38",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 8",
                  "value": "8"
                },
                "id": 768,
                "name": "Literal",
                "src": "346:1:4"
              }
            ],
            "id": 769,
            "name": "VariableDeclaration",
            "src": "320:27:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "95d89b41",
              "mutability": "mutable",
              "name": "symbol",
              "scope": 850,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 770,
                "name": "ElementaryTypeName",
                "src": "353:6:4"
              },
              {
                "attributes": {
                  "hexvalue": "504754",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"PGT\"",
                  "value": "PGT"
                },
                "id": 771,
                "name": "Literal",
                "src": "376:5:4"
              }
            ],
            "id": 772,
            "name": "VariableDeclaration",
            "src": "353:28:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "06fdde03",
              "mutability": "mutable",
              "name": "name",
              "scope": 850,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 773,
                "name": "ElementaryTypeName",
                "src": "387:6:4"
              },
              {
                "attributes": {
                  "hexvalue": "506f70756c6f757320476f7665726e616e636520546f6b656e",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"Populous Governance Token\"",
                  "value": "Populous Governance Token"
                },
                "id": 774,
                "name": "Literal",
                "src": "408:27:4"
              }
            ],
            "id": 775,
            "name": "VariableDeclaration",
            "src": "387:48:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "f851a440",
              "mutability": "mutable",
              "name": "admin",
              "scope": 850,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 776,
                "name": "ElementaryTypeName",
                "src": "442:7:4"
              }
            ],
            "id": 777,
            "name": "VariableDeclaration",
            "src": "442:20:4"
          },
          {
            "attributes": {
              "name": "onlyAdmin",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 778,
                "name": "ParameterList",
                "src": "487:2:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_607ab4213cacb4e608436f7c15831f844f6c39a52a1d3352410951ed044d1002",
                                  "typeString": "literal_string \"MockVotingToken: caller is not the admin\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 779,
                            "name": "Identifier",
                            "src": "500:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 777,
                                  "type": "address",
                                  "value": "admin"
                                },
                                "id": 780,
                                "name": "Identifier",
                                "src": "508:5:4"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1160,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 781,
                                    "name": "Identifier",
                                    "src": "517:10:4"
                                  }
                                ],
                                "id": 782,
                                "name": "FunctionCall",
                                "src": "517:12:4"
                              }
                            ],
                            "id": 783,
                            "name": "BinaryOperation",
                            "src": "508:21:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a2063616c6c6572206973206e6f74207468652061646d696e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: caller is not the admin\"",
                              "value": "MockVotingToken: caller is not the admin"
                            },
                            "id": 784,
                            "name": "Literal",
                            "src": "531:42:4"
                          }
                        ],
                        "id": 785,
                        "name": "FunctionCall",
                        "src": "500:74:4"
                      }
                    ],
                    "id": 786,
                    "name": "ExpressionStatement",
                    "src": "500:74:4"
                  },
                  {
                    "id": 787,
                    "name": "PlaceholderStatement",
                    "src": "584:1:4"
                  }
                ],
                "id": 788,
                "name": "Block",
                "src": "490:102:4"
              }
            ],
            "id": 789,
            "name": "ModifierDefinition",
            "src": "469:123:4"
          },
          {
            "attributes": {
              "functionSelector": "704b6c02",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setAdmin",
              "scope": 850,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_admin",
                      "scope": 811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 790,
                        "name": "ElementaryTypeName",
                        "src": "616:7:4"
                      }
                    ],
                    "id": 791,
                    "name": "VariableDeclaration",
                    "src": "616:14:4"
                  }
                ],
                "id": 792,
                "name": "ParameterList",
                "src": "615:16:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 795,
                "name": "ParameterList",
                "src": "649:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5688,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 793,
                    "name": "Identifier",
                    "src": "639:9:4"
                  }
                ],
                "id": 794,
                "name": "ModifierInvocation",
                "src": "639:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9d7c759815dd605a327d32efd3847309a54aac8da0d1c34536aec43530f45402",
                                  "typeString": "literal_string \"MockVotingToken: Invalid admin address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 796,
                            "name": "Identifier",
                            "src": "659:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 791,
                                  "type": "address",
                                  "value": "_admin"
                                },
                                "id": 797,
                                "name": "Identifier",
                                "src": "667:6:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 798,
                                        "name": "ElementaryTypeName",
                                        "src": "677:7:4"
                                      }
                                    ],
                                    "id": 799,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "677:7:4"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 800,
                                    "name": "Literal",
                                    "src": "685:1:4"
                                  }
                                ],
                                "id": 801,
                                "name": "FunctionCall",
                                "src": "677:10:4"
                              }
                            ],
                            "id": 802,
                            "name": "BinaryOperation",
                            "src": "667:20:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6f636b566f74696e67546f6b656e3a20496e76616c69642061646d696e2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"MockVotingToken: Invalid admin address\"",
                              "value": "MockVotingToken: Invalid admin address"
                            },
                            "id": 803,
                            "name": "Literal",
                            "src": "689:40:4"
                          }
                        ],
                        "id": 804,
                        "name": "FunctionCall",
                        "src": "659:71:4"
                      }
                    ],
                    "id": 805,
                    "name": "ExpressionStatement",
                    "src": "659:71:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 777,
                              "type": "address",
                              "value": "admin"
                            },
                            "id": 806,
                            "name": "Identifier",
                            "src": "740:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 791,
                              "type": "address",
                              "value": "_admin"
                            },
                            "id": 807,
                            "name": "Identifier",
                            "src": "748:6:4"
                          }
                        ],
                        "id": 808,
                        "name": "Assignment",
                        "src": "740:14:4"
                      }
                    ],
                    "id": 809,
                    "name": "ExpressionStatement",
                    "src": "740:14:4"
                  }
                ],
                "id": 810,
                "name": "Block",
                "src": "649:112:4"
              }
            ],
            "id": 811,
            "name": "FunctionDefinition",
            "src": "598:163:4"
          },
          {
            "attributes": {
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "scope": 850,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "scope": 830,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 812,
                        "name": "ElementaryTypeName",
                        "src": "781:7:4"
                      }
                    ],
                    "id": 813,
                    "name": "VariableDeclaration",
                    "src": "781:15:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 830,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 814,
                        "name": "ElementaryTypeName",
                        "src": "798:7:4"
                      }
                    ],
                    "id": 815,
                    "name": "VariableDeclaration",
                    "src": "798:14:4"
                  }
                ],
                "id": 816,
                "name": "ParameterList",
                "src": "780:33:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 830,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 819,
                        "name": "ElementaryTypeName",
                        "src": "842:4:4"
                      }
                    ],
                    "id": 820,
                    "name": "VariableDeclaration",
                    "src": "842:4:4"
                  }
                ],
                "id": 821,
                "name": "ParameterList",
                "src": "841:6:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 789,
                      "type": "modifier ()",
                      "value": "onlyAdmin"
                    },
                    "id": 817,
                    "name": "Identifier",
                    "src": "823:9:4"
                  }
                ],
                "id": 818,
                "name": "ModifierInvocation",
                "src": "823:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 514,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 822,
                            "name": "Identifier",
                            "src": "858:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 813,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 823,
                            "name": "Identifier",
                            "src": "864:7:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 815,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 824,
                            "name": "Identifier",
                            "src": "873:6:4"
                          }
                        ],
                        "id": 825,
                        "name": "FunctionCall",
                        "src": "858:22:4"
                      }
                    ],
                    "id": 826,
                    "name": "ExpressionStatement",
                    "src": "858:22:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 821
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 827,
                        "name": "Literal",
                        "src": "897:4:4"
                      }
                    ],
                    "id": 828,
                    "name": "Return",
                    "src": "890:11:4"
                  }
                ],
                "id": 829,
                "name": "Block",
                "src": "848:60:4"
              }
            ],
            "id": 830,
            "name": "FunctionDefinition",
            "src": "767:141:4"
          },
          {
            "attributes": {
              "functionSelector": "9dc29fac",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "burn",
              "scope": 850,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "scope": 849,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 831,
                        "name": "ElementaryTypeName",
                        "src": "928:7:4"
                      }
                    ],
                    "id": 832,
                    "name": "VariableDeclaration",
                    "src": "928:15:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 849,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 833,
                        "name": "ElementaryTypeName",
                        "src": "945:7:4"
                      }
                    ],
                    "id": 834,
                    "name": "VariableDeclaration",
                    "src": "945:14:4"
                  }
                ],
                "id": 835,
                "name": "ParameterList",
                "src": "927:33:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 849,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 838,
                        "name": "ElementaryTypeName",
                        "src": "989:4:4"
                      }
                    ],
                    "id": 839,
                    "name": "VariableDeclaration",
                    "src": "989:4:4"
                  }
                ],
                "id": 840,
                "name": "ParameterList",
                "src": "988:6:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 789,
                      "type": "modifier ()",
                      "value": "onlyAdmin"
                    },
                    "id": 836,
                    "name": "Identifier",
                    "src": "970:9:4"
                  }
                ],
                "id": 837,
                "name": "ModifierInvocation",
                "src": "970:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 560,
                              "type": "function (address,uint256)",
                              "value": "_burn"
                            },
                            "id": 841,
                            "name": "Identifier",
                            "src": "1005:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 832,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 842,
                            "name": "Identifier",
                            "src": "1011:7:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 834,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 843,
                            "name": "Identifier",
                            "src": "1020:6:4"
                          }
                        ],
                        "id": 844,
                        "name": "FunctionCall",
                        "src": "1005:22:4"
                      }
                    ],
                    "id": 845,
                    "name": "ExpressionStatement",
                    "src": "1005:22:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 840
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 846,
                        "name": "Literal",
                        "src": "1044:4:4"
                      }
                    ],
                    "id": 847,
                    "name": "Return",
                    "src": "1037:11:4"
                  }
                ],
                "id": 848,
                "name": "Block",
                "src": "995:60:4"
              }
            ],
            "id": 849,
            "name": "FunctionDefinition",
            "src": "914:141:4"
          }
        ],
        "id": 850,
        "name": "ContractDefinition",
        "src": "271:786:4"
      }
    ],
    "id": 851,
    "name": "SourceUnit",
    "src": "38:1019:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-06-10T15:01:14.173Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Implements ERC20 minting logic",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`. Emits an `Approval` event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`. Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MockVotingToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}