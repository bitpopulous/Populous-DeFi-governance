{
  "contractName": "GovernanceStrategy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pxt_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ppt_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "votingToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PPT",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PXT",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalPropositionSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getPropositionPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getVotingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pxt_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ppt_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"votingToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PPT\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PXT\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPropositionPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPropositionSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Populous*\",\"details\":\"Smart contract containing logic to measure users' relative power to propose and vote. User Power = User Power from Populous Token + User Power from stkPopulous Token. User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated] Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation - getPropositionPowerAt: fetching a user Proposition Power at a specified block - getVotingPowerAt: fetching a user Voting Power at a specified block\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor, register tokens used for Voting and Proposition Powers.\",\"params\":{\"pxt_\":\"The address of the Populous PXT Token contract.*\"}},\"getPropositionPower(address)\":{\"details\":\"Returns the Proposition Power of a user.\",\"params\":{\"user\":\"Address of the user.\"},\"returns\":{\"_0\":\"Power number*\"}},\"getTotalPropositionSupply()\":{\"details\":\"Returns the total supply of Proposition Tokens Available for Governance\",\"returns\":{\"_0\":\"total supply at blockNumber*\"}},\"getVotingPower(address)\":{\"details\":\"Returns the Vote Power of a user.\",\"params\":{\"user\":\"Address of the user.\"},\"returns\":{\"_0\":\"Vote number*\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Governance Strategy contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol\":\"GovernanceStrategy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol\":{\"keccak256\":\"0xe0c517bf9078a763269f3e8f1ec0940788692163491aab614641d4c34c22e6d5\",\"urls\":[\"bzz-raw://2003d8c68c16a6cb1b42c3a746ced842112a19714460cfb94e51395a214d7edd\",\"dweb:/ipfs/QmQ2fAeqfpahSEiySGT8GMkB9viLvpSb8U1mA7xAgdvfEW\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Context.sol\":{\"keccak256\":\"0x1184b768b1e5b8e13eb4a589c3b14c2bf6e04e9d061012c6c772a9830272a1f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be5034806781ef4986f7edd2ff2fe8dead05c2aeee627f55a4a68cfe21d43479\",\"dweb:/ipfs/QmQ5QNcLBdQSPRQSmxmNvBf6r2pS1AbNPPoEWw3Q2WHRmN\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Ownable.sol\":{\"keccak256\":\"0xc347ba87002f53e62bcd62fdd61c620ea2b6f783a247679a12ed549a139993f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55fcc338ef316bfea381ba91564acd7ba677175076b59db95474778be7e00ae3\",\"dweb:/ipfs/QmTN9WP9wwAhpxnupRH4M5P7vPut37PGGVR9tMwSfiAEza\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/SafeMath.sol\":{\"keccak256\":\"0x82cac3eaeff0a73649987a5fa25258561857346745da180f51b332014df8166d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07bd1ad47162f33326e5374c9aec9b3c514882b360f66b627b20c622b80053c3\",\"dweb:/ipfs/QmPrFNUxLyPQppcZQ5hD7L34rD5BWe9LQvw6SD1cLDNGn3\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol\":{\"keccak256\":\"0xd854d488979a6eedd9c8bef0b678b96a11106168be3bccf1ecac60052156da31\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d3bd55a7042e4981971216e1a1f62d3087db588f889693fd8c9392cba0f57510\",\"dweb:/ipfs/QmeZHBp5e8Nk1RTHustTJwEDhVqXCbH8jvfF7UNgEbkMUT\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x388d7e22e4455851ae9d1309dabf9e01ff6849128ef607e89389b7cf8fe4df1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6e8db75cc490f3a85bd8ef8b9419284831183777d36643f100a15c1c35a92d6d\",\"dweb:/ipfs/QmTz6RiRprnq58sA7fShW8w3ttyBzCXVHjCNyGbgNxkcWx\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernancePowerDelegationToken.sol\":{\"keccak256\":\"0x8be3a09e9cd801481f0e420771edfc3f04dbb0ebafba00282b7c980fc2b0c309\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9e05d70025b5b3526c5df342652d66488840323d1854b89f365710a5b6aefc32\",\"dweb:/ipfs/QmfPun5g2YtLKDNcoNDruudF7dd5t6AQb38dgZnw6kYG71\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernanceStrategy.sol\":{\"keccak256\":\"0xd69c1a414ace8da57a6b53e6ee54fe9cf6e6926adc2e1d962d96d5460bd8d677\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a45def800fb575d280bb816438e544fe8ef9645afae6a44bf94e6a678fe05a4f\",\"dweb:/ipfs/QmVqxxoCYknVf38SHQis1TvVUeiXNsnQa6NEpvamnf3WAC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106fe3803806106fe83398101604081905261002f9161013f565b600061003961011f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b038316158015906100a357506001600160a01b03821615155b80156100b757506001600160a01b03811615155b6100dc5760405162461bcd60e51b81526004016100d390610181565b60405180910390fd5b600380546001600160a01b03199081166001600160a01b0393841617909155600280548216938316939093179092556001805490921692169190911790556101d2565b3390565b80516001600160a01b038116811461013a57600080fd5b919050565b600080600060608486031215610153578283fd5b61015c84610123565b925061016a60208501610123565b915061017860408501610123565b90509250925092565b60208082526031908201527f476f7665726e616e636553747261746567793a20496e76616c6964205058542f60408201527050505420746f6b656e206164647265737360781b606082015260800190565b61051d806101e16000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100dd578063b0340123146100e5578063bb4d4436146100ed578063f2fde38b14610100578063ff7299751461011357610093565b806338cb3dd1146100985780633bb879ae146100b6578063678b2012146100cb578063715018a6146100d3575b600080fd5b6100a0610126565b6040516100ad91906104a4565b60405180910390f35b6100be610135565b6040516100ad91906104b8565b6100a06101b7565b6100db6101c6565b005b6100a061027a565b6100a0610289565b6100be6100fb36600461045e565b610298565b6100db61010e36600461045e565b61031f565b6100be61012136600461045e565b610429565b6001546001600160a01b031681565b600154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561017a57600080fd5b505afa15801561018e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b2919061048c565b905090565b6002546001600160a01b031681565b6101ce61045a565b6000546001600160a01b03908116911614610230576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6003546001600160a01b031681565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102c99085906004016104a4565b60206040518083038186803b1580156102e157600080fd5b505afa1580156102f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610319919061048c565b92915050565b61032761045a565b6000546001600160a01b03908116911614610389576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103ce5760405162461bcd60e51b81526004018080602001828103825260268152602001806104c26026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102c99085906004016104a4565b3390565b60006020828403121561046f578081fd5b81356001600160a01b0381168114610485578182fd5b9392505050565b60006020828403121561049d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b9081526020019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122024964b6bb338f2385fee21b33213d5f4e8c163d7fc272bdb8f950b8f6d76347964736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100dd578063b0340123146100e5578063bb4d4436146100ed578063f2fde38b14610100578063ff7299751461011357610093565b806338cb3dd1146100985780633bb879ae146100b6578063678b2012146100cb578063715018a6146100d3575b600080fd5b6100a0610126565b6040516100ad91906104a4565b60405180910390f35b6100be610135565b6040516100ad91906104b8565b6100a06101b7565b6100db6101c6565b005b6100a061027a565b6100a0610289565b6100be6100fb36600461045e565b610298565b6100db61010e36600461045e565b61031f565b6100be61012136600461045e565b610429565b6001546001600160a01b031681565b600154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561017a57600080fd5b505afa15801561018e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b2919061048c565b905090565b6002546001600160a01b031681565b6101ce61045a565b6000546001600160a01b03908116911614610230576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6003546001600160a01b031681565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102c99085906004016104a4565b60206040518083038186803b1580156102e157600080fd5b505afa1580156102f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610319919061048c565b92915050565b61032761045a565b6000546001600160a01b03908116911614610389576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103ce5760405162461bcd60e51b81526004018080602001828103825260268152602001806104c26026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102c99085906004016104a4565b3390565b60006020828403121561046f578081fd5b81356001600160a01b0381168114610485578182fd5b9392505050565b60006020828403121561049d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b9081526020019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122024964b6bb338f2385fee21b33213d5f4e8c163d7fc272bdb8f950b8f6d76347964736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1012:31",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:31",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "76:117:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "86:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "101:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "95:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "95:13:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:31"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "171:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "180:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "183:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "173:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "173:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "173:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "130:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "141:5:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "156:3:31",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "161:1:31",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "152:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "152:11:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "165:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "148:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "148:19:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "137:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "137:31:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "127:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:42:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:50:31"
                  },
                  "nodeType": "YulIf",
                  "src": "117:2:31"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "55:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "66:5:31",
                "type": ""
              }
            ],
            "src": "14:179:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "313:279:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "359:26:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "368:6:31"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "376:6:31"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "361:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "361:22:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "361:22:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "334:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "343:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "330:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "330:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "355:2:31",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "326:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "326:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "323:2:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "394:52:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "436:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "404:31:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "404:42:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "394:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "455:61:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "501:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "512:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "465:31:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "465:51:31"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "525:61:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "571:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "582:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "567:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "567:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "535:31:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "535:51:31"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "263:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "274:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "286:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "294:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "302:6:31",
                "type": ""
              }
            ],
            "src": "198:394:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:239:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "788:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "799:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "781:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:21:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "781:21:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "822:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "833:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "818:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "818:18:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "838:2:31",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "811:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:30:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "811:30:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "861:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "872:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "857:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "857:18:31"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "877:34:31",
                        "type": "",
                        "value": "GovernanceStrategy: Invalid PXT/"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "850:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:62:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "850:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "932:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "943:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "928:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:18:31"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "948:19:31",
                        "type": "",
                        "value": "PPT token address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "921:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:47:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "921:47:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "977:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "989:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1000:3:31",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "985:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "985:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "977:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "748:9:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "762:4:31",
                "type": ""
              }
            ],
            "src": "597:413:31"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"GovernanceStrategy: Invalid PXT/\")\n        mstore(add(headStart, 96), \"PPT token address\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1132:31",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:31",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:31"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:31"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:31"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:31"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:31"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:31"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:31",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:31",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:31"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:31"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:31"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:31"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:31",
                "type": ""
              }
            ],
            "src": "14:306:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:113:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "452:26:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "461:6:31"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "469:6:31"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "454:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "454:22:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "454:22:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "427:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "436:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "423:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "423:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "448:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "419:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "419:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "416:2:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "487:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:31"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "487:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "372:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "383:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "395:6:31",
                "type": ""
              }
            ],
            "src": "325:194:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "625:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "635:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "647:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "658:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "643:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "643:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "635:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "677:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "692:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "708:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "713:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "704:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "704:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "717:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "700:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "700:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "670:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "670:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "670:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "594:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "605:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "616:4:31",
                "type": ""
              }
            ],
            "src": "524:203:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "846:102:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "856:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "868:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "879:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "864:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "864:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "856:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "898:9:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "913:6:31"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "929:3:31",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "934:1:31",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "925:3:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "925:11:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "938:1:31",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "921:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "921:19:31"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "909:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "909:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "891:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:51:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "891:51:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$635__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "815:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "826:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "837:4:31",
                "type": ""
              }
            ],
            "src": "732:216:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1054:76:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1064:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1076:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1087:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1072:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1064:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1106:9:31"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1117:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1099:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1099:25:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1099:25:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1023:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1034:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1045:4:31",
                "type": ""
              }
            ],
            "src": "953:177:31"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$635__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1086:1580:17:-:0;;;1552:328;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;833:17:11;853:12;:10;:12::i;:::-;871:6;:18;;-1:-1:-1;;;;;;871:18:11;-1:-1:-1;;;;;871:18:11;;;;;;;900:43;;871:18;;-1:-1:-1;871:18:11;900:43;;871:6;;900:43;-1:-1:-1;;;;;;1636:18:17;;;;;;1635:50;;-1:-1:-1;;;;;;1666:18:17;;;;1635:50;:88;;;;-1:-1:-1;;;;;;1696:26:17;;;;1635:88;1620:169;;;;-1:-1:-1;;;1620:169:17;;;;;;;:::i;:::-;;;;;;;;;1796:11;:33;;-1:-1:-1;;;;;;1796:33:17;;;-1:-1:-1;;;;;1796:33:17;;;;;;;1835:3;:17;;;;;;;;;;;;;;-1:-1:-1;1858:17:17;;;;;;;;;;;;;1086:1580;;586:98:8;669:10;586:98;:::o;14:179:31:-;95:13;;-1:-1:-1;;;;;137:31:31;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:394::-;;;;355:2;343:9;334:7;330:23;326:32;323:2;;;376:6;368;361:22;323:2;404:42;436:9;404:42;:::i;:::-;394:52;;465:51;512:2;501:9;497:18;465:51;:::i;:::-;455:61;;535:51;582:2;571:9;567:18;535:51;:::i;:::-;525:61;;313:279;;;;;:::o;597:413::-;799:2;781:21;;;838:2;818:18;;;811:30;877:34;872:2;857:18;;850:62;-1:-1:-1;;;943:2:31;928:18;;921:47;1000:3;985:19;;771:239::o;:::-;1086:1580:17;;;;;;",
  "deployedSourceMap": "1086:1580:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2020:111;;;:::i;:::-;;;;;;;:::i;1326:16::-;;;:::i;1599:135:11:-;;;:::i;:::-;;1016:71;;;:::i;1365:24:17:-;;;:::i;2524:140::-;;;;;;:::i;:::-;;:::i;1873:226:11:-;;;;;;:::i;:::-;;:::i;2263:137:17:-;;;;;;:::i;:::-;;:::i;1258:16::-;;;-1:-1:-1;;;;;1258:16:17;;:::o;2020:111::-;2109:3;;:17;;;-1:-1:-1;;;2109:17:17;;;;2087:7;;-1:-1:-1;;;;;2109:3:17;;:15;;:17;;;;;;;;;;;;;;:3;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2102:24;;2020:111;:::o;1326:16::-;;;-1:-1:-1;;;;;1326:16:17;;:::o;1599:135:11:-;1212:12;:10;:12::i;:::-;1202:6;;-1:-1:-1;;;;;1202:6:11;;;:22;;;1194:67;;;;;-1:-1:-1;;;1194:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701:1:::1;1685:6:::0;;1664:40:::1;::::0;-1:-1:-1;;;;;1685:6:11;;::::1;::::0;1664:40:::1;::::0;1701:1;;1664:40:::1;1727:1;1710:19:::0;;-1:-1:-1;;;;;;1710:19:11::1;::::0;;1599:135::o;1016:71::-;1054:7;1076:6;-1:-1:-1;;;;;1076:6:11;1016:71;:::o;1365:24:17:-;;;-1:-1:-1;;;;;1365:24:17;;:::o;2524:140::-;2632:11;;:27;;-1:-1:-1;;;2632:27:17;;2608:7;;-1:-1:-1;;;;;2632:11:17;;:21;;:27;;2654:4;;2632:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2625:34;2524:140;-1:-1:-1;;2524:140:17:o;1873:226:11:-;1212:12;:10;:12::i;:::-;1202:6;;-1:-1:-1;;;;;1202:6:11;;;:22;;;1194:67;;;;;-1:-1:-1;;;1194:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1957:22:11;::::1;1949:73;;;;-1:-1:-1::0;;;1949:73:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:6;::::0;;2033:38:::1;::::0;-1:-1:-1;;;;;2033:38:11;;::::1;::::0;2054:6;::::1;::::0;2033:38:::1;::::0;::::1;2077:6;:17:::0;;-1:-1:-1;;;;;;2077:17:11::1;-1:-1:-1::0;;;;;2077:17:11;;;::::1;::::0;;;::::1;::::0;;1873:226::o;2263:137:17:-;2376:3;;:19;;-1:-1:-1;;;2376:19:17;;2352:7;;-1:-1:-1;;;;;2376:3:17;;:13;;:19;;2390:4;;2376:19;;;:::i;586:98:8:-;669:10;586:98;:::o;14:306:31:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:31;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:31:o;325:194::-;;448:2;436:9;427:7;423:23;419:32;416:2;;;469:6;461;454:22;416:2;-1:-1:-1;497:16:31;;406:113;-1:-1:-1;406:113:31:o;524:203::-;-1:-1:-1;;;;;688:32:31;;;;670:51;;658:2;643:18;;625:102::o;953:177::-;1099:25;;;1087:2;1072:18;;1054:76::o",
  "source": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma abicoder v2;\n\nimport {IGovernanceStrategy} from '../interfaces/IGovernanceStrategy.sol';\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {IGovernancePowerDelegationToken} from '../interfaces/IGovernancePowerDelegationToken.sol';\nimport {Ownable} from '../dependencies/open-zeppelin/Ownable.sol';\nimport {SafeMath} from '../dependencies/open-zeppelin/SafeMath.sol';\nimport {ERC20} from '../ERC20.sol';\n\n/**\n * @title Governance Strategy contract\n * @dev Smart contract containing logic to measure users' relative power to propose and vote.\n * User Power = User Power from Populous Token + User Power from stkPopulous Token.\n * User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated]\n * Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation\n * - getPropositionPowerAt: fetching a user Proposition Power at a specified block\n * - getVotingPowerAt: fetching a user Voting Power at a specified block\n * @author Populous\n **/\ncontract GovernanceStrategy is Ownable, IGovernanceStrategy {\n  using SafeMath for uint256;\n\n  // proposal creation token\n  // can be locked in exchange for voting token\n  ERC20 public PXT;\n  // can be locked in exchange for voting token\n  ERC20 public PPT; \n  // voting token\n  ERC20 public votingToken; \n\n  /**\n   * @dev Constructor, register tokens used for Voting and Proposition Powers.\n   * @param pxt_ The address of the Populous PXT Token contract.\n   **/\n  constructor(address pxt_, address ppt_, address votingToken_) {\n    require(\n      (pxt_ != address(0)) &&\n      (ppt_ != address(0)) &&\n      (votingToken_ != address(0)), \n      \"GovernanceStrategy: Invalid PXT/PPT token address\"\n    );\n\n    votingToken = ERC20(votingToken_);\n    PPT = ERC20(ppt_);\n    PXT = ERC20(pxt_);\n  }\n\n  /**\n   * @dev Returns the total supply of Proposition Tokens Available for Governance\n   * @return total supply at blockNumber\n   **/\n  function getTotalPropositionSupply() public view override returns (uint256) {\n    return PXT.totalSupply();\n  }\n\n  /**\n   * @dev Returns the Proposition Power of a user.\n   * @param user Address of the user.\n   * @return Power number\n   **/\n  function getPropositionPower(address user)\n    public\n    view\n    override\n    returns (uint256)\n  {\n    return PXT.balanceOf(user);\n  }\n\n  /**\n   * @dev Returns the Vote Power of a user.\n   * @param user Address of the user.\n   * @return Vote number\n   **/\n  function getVotingPower(address user)\n    public\n    view\n    override\n    returns (uint256)\n  {\n    return votingToken.balanceOf(user);\n  }\n}\n",
  "sourcePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol",
  "ast": {
    "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol",
    "exportedSymbols": {
      "ERC20": [
        635
      ],
      "GovernanceStrategy": [
        2452
      ],
      "IERC20": [
        4604
      ],
      "IGovernancePowerDelegationToken": [
        4827
      ],
      "IGovernanceStrategy": [
        4853
      ],
      "Ownable": [
        1415
      ],
      "SafeMath": [
        1655
      ]
    },
    "id": 2453,
    "license": "agpl-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2326,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:17"
      },
      {
        "id": 2327,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:19:17"
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernanceStrategy.sol",
        "file": "../interfaces/IGovernanceStrategy.sol",
        "id": 2329,
        "nodeType": "ImportDirective",
        "scope": 2453,
        "sourceUnit": 4854,
        "src": "81:74:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2328,
              "name": "IGovernanceStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "89:19:17",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 2331,
        "nodeType": "ImportDirective",
        "scope": 2453,
        "sourceUnit": 4605,
        "src": "156:48:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2330,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "164:6:17",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernancePowerDelegationToken.sol",
        "file": "../interfaces/IGovernancePowerDelegationToken.sol",
        "id": 2333,
        "nodeType": "ImportDirective",
        "scope": 2453,
        "sourceUnit": 4828,
        "src": "205:98:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2332,
              "name": "IGovernancePowerDelegationToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "213:31:17",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Ownable.sol",
        "file": "../dependencies/open-zeppelin/Ownable.sol",
        "id": 2335,
        "nodeType": "ImportDirective",
        "scope": 2453,
        "sourceUnit": 1416,
        "src": "304:66:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2334,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "312:7:17",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/SafeMath.sol",
        "file": "../dependencies/open-zeppelin/SafeMath.sol",
        "id": 2337,
        "nodeType": "ImportDirective",
        "scope": 2453,
        "sourceUnit": 1656,
        "src": "371:68:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2336,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "379:8:17",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
        "file": "../ERC20.sol",
        "id": 2339,
        "nodeType": "ImportDirective",
        "scope": 2453,
        "sourceUnit": 636,
        "src": "440:35:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2338,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "448:5:17",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2341,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1415,
              "src": "1117:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1415",
                "typeString": "contract Ownable"
              }
            },
            "id": 2342,
            "nodeType": "InheritanceSpecifier",
            "src": "1117:7:17"
          },
          {
            "baseName": {
              "id": 2343,
              "name": "IGovernanceStrategy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4853,
              "src": "1126:19:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGovernanceStrategy_$4853",
                "typeString": "contract IGovernanceStrategy"
              }
            },
            "id": 2344,
            "nodeType": "InheritanceSpecifier",
            "src": "1126:19:17"
          }
        ],
        "contractDependencies": [
          1172,
          1415,
          4853
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2340,
          "nodeType": "StructuredDocumentation",
          "src": "477:608:17",
          "text": " @title Governance Strategy contract\n @dev Smart contract containing logic to measure users' relative power to propose and vote.\n User Power = User Power from Populous Token + User Power from stkPopulous Token.\n User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated]\n Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation\n - getPropositionPowerAt: fetching a user Proposition Power at a specified block\n - getVotingPowerAt: fetching a user Voting Power at a specified block\n @author Populous*"
        },
        "fullyImplemented": true,
        "id": 2452,
        "linearizedBaseContracts": [
          2452,
          4853,
          1415,
          1172
        ],
        "name": "GovernanceStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2347,
            "libraryName": {
              "id": 2345,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1655,
              "src": "1156:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1655",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1150:27:17",
            "typeName": {
              "id": 2346,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1169:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "38cb3dd1",
            "id": 2349,
            "mutability": "mutable",
            "name": "PXT",
            "nodeType": "VariableDeclaration",
            "scope": 2452,
            "src": "1258:16:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$635",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2348,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "1258:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "678b2012",
            "id": 2351,
            "mutability": "mutable",
            "name": "PPT",
            "nodeType": "VariableDeclaration",
            "scope": 2452,
            "src": "1326:16:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$635",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2350,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "1326:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0340123",
            "id": 2353,
            "mutability": "mutable",
            "name": "votingToken",
            "nodeType": "VariableDeclaration",
            "scope": 2452,
            "src": "1365:24:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$635",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2352,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "1365:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2408,
              "nodeType": "Block",
              "src": "1614:266:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2364,
                                  "name": "pxt_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2356,
                                  "src": "1636:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2367,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1652:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1644:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2365,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1644:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1644:10:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "1636:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2370,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1635:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2371,
                                  "name": "ppt_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2358,
                                  "src": "1666:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2374,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1682:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2373,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1674:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2372,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1674:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1674:10:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "1666:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2377,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1665:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1635:50:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2379,
                                "name": "votingToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2360,
                                "src": "1696:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1720:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1712:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2380,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1712:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1712:10:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1696:26:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2385,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1695:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1635:88:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476f7665726e616e636553747261746567793a20496e76616c6964205058542f50505420746f6b656e2061646472657373",
                        "id": 2387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1732:51:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c",
                          "typeString": "literal_string \"GovernanceStrategy: Invalid PXT/PPT token address\""
                        },
                        "value": "GovernanceStrategy: Invalid PXT/PPT token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c",
                          "typeString": "literal_string \"GovernanceStrategy: Invalid PXT/PPT token address\""
                        }
                      ],
                      "id": 2363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1620:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:169:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2389,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:169:17"
                },
                {
                  "expression": {
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2390,
                      "name": "votingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2353,
                      "src": "1796:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2392,
                          "name": "votingToken_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2360,
                          "src": "1816:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2391,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "1810:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$635_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1810:19:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1796:33:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$635",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2395,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:33:17"
                },
                {
                  "expression": {
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2396,
                      "name": "PPT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2351,
                      "src": "1835:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2398,
                          "name": "ppt_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2358,
                          "src": "1847:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2397,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "1841:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$635_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1841:11:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1835:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$635",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2401,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:17:17"
                },
                {
                  "expression": {
                    "id": 2406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2402,
                      "name": "PXT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2349,
                      "src": "1858:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2404,
                          "name": "pxt_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2356,
                          "src": "1870:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2403,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "1864:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$635_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1864:11:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1858:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$635",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2407,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:17:17"
                }
              ]
            },
            "documentation": {
              "id": 2354,
              "nodeType": "StructuredDocumentation",
              "src": "1395:154:17",
              "text": " @dev Constructor, register tokens used for Voting and Proposition Powers.\n @param pxt_ The address of the Populous PXT Token contract.*"
            },
            "id": 2409,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2356,
                  "mutability": "mutable",
                  "name": "pxt_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2409,
                  "src": "1564:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2358,
                  "mutability": "mutable",
                  "name": "ppt_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2409,
                  "src": "1578:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2360,
                  "mutability": "mutable",
                  "name": "votingToken_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2409,
                  "src": "1592:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:50:17"
            },
            "returnParameters": {
              "id": 2362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1614:0:17"
            },
            "scope": 2452,
            "src": "1552:328:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4844
            ],
            "body": {
              "id": 2420,
              "nodeType": "Block",
              "src": "2096:35:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2416,
                        "name": "PXT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2349,
                        "src": "2109:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 242,
                      "src": "2109:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:17:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2415,
                  "id": 2419,
                  "nodeType": "Return",
                  "src": "2102:24:17"
                }
              ]
            },
            "documentation": {
              "id": 2410,
              "nodeType": "StructuredDocumentation",
              "src": "1884:133:17",
              "text": " @dev Returns the total supply of Proposition Tokens Available for Governance\n @return total supply at blockNumber*"
            },
            "functionSelector": "3bb879ae",
            "id": 2421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalPropositionSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2412,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2069:8:17"
            },
            "parameters": {
              "id": 2411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2054:2:17"
            },
            "returnParameters": {
              "id": 2415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2414,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "2087:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2086:9:17"
            },
            "scope": 2452,
            "src": "2020:111:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4838
            ],
            "body": {
              "id": 2435,
              "nodeType": "Block",
              "src": "2363:37:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2432,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2424,
                        "src": "2390:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2430,
                        "name": "PXT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2349,
                        "src": "2376:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 256,
                      "src": "2376:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:19:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2429,
                  "id": 2434,
                  "nodeType": "Return",
                  "src": "2369:26:17"
                }
              ]
            },
            "documentation": {
              "id": 2422,
              "nodeType": "StructuredDocumentation",
              "src": "2135:125:17",
              "text": " @dev Returns the Proposition Power of a user.\n @param user Address of the user.\n @return Power number*"
            },
            "functionSelector": "ff729975",
            "id": 2436,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPropositionPower",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2426,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2330:8:17"
            },
            "parameters": {
              "id": 2425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2424,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2436,
                  "src": "2292:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2291:14:17"
            },
            "returnParameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2428,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2436,
                  "src": "2352:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2351:9:17"
            },
            "scope": 2452,
            "src": "2263:137:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4852
            ],
            "body": {
              "id": 2450,
              "nodeType": "Block",
              "src": "2619:45:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2447,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2439,
                        "src": "2654:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2445,
                        "name": "votingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2353,
                        "src": "2632:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 256,
                      "src": "2632:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:27:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2444,
                  "id": 2449,
                  "nodeType": "Return",
                  "src": "2625:34:17"
                }
              ]
            },
            "documentation": {
              "id": 2437,
              "nodeType": "StructuredDocumentation",
              "src": "2404:117:17",
              "text": " @dev Returns the Vote Power of a user.\n @param user Address of the user.\n @return Vote number*"
            },
            "functionSelector": "bb4d4436",
            "id": 2451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotingPower",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2441,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2586:8:17"
            },
            "parameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2439,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2451,
                  "src": "2548:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:14:17"
            },
            "returnParameters": {
              "id": 2444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2443,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2451,
                  "src": "2608:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2608:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2607:9:17"
            },
            "scope": 2452,
            "src": "2524:140:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2453,
        "src": "1086:1580:17"
      }
    ],
    "src": "37:2630:17"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol",
      "exportedSymbols": {
        "ERC20": [
          635
        ],
        "GovernanceStrategy": [
          2452
        ],
        "IERC20": [
          4604
        ],
        "IGovernancePowerDelegationToken": [
          4827
        ],
        "IGovernanceStrategy": [
          4853
        ],
        "Ownable": [
          1415
        ],
        "SafeMath": [
          1655
        ]
      },
      "license": "agpl-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".5"
          ]
        },
        "id": 2326,
        "name": "PragmaDirective",
        "src": "37:22:17"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 2327,
        "name": "PragmaDirective",
        "src": "60:19:17"
      },
      {
        "attributes": {
          "SourceUnit": 4854,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernanceStrategy.sol",
          "file": "../interfaces/IGovernanceStrategy.sol",
          "scope": 2453,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "IGovernanceStrategy"
                },
                "id": 2328,
                "name": "Identifier",
                "src": "89:19:17"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2329,
        "name": "ImportDirective",
        "src": "81:74:17"
      },
      {
        "attributes": {
          "SourceUnit": 4605,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IERC20.sol",
          "file": "../interfaces/IERC20.sol",
          "scope": 2453,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "IERC20"
                },
                "id": 2330,
                "name": "Identifier",
                "src": "164:6:17"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2331,
        "name": "ImportDirective",
        "src": "156:48:17"
      },
      {
        "attributes": {
          "SourceUnit": 4828,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernancePowerDelegationToken.sol",
          "file": "../interfaces/IGovernancePowerDelegationToken.sol",
          "scope": 2453,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "IGovernancePowerDelegationToken"
                },
                "id": 2332,
                "name": "Identifier",
                "src": "213:31:17"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2333,
        "name": "ImportDirective",
        "src": "205:98:17"
      },
      {
        "attributes": {
          "SourceUnit": 1416,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Ownable.sol",
          "file": "../dependencies/open-zeppelin/Ownable.sol",
          "scope": 2453,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "Ownable"
                },
                "id": 2334,
                "name": "Identifier",
                "src": "312:7:17"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2335,
        "name": "ImportDirective",
        "src": "304:66:17"
      },
      {
        "attributes": {
          "SourceUnit": 1656,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/SafeMath.sol",
          "file": "../dependencies/open-zeppelin/SafeMath.sol",
          "scope": 2453,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "SafeMath"
                },
                "id": 2336,
                "name": "Identifier",
                "src": "379:8:17"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2337,
        "name": "ImportDirective",
        "src": "371:68:17"
      },
      {
        "attributes": {
          "SourceUnit": 636,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
          "file": "../ERC20.sol",
          "scope": 2453,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "ERC20"
                },
                "id": 2338,
                "name": "Identifier",
                "src": "448:5:17"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2339,
        "name": "ImportDirective",
        "src": "440:35:17"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1172,
            1415,
            4853
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2452,
            4853,
            1415,
            1172
          ],
          "name": "GovernanceStrategy",
          "scope": 2453
        },
        "children": [
          {
            "attributes": {
              "text": " @title Governance Strategy contract\n @dev Smart contract containing logic to measure users' relative power to propose and vote.\n User Power = User Power from Populous Token + User Power from stkPopulous Token.\n User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated]\n Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation\n - getPropositionPowerAt: fetching a user Proposition Power at a specified block\n - getVotingPowerAt: fetching a user Voting Power at a specified block\n @author Populous*"
            },
            "id": 2340,
            "name": "StructuredDocumentation",
            "src": "477:608:17"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 1415,
                  "type": "contract Ownable"
                },
                "id": 2341,
                "name": "UserDefinedTypeName",
                "src": "1117:7:17"
              }
            ],
            "id": 2342,
            "name": "InheritanceSpecifier",
            "src": "1117:7:17"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IGovernanceStrategy",
                  "referencedDeclaration": 4853,
                  "type": "contract IGovernanceStrategy"
                },
                "id": 2343,
                "name": "UserDefinedTypeName",
                "src": "1126:19:17"
              }
            ],
            "id": 2344,
            "name": "InheritanceSpecifier",
            "src": "1126:19:17"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 1655,
                  "type": "library SafeMath"
                },
                "id": 2345,
                "name": "UserDefinedTypeName",
                "src": "1156:8:17"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 2346,
                "name": "ElementaryTypeName",
                "src": "1169:7:17"
              }
            ],
            "id": 2347,
            "name": "UsingForDirective",
            "src": "1150:27:17"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "38cb3dd1",
              "mutability": "mutable",
              "name": "PXT",
              "scope": 2452,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 2348,
                "name": "UserDefinedTypeName",
                "src": "1258:5:17"
              }
            ],
            "id": 2349,
            "name": "VariableDeclaration",
            "src": "1258:16:17"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "678b2012",
              "mutability": "mutable",
              "name": "PPT",
              "scope": 2452,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 2350,
                "name": "UserDefinedTypeName",
                "src": "1326:5:17"
              }
            ],
            "id": 2351,
            "name": "VariableDeclaration",
            "src": "1326:16:17"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "b0340123",
              "mutability": "mutable",
              "name": "votingToken",
              "scope": 2452,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 2352,
                "name": "UserDefinedTypeName",
                "src": "1365:5:17"
              }
            ],
            "id": 2353,
            "name": "VariableDeclaration",
            "src": "1365:24:17"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 2452,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Constructor, register tokens used for Voting and Proposition Powers.\n @param pxt_ The address of the Populous PXT Token contract.*"
                },
                "id": 2354,
                "name": "StructuredDocumentation",
                "src": "1395:154:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "pxt_",
                      "scope": 2409,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2355,
                        "name": "ElementaryTypeName",
                        "src": "1564:7:17"
                      }
                    ],
                    "id": 2356,
                    "name": "VariableDeclaration",
                    "src": "1564:12:17"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ppt_",
                      "scope": 2409,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2357,
                        "name": "ElementaryTypeName",
                        "src": "1578:7:17"
                      }
                    ],
                    "id": 2358,
                    "name": "VariableDeclaration",
                    "src": "1578:12:17"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "votingToken_",
                      "scope": 2409,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2359,
                        "name": "ElementaryTypeName",
                        "src": "1592:7:17"
                      }
                    ],
                    "id": 2360,
                    "name": "VariableDeclaration",
                    "src": "1592:20:17"
                  }
                ],
                "id": 2361,
                "name": "ParameterList",
                "src": "1563:50:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2362,
                "name": "ParameterList",
                "src": "1614:0:17"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c",
                                  "typeString": "literal_string \"GovernanceStrategy: Invalid PXT/PPT token address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2363,
                            "name": "Identifier",
                            "src": "1620:7:17"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2356,
                                              "type": "address",
                                              "value": "pxt_"
                                            },
                                            "id": 2364,
                                            "name": "Identifier",
                                            "src": "1636:4:17"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "address payable",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "type": "type(address)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "name": "address"
                                                    },
                                                    "id": 2365,
                                                    "name": "ElementaryTypeName",
                                                    "src": "1644:7:17"
                                                  }
                                                ],
                                                "id": 2366,
                                                "name": "ElementaryTypeNameExpression",
                                                "src": "1644:7:17"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "30",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 0",
                                                  "value": "0"
                                                },
                                                "id": 2367,
                                                "name": "Literal",
                                                "src": "1652:1:17"
                                              }
                                            ],
                                            "id": 2368,
                                            "name": "FunctionCall",
                                            "src": "1644:10:17"
                                          }
                                        ],
                                        "id": 2369,
                                        "name": "BinaryOperation",
                                        "src": "1636:18:17"
                                      }
                                    ],
                                    "id": 2370,
                                    "name": "TupleExpression",
                                    "src": "1635:20:17"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2358,
                                              "type": "address",
                                              "value": "ppt_"
                                            },
                                            "id": 2371,
                                            "name": "Identifier",
                                            "src": "1666:4:17"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "address payable",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "type": "type(address)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "name": "address"
                                                    },
                                                    "id": 2372,
                                                    "name": "ElementaryTypeName",
                                                    "src": "1674:7:17"
                                                  }
                                                ],
                                                "id": 2373,
                                                "name": "ElementaryTypeNameExpression",
                                                "src": "1674:7:17"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "30",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 0",
                                                  "value": "0"
                                                },
                                                "id": 2374,
                                                "name": "Literal",
                                                "src": "1682:1:17"
                                              }
                                            ],
                                            "id": 2375,
                                            "name": "FunctionCall",
                                            "src": "1674:10:17"
                                          }
                                        ],
                                        "id": 2376,
                                        "name": "BinaryOperation",
                                        "src": "1666:18:17"
                                      }
                                    ],
                                    "id": 2377,
                                    "name": "TupleExpression",
                                    "src": "1665:20:17"
                                  }
                                ],
                                "id": 2378,
                                "name": "BinaryOperation",
                                "src": "1635:50:17"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "!=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2360,
                                          "type": "address",
                                          "value": "votingToken_"
                                        },
                                        "id": 2379,
                                        "name": "Identifier",
                                        "src": "1696:12:17"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "address payable",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(address)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "address"
                                                },
                                                "id": 2380,
                                                "name": "ElementaryTypeName",
                                                "src": "1712:7:17"
                                              }
                                            ],
                                            "id": 2381,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "1712:7:17"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 2382,
                                            "name": "Literal",
                                            "src": "1720:1:17"
                                          }
                                        ],
                                        "id": 2383,
                                        "name": "FunctionCall",
                                        "src": "1712:10:17"
                                      }
                                    ],
                                    "id": 2384,
                                    "name": "BinaryOperation",
                                    "src": "1696:26:17"
                                  }
                                ],
                                "id": 2385,
                                "name": "TupleExpression",
                                "src": "1695:28:17"
                              }
                            ],
                            "id": 2386,
                            "name": "BinaryOperation",
                            "src": "1635:88:17"
                          },
                          {
                            "attributes": {
                              "hexvalue": "476f7665726e616e636553747261746567793a20496e76616c6964205058542f50505420746f6b656e2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"GovernanceStrategy: Invalid PXT/PPT token address\"",
                              "value": "GovernanceStrategy: Invalid PXT/PPT token address"
                            },
                            "id": 2387,
                            "name": "Literal",
                            "src": "1732:51:17"
                          }
                        ],
                        "id": 2388,
                        "name": "FunctionCall",
                        "src": "1620:169:17"
                      }
                    ],
                    "id": 2389,
                    "name": "ExpressionStatement",
                    "src": "1620:169:17"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2353,
                              "type": "contract ERC20",
                              "value": "votingToken"
                            },
                            "id": 2390,
                            "name": "Identifier",
                            "src": "1796:11:17"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract ERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 635,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 2391,
                                "name": "Identifier",
                                "src": "1810:5:17"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2360,
                                  "type": "address",
                                  "value": "votingToken_"
                                },
                                "id": 2392,
                                "name": "Identifier",
                                "src": "1816:12:17"
                              }
                            ],
                            "id": 2393,
                            "name": "FunctionCall",
                            "src": "1810:19:17"
                          }
                        ],
                        "id": 2394,
                        "name": "Assignment",
                        "src": "1796:33:17"
                      }
                    ],
                    "id": 2395,
                    "name": "ExpressionStatement",
                    "src": "1796:33:17"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2351,
                              "type": "contract ERC20",
                              "value": "PPT"
                            },
                            "id": 2396,
                            "name": "Identifier",
                            "src": "1835:3:17"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract ERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 635,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 2397,
                                "name": "Identifier",
                                "src": "1841:5:17"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2358,
                                  "type": "address",
                                  "value": "ppt_"
                                },
                                "id": 2398,
                                "name": "Identifier",
                                "src": "1847:4:17"
                              }
                            ],
                            "id": 2399,
                            "name": "FunctionCall",
                            "src": "1841:11:17"
                          }
                        ],
                        "id": 2400,
                        "name": "Assignment",
                        "src": "1835:17:17"
                      }
                    ],
                    "id": 2401,
                    "name": "ExpressionStatement",
                    "src": "1835:17:17"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2349,
                              "type": "contract ERC20",
                              "value": "PXT"
                            },
                            "id": 2402,
                            "name": "Identifier",
                            "src": "1858:3:17"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract ERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 635,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 2403,
                                "name": "Identifier",
                                "src": "1864:5:17"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2356,
                                  "type": "address",
                                  "value": "pxt_"
                                },
                                "id": 2404,
                                "name": "Identifier",
                                "src": "1870:4:17"
                              }
                            ],
                            "id": 2405,
                            "name": "FunctionCall",
                            "src": "1864:11:17"
                          }
                        ],
                        "id": 2406,
                        "name": "Assignment",
                        "src": "1858:17:17"
                      }
                    ],
                    "id": 2407,
                    "name": "ExpressionStatement",
                    "src": "1858:17:17"
                  }
                ],
                "id": 2408,
                "name": "Block",
                "src": "1614:266:17"
              }
            ],
            "id": 2409,
            "name": "FunctionDefinition",
            "src": "1552:328:17"
          },
          {
            "attributes": {
              "baseFunctions": [
                4844
              ],
              "functionSelector": "3bb879ae",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTotalPropositionSupply",
              "scope": 2452,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the total supply of Proposition Tokens Available for Governance\n @return total supply at blockNumber*"
                },
                "id": 2410,
                "name": "StructuredDocumentation",
                "src": "1884:133:17"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2412,
                "name": "OverrideSpecifier",
                "src": "2069:8:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2411,
                "name": "ParameterList",
                "src": "2054:2:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2421,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2413,
                        "name": "ElementaryTypeName",
                        "src": "2087:7:17"
                      }
                    ],
                    "id": 2414,
                    "name": "VariableDeclaration",
                    "src": "2087:7:17"
                  }
                ],
                "id": 2415,
                "name": "ParameterList",
                "src": "2086:9:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2415
                    },
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "totalSupply",
                              "referencedDeclaration": 242,
                              "type": "function () view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2349,
                                  "type": "contract ERC20",
                                  "value": "PXT"
                                },
                                "id": 2416,
                                "name": "Identifier",
                                "src": "2109:3:17"
                              }
                            ],
                            "id": 2417,
                            "name": "MemberAccess",
                            "src": "2109:15:17"
                          }
                        ],
                        "id": 2418,
                        "name": "FunctionCall",
                        "src": "2109:17:17"
                      }
                    ],
                    "id": 2419,
                    "name": "Return",
                    "src": "2102:24:17"
                  }
                ],
                "id": 2420,
                "name": "Block",
                "src": "2096:35:17"
              }
            ],
            "id": 2421,
            "name": "FunctionDefinition",
            "src": "2020:111:17"
          },
          {
            "attributes": {
              "baseFunctions": [
                4838
              ],
              "functionSelector": "ff729975",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPropositionPower",
              "scope": 2452,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the Proposition Power of a user.\n @param user Address of the user.\n @return Power number*"
                },
                "id": 2422,
                "name": "StructuredDocumentation",
                "src": "2135:125:17"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2426,
                "name": "OverrideSpecifier",
                "src": "2330:8:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 2436,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2423,
                        "name": "ElementaryTypeName",
                        "src": "2292:7:17"
                      }
                    ],
                    "id": 2424,
                    "name": "VariableDeclaration",
                    "src": "2292:12:17"
                  }
                ],
                "id": 2425,
                "name": "ParameterList",
                "src": "2291:14:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2436,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2427,
                        "name": "ElementaryTypeName",
                        "src": "2352:7:17"
                      }
                    ],
                    "id": 2428,
                    "name": "VariableDeclaration",
                    "src": "2352:7:17"
                  }
                ],
                "id": 2429,
                "name": "ParameterList",
                "src": "2351:9:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2429
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 256,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2349,
                                  "type": "contract ERC20",
                                  "value": "PXT"
                                },
                                "id": 2430,
                                "name": "Identifier",
                                "src": "2376:3:17"
                              }
                            ],
                            "id": 2431,
                            "name": "MemberAccess",
                            "src": "2376:13:17"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2424,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 2432,
                            "name": "Identifier",
                            "src": "2390:4:17"
                          }
                        ],
                        "id": 2433,
                        "name": "FunctionCall",
                        "src": "2376:19:17"
                      }
                    ],
                    "id": 2434,
                    "name": "Return",
                    "src": "2369:26:17"
                  }
                ],
                "id": 2435,
                "name": "Block",
                "src": "2363:37:17"
              }
            ],
            "id": 2436,
            "name": "FunctionDefinition",
            "src": "2263:137:17"
          },
          {
            "attributes": {
              "baseFunctions": [
                4852
              ],
              "functionSelector": "bb4d4436",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVotingPower",
              "scope": 2452,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the Vote Power of a user.\n @param user Address of the user.\n @return Vote number*"
                },
                "id": 2437,
                "name": "StructuredDocumentation",
                "src": "2404:117:17"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2441,
                "name": "OverrideSpecifier",
                "src": "2586:8:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 2451,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2438,
                        "name": "ElementaryTypeName",
                        "src": "2548:7:17"
                      }
                    ],
                    "id": 2439,
                    "name": "VariableDeclaration",
                    "src": "2548:12:17"
                  }
                ],
                "id": 2440,
                "name": "ParameterList",
                "src": "2547:14:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2451,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2442,
                        "name": "ElementaryTypeName",
                        "src": "2608:7:17"
                      }
                    ],
                    "id": 2443,
                    "name": "VariableDeclaration",
                    "src": "2608:7:17"
                  }
                ],
                "id": 2444,
                "name": "ParameterList",
                "src": "2607:9:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2444
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 256,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2353,
                                  "type": "contract ERC20",
                                  "value": "votingToken"
                                },
                                "id": 2445,
                                "name": "Identifier",
                                "src": "2632:11:17"
                              }
                            ],
                            "id": 2446,
                            "name": "MemberAccess",
                            "src": "2632:21:17"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2439,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 2447,
                            "name": "Identifier",
                            "src": "2654:4:17"
                          }
                        ],
                        "id": 2448,
                        "name": "FunctionCall",
                        "src": "2632:27:17"
                      }
                    ],
                    "id": 2449,
                    "name": "Return",
                    "src": "2625:34:17"
                  }
                ],
                "id": 2450,
                "name": "Block",
                "src": "2619:45:17"
              }
            ],
            "id": 2451,
            "name": "FunctionDefinition",
            "src": "2524:140:17"
          }
        ],
        "id": 2452,
        "name": "ContractDefinition",
        "src": "1086:1580:17"
      }
    ],
    "id": 2453,
    "name": "SourceUnit",
    "src": "37:2630:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE57B06e9a25d966f6a5c5862695fa1Bc9830150b",
      "transactionHash": "0xd52d9e1010885b603cc8e9e735249d88d6d71b30991775625c93d32e5afff6c9"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-05-07T10:26:52.941Z",
  "devdoc": {
    "author": "Populous*",
    "details": "Smart contract containing logic to measure users' relative power to propose and vote. User Power = User Power from Populous Token + User Power from stkPopulous Token. User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated] Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation - getPropositionPowerAt: fetching a user Proposition Power at a specified block - getVotingPowerAt: fetching a user Voting Power at a specified block",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor, register tokens used for Voting and Proposition Powers.",
        "params": {
          "pxt_": "The address of the Populous PXT Token contract.*"
        }
      },
      "getPropositionPower(address)": {
        "details": "Returns the Proposition Power of a user.",
        "params": {
          "user": "Address of the user."
        },
        "returns": {
          "_0": "Power number*"
        }
      },
      "getTotalPropositionSupply()": {
        "details": "Returns the total supply of Proposition Tokens Available for Governance",
        "returns": {
          "_0": "total supply at blockNumber*"
        }
      },
      "getVotingPower(address)": {
        "details": "Returns the Vote Power of a user.",
        "params": {
          "user": "Address of the user."
        },
        "returns": {
          "_0": "Vote number*"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Governance Strategy contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}