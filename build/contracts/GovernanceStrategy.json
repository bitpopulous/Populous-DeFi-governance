{
  "contractName": "GovernanceStrategy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pxt_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ppt_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "votingToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PPT",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PXT",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTotalPropositionSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getPropositionPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getVotingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pxt_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ppt_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"votingToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PPT\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PXT\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPropositionPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPropositionSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Populous*\",\"details\":\"Smart contract containing logic to measure users' relative power to propose and vote. User Power = User Power from Populous Token + User Power from stkPopulous Token. User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated] Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation - getPropositionPowerAt: fetching a user Proposition Power at a specified block - getVotingPowerAt: fetching a user Voting Power at a specified block\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor, register tokens used for Voting and Proposition Powers.\",\"params\":{\"pxt_\":\"The address of the Populous PXT Token contract.*\"}},\"getPropositionPower(address)\":{\"details\":\"Returns the Proposition Power of a user.\",\"params\":{\"user\":\"Address of the user.\"},\"returns\":{\"_0\":\"Power number*\"}},\"getTotalPropositionSupply()\":{\"details\":\"Returns the total supply of Proposition Tokens Available for Governance\",\"returns\":{\"_0\":\"total supply at blockNumber*\"}},\"getVotingPower(address)\":{\"details\":\"Returns the Vote Power of a user.\",\"params\":{\"user\":\"Address of the user.\"},\"returns\":{\"_0\":\"Vote number*\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Governance Strategy contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol\":\"GovernanceStrategy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol\":{\"keccak256\":\"0xc6bc392dfd3a028e8afeee2ccdbda7c709b0157bb99114443b5796b2b52fa0a9\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://2c7c0170736ae84638919f07c0c8416a3df3ff77c4c0223596d8172869c5cc42\",\"dweb:/ipfs/QmavZRBLgMR5mQuH43uef43W3Nf6HYGf7cVzwiYA53JymR\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/Context.sol\":{\"keccak256\":\"0x1184b768b1e5b8e13eb4a589c3b14c2bf6e04e9d061012c6c772a9830272a1f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be5034806781ef4986f7edd2ff2fe8dead05c2aeee627f55a4a68cfe21d43479\",\"dweb:/ipfs/QmQ5QNcLBdQSPRQSmxmNvBf6r2pS1AbNPPoEWw3Q2WHRmN\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/SafeMath.sol\":{\"keccak256\":\"0x82cac3eaeff0a73649987a5fa25258561857346745da180f51b332014df8166d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07bd1ad47162f33326e5374c9aec9b3c514882b360f66b627b20c622b80053c3\",\"dweb:/ipfs/QmPrFNUxLyPQppcZQ5hD7L34rD5BWe9LQvw6SD1cLDNGn3\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol\":{\"keccak256\":\"0xefc686d29017ea34fdc4499ee19b351f816ee76d9b59375df708d0dd3b84b6e7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c1edc6cfefa353e69ccf9e363171afc99f647386f50989636cec3a6e4a5037ea\",\"dweb:/ipfs/QmYfxSBsJ9DtFKsoJPRorkPyj7UzwHy5bykw1oVshn54XS\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x388d7e22e4455851ae9d1309dabf9e01ff6849128ef607e89389b7cf8fe4df1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6e8db75cc490f3a85bd8ef8b9419284831183777d36643f100a15c1c35a92d6d\",\"dweb:/ipfs/QmTz6RiRprnq58sA7fShW8w3ttyBzCXVHjCNyGbgNxkcWx\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernancePowerDelegationToken.sol\":{\"keccak256\":\"0x8be3a09e9cd801481f0e420771edfc3f04dbb0ebafba00282b7c980fc2b0c309\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9e05d70025b5b3526c5df342652d66488840323d1854b89f365710a5b6aefc32\",\"dweb:/ipfs/QmfPun5g2YtLKDNcoNDruudF7dd5t6AQb38dgZnw6kYG71\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernanceStrategy.sol\":{\"keccak256\":\"0xd69c1a414ace8da57a6b53e6ee54fe9cf6e6926adc2e1d962d96d5460bd8d677\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a45def800fb575d280bb816438e544fe8ef9645afae6a44bf94e6a678fe05a4f\",\"dweb:/ipfs/QmVqxxoCYknVf38SHQis1TvVUeiXNsnQa6NEpvamnf3WAC\"]},\"/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/misc/Ownable.sol\":{\"keccak256\":\"0xa792b05d4ece249c74a878fa7de3ac3740275c3b5011b6e35a1d998caa45f7ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a6b379ee7e2f4cd32a095745835bbeabbb54d9afe3380c920e4bb80e527774d\",\"dweb:/ipfs/QmVrc6YCwd5uxrgRawCArDSwihdzxy1cYQAYjWh4FzCvRP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161072038038061072083398101604081905261002f9161013f565b600061003961011f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b038316158015906100a357506001600160a01b03821615155b80156100b757506001600160a01b03811615155b6100dc5760405162461bcd60e51b81526004016100d390610181565b60405180910390fd5b600380546001600160a01b03199081166001600160a01b0393841617909155600280548216938316939093179092556001805490921692169190911790556101d2565b3390565b80516001600160a01b038116811461013a57600080fd5b919050565b600080600060608486031215610153578283fd5b61015c84610123565b925061016a60208501610123565b915061017860408501610123565b90509250925092565b60208082526031908201527f476f7665726e616e636553747261746567793a20496e76616c6964205058542f60408201527050505420746f6b656e206164647265737360781b606082015260800190565b61053f806101e16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b034012311610066578063b0340123146100f0578063b2bdfa7b146100f8578063bb4d443614610100578063f2fde38b14610113578063ff729975146101265761009e565b806338cb3dd1146100a35780633bb879ae146100c1578063678b2012146100d6578063715018a6146100de5780638da5cb5b146100e8575b600080fd5b6100ab610139565b6040516100b891906104c6565b60405180910390f35b6100c9610148565b6040516100b891906104da565b6100ab6101ca565b6100e66101d9565b005b6100ab61028d565b6100ab61029c565b6100ab6102ab565b6100c961010e366004610480565b6102ba565b6100e6610121366004610480565b610341565b6100c9610134366004610480565b61044b565b6001546001600160a01b031681565b600154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561018d57600080fd5b505afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906104ae565b905090565b6002546001600160a01b031681565b6101e161047c565b6000546001600160a01b03908116911614610243576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6003546001600160a01b031681565b6000546001600160a01b031681565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102eb9085906004016104c6565b60206040518083038186803b15801561030357600080fd5b505afa158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906104ae565b92915050565b61034961047c565b6000546001600160a01b039081169116146103ab576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103f05760405162461bcd60e51b81526004018080602001828103825260268152602001806104e46026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102eb9085906004016104c6565b3390565b600060208284031215610491578081fd5b81356001600160a01b03811681146104a7578182fd5b9392505050565b6000602082840312156104bf578081fd5b5051919050565b6001600160a01b0391909116815260200190565b9081526020019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212205673dfb4cc2777b506e769faca73dbebe18703e57d3b0c994e381226a74ee6e264736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b034012311610066578063b0340123146100f0578063b2bdfa7b146100f8578063bb4d443614610100578063f2fde38b14610113578063ff729975146101265761009e565b806338cb3dd1146100a35780633bb879ae146100c1578063678b2012146100d6578063715018a6146100de5780638da5cb5b146100e8575b600080fd5b6100ab610139565b6040516100b891906104c6565b60405180910390f35b6100c9610148565b6040516100b891906104da565b6100ab6101ca565b6100e66101d9565b005b6100ab61028d565b6100ab61029c565b6100ab6102ab565b6100c961010e366004610480565b6102ba565b6100e6610121366004610480565b610341565b6100c9610134366004610480565b61044b565b6001546001600160a01b031681565b600154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561018d57600080fd5b505afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906104ae565b905090565b6002546001600160a01b031681565b6101e161047c565b6000546001600160a01b03908116911614610243576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6003546001600160a01b031681565b6000546001600160a01b031681565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102eb9085906004016104c6565b60206040518083038186803b15801561030357600080fd5b505afa158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906104ae565b92915050565b61034961047c565b6000546001600160a01b039081169116146103ab576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103f05760405162461bcd60e51b81526004018080602001828103825260268152602001806104e46026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102eb9085906004016104c6565b3390565b600060208284031215610491578081fd5b81356001600160a01b03811681146104a7578182fd5b9392505050565b6000602082840312156104bf578081fd5b5051919050565b6001600160a01b0391909116815260200190565b9081526020019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212205673dfb4cc2777b506e769faca73dbebe18703e57d3b0c994e381226a74ee6e264736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1012:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "76:117:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "86:22:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "101:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "95:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "95:13:34"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "171:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "180:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "183:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "173:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "173:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "173:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "130:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "141:5:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "156:3:34",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "161:1:34",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "152:3:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "152:11:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "165:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "148:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "148:19:34"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "137:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "137:31:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "127:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:42:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:50:34"
                  },
                  "nodeType": "YulIf",
                  "src": "117:2:34"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "55:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "66:5:34",
                "type": ""
              }
            ],
            "src": "14:179:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "313:279:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "359:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "368:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "376:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "361:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "361:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "361:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "334:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "343:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "330:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "330:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "355:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "326:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "326:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "323:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "394:52:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "436:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "404:31:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "404:42:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "394:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "455:61:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "501:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "512:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "465:31:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "465:51:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "525:61:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "571:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "582:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "567:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "567:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "535:31:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "535:51:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "263:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "274:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "286:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "294:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "302:6:34",
                "type": ""
              }
            ],
            "src": "198:394:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:239:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "788:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "799:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "781:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "781:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "822:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "833:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "818:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "818:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "838:2:34",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "811:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "811:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "861:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "872:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "857:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "857:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "877:34:34",
                        "type": "",
                        "value": "GovernanceStrategy: Invalid PXT/"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "850:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "850:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "932:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "943:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "928:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "948:19:34",
                        "type": "",
                        "value": "PPT token address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "921:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:47:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "921:47:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "977:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "989:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1000:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "985:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "985:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "977:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "748:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "762:4:34",
                "type": ""
              }
            ],
            "src": "597:413:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"GovernanceStrategy: Invalid PXT/\")\n        mstore(add(headStart, 96), \"PPT token address\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1132:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:34",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:34",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:34"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:34"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:34",
                "type": ""
              }
            ],
            "src": "14:306:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:113:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "452:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "461:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "469:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "454:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "454:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "454:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "427:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "436:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "423:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "423:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "448:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "419:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "419:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "416:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "487:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "487:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "372:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "383:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "395:6:34",
                "type": ""
              }
            ],
            "src": "325:194:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "625:102:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "635:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "647:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "658:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "643:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "643:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "635:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "677:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "692:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "708:3:34",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "713:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "704:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "704:11:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "717:1:34",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "700:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "700:19:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "670:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "670:51:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "670:51:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "594:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "605:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "616:4:34",
                "type": ""
              }
            ],
            "src": "524:203:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "846:102:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "856:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "868:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "879:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "864:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "864:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "856:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "898:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "913:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "929:3:34",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "934:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "925:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "925:11:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "938:1:34",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "921:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "921:19:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "909:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "909:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "891:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:51:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "891:51:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$635__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "815:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "826:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "837:4:34",
                "type": ""
              }
            ],
            "src": "732:216:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1054:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1064:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1076:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1087:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1072:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1064:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1106:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1117:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1099:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1099:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1099:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1023:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1034:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1045:4:34",
                "type": ""
              }
            ],
            "src": "953:177:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$635__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1064:1580:18:-:0;;;1530:328;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;861:17:31;881:12;:10;:12::i;:::-;899:6;:18;;-1:-1:-1;;;;;;899:18:31;-1:-1:-1;;;;;899:18:31;;;;;;;928:43;;899:18;;-1:-1:-1;899:18:31;928:43;;899:6;;928:43;-1:-1:-1;;;;;;1614:18:18;;;;;;1613:50;;-1:-1:-1;;;;;;1644:18:18;;;;1613:50;:88;;;;-1:-1:-1;;;;;;1674:26:18;;;;1613:88;1598:169;;;;-1:-1:-1;;;1598:169:18;;;;;;;:::i;:::-;;;;;;;;;1774:11;:33;;-1:-1:-1;;;;;;1774:33:18;;;-1:-1:-1;;;;;1774:33:18;;;;;;;1813:3;:17;;;;;;;;;;;;;;-1:-1:-1;1836:17:18;;;;;;;;;;;;;1064:1580;;586:98:8;669:10;586:98;:::o;14:179:34:-;95:13;;-1:-1:-1;;;;;137:31:34;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:394::-;;;;355:2;343:9;334:7;330:23;326:32;323:2;;;376:6;368;361:22;323:2;404:42;436:9;404:42;:::i;:::-;394:52;;465:51;512:2;501:9;497:18;465:51;:::i;:::-;455:61;;535:51;582:2;571:9;567:18;535:51;:::i;:::-;525:61;;313:279;;;;;:::o;597:413::-;799:2;781:21;;;838:2;818:18;;;811:30;877:34;872:2;857:18;;850:62;-1:-1:-1;;;943:2:34;928:18;;921:47;1000:3;985:19;;771:239::o;:::-;1064:1580:18;;;;;;",
  "deployedSourceMap": "1064:1580:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1998:111;;;:::i;:::-;;;;;;;:::i;1304:16::-;;;:::i;1627:135:31:-;;;:::i;:::-;;1044:71;;;:::i;1343:24:18:-;;;:::i;636:21:31:-;;;:::i;2502:140:18:-;;;;;;:::i;:::-;;:::i;1901:226:31:-;;;;;;:::i;:::-;;:::i;2241:137:18:-;;;;;;:::i;:::-;;:::i;1236:16::-;;;-1:-1:-1;;;;;1236:16:18;;:::o;1998:111::-;2087:3;;:17;;;-1:-1:-1;;;2087:17:18;;;;2065:7;;-1:-1:-1;;;;;2087:3:18;;:15;;:17;;;;;;;;;;;;;;:3;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2080:24;;1998:111;:::o;1304:16::-;;;-1:-1:-1;;;;;1304:16:18;;:::o;1627:135:31:-;1240:12;:10;:12::i;:::-;1230:6;;-1:-1:-1;;;;;1230:6:31;;;:22;;;1222:67;;;;;-1:-1:-1;;;1222:67:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1729:1:::1;1713:6:::0;;1692:40:::1;::::0;-1:-1:-1;;;;;1713:6:31;;::::1;::::0;1692:40:::1;::::0;1729:1;;1692:40:::1;1755:1;1738:19:::0;;-1:-1:-1;;;;;;1738:19:31::1;::::0;;1627:135::o;1044:71::-;1082:7;1104:6;-1:-1:-1;;;;;1104:6:31;1044:71;:::o;1343:24:18:-;;;-1:-1:-1;;;;;1343:24:18;;:::o;636:21:31:-;;;-1:-1:-1;;;;;636:21:31;;:::o;2502:140:18:-;2610:11;;:27;;-1:-1:-1;;;2610:27:18;;2586:7;;-1:-1:-1;;;;;2610:11:18;;:21;;:27;;2632:4;;2610:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2603:34;2502:140;-1:-1:-1;;2502:140:18:o;1901:226:31:-;1240:12;:10;:12::i;:::-;1230:6;;-1:-1:-1;;;;;1230:6:31;;;:22;;;1222:67;;;;;-1:-1:-1;;;1222:67:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1985:22:31;::::1;1977:73;;;;-1:-1:-1::0;;;1977:73:31::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:6;::::0;;2061:38:::1;::::0;-1:-1:-1;;;;;2061:38:31;;::::1;::::0;2082:6;::::1;::::0;2061:38:::1;::::0;::::1;2105:6;:17:::0;;-1:-1:-1;;;;;;2105:17:31::1;-1:-1:-1::0;;;;;2105:17:31;;;::::1;::::0;;;::::1;::::0;;1901:226::o;2241:137:18:-;2354:3;;:19;;-1:-1:-1;;;2354:19:18;;2330:7;;-1:-1:-1;;;;;2354:3:18;;:13;;:19;;2368:4;;2354:19;;;:::i;586:98:8:-;669:10;586:98;:::o;14:306:34:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:34;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:34:o;325:194::-;;448:2;436:9;427:7;423:23;419:32;416:2;;;469:6;461;454:22;416:2;-1:-1:-1;497:16:34;;406:113;-1:-1:-1;406:113:34:o;524:203::-;-1:-1:-1;;;;;688:32:34;;;;670:51;;658:2;643:18;;625:102::o;953:177::-;1099:25;;;1087:2;1072:18;;1054:76::o",
  "source": "// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma abicoder v2;\n\nimport {IGovernanceStrategy} from '../interfaces/IGovernanceStrategy.sol';\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {IGovernancePowerDelegationToken} from '../interfaces/IGovernancePowerDelegationToken.sol';\nimport {Ownable} from '../misc/Ownable.sol';\nimport {SafeMath} from '../dependencies/open-zeppelin/SafeMath.sol';\nimport {ERC20} from '../ERC20.sol';\n\n/**\n * @title Governance Strategy contract\n * @dev Smart contract containing logic to measure users' relative power to propose and vote.\n * User Power = User Power from Populous Token + User Power from stkPopulous Token.\n * User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated]\n * Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation\n * - getPropositionPowerAt: fetching a user Proposition Power at a specified block\n * - getVotingPowerAt: fetching a user Voting Power at a specified block\n * @author Populous\n **/\ncontract GovernanceStrategy is Ownable, IGovernanceStrategy {\n  using SafeMath for uint256;\n\n  // proposal creation token\n  // can be locked in exchange for voting token\n  ERC20 public PXT;\n  // can be locked in exchange for voting token\n  ERC20 public PPT; \n  // voting token\n  ERC20 public votingToken; \n\n  /**\n   * @dev Constructor, register tokens used for Voting and Proposition Powers.\n   * @param pxt_ The address of the Populous PXT Token contract.\n   **/\n  constructor(address pxt_, address ppt_, address votingToken_) {\n    require(\n      (pxt_ != address(0)) &&\n      (ppt_ != address(0)) &&\n      (votingToken_ != address(0)), \n      \"GovernanceStrategy: Invalid PXT/PPT token address\"\n    );\n\n    votingToken = ERC20(votingToken_);\n    PPT = ERC20(ppt_);\n    PXT = ERC20(pxt_);\n  }\n\n  /**\n   * @dev Returns the total supply of Proposition Tokens Available for Governance\n   * @return total supply at blockNumber\n   **/\n  function getTotalPropositionSupply() public view override returns (uint256) {\n    return PXT.totalSupply();\n  }\n\n  /**\n   * @dev Returns the Proposition Power of a user.\n   * @param user Address of the user.\n   * @return Power number\n   **/\n  function getPropositionPower(address user)\n    public\n    view\n    override\n    returns (uint256)\n  {\n    return PXT.balanceOf(user);\n  }\n\n  /**\n   * @dev Returns the Vote Power of a user.\n   * @param user Address of the user.\n   * @return Vote number\n   **/\n  function getVotingPower(address user)\n    public\n    view\n    override\n    returns (uint256)\n  {\n    return votingToken.balanceOf(user);\n  }\n}\n",
  "sourcePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol",
  "ast": {
    "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol",
    "exportedSymbols": {
      "ERC20": [
        635
      ],
      "GovernanceStrategy": [
        2510
      ],
      "IERC20": [
        6547
      ],
      "IGovernancePowerDelegationToken": [
        6770
      ],
      "IGovernanceStrategy": [
        6796
      ],
      "Ownable": [
        7486
      ],
      "SafeMath": [
        1633
      ]
    },
    "id": 2511,
    "license": "agpl-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2384,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:18"
      },
      {
        "id": 2385,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:19:18"
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernanceStrategy.sol",
        "file": "../interfaces/IGovernanceStrategy.sol",
        "id": 2387,
        "nodeType": "ImportDirective",
        "scope": 2511,
        "sourceUnit": 6797,
        "src": "81:74:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2386,
              "name": "IGovernanceStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "89:19:18",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 2389,
        "nodeType": "ImportDirective",
        "scope": 2511,
        "sourceUnit": 6548,
        "src": "156:48:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2388,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "164:6:18",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernancePowerDelegationToken.sol",
        "file": "../interfaces/IGovernancePowerDelegationToken.sol",
        "id": 2391,
        "nodeType": "ImportDirective",
        "scope": 2511,
        "sourceUnit": 6771,
        "src": "205:98:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2390,
              "name": "IGovernancePowerDelegationToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "213:31:18",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/misc/Ownable.sol",
        "file": "../misc/Ownable.sol",
        "id": 2393,
        "nodeType": "ImportDirective",
        "scope": 2511,
        "sourceUnit": 7487,
        "src": "304:44:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2392,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "312:7:18",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/SafeMath.sol",
        "file": "../dependencies/open-zeppelin/SafeMath.sol",
        "id": 2395,
        "nodeType": "ImportDirective",
        "scope": 2511,
        "sourceUnit": 1634,
        "src": "349:68:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2394,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "357:8:18",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
        "file": "../ERC20.sol",
        "id": 2397,
        "nodeType": "ImportDirective",
        "scope": 2511,
        "sourceUnit": 636,
        "src": "418:35:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2396,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "426:5:18",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2399,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7486,
              "src": "1095:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7486",
                "typeString": "contract Ownable"
              }
            },
            "id": 2400,
            "nodeType": "InheritanceSpecifier",
            "src": "1095:7:18"
          },
          {
            "baseName": {
              "id": 2401,
              "name": "IGovernanceStrategy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6796,
              "src": "1104:19:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGovernanceStrategy_$6796",
                "typeString": "contract IGovernanceStrategy"
              }
            },
            "id": 2402,
            "nodeType": "InheritanceSpecifier",
            "src": "1104:19:18"
          }
        ],
        "contractDependencies": [
          1172,
          6796,
          7486
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2398,
          "nodeType": "StructuredDocumentation",
          "src": "455:608:18",
          "text": " @title Governance Strategy contract\n @dev Smart contract containing logic to measure users' relative power to propose and vote.\n User Power = User Power from Populous Token + User Power from stkPopulous Token.\n User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated]\n Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation\n - getPropositionPowerAt: fetching a user Proposition Power at a specified block\n - getVotingPowerAt: fetching a user Voting Power at a specified block\n @author Populous*"
        },
        "fullyImplemented": true,
        "id": 2510,
        "linearizedBaseContracts": [
          2510,
          6796,
          7486,
          1172
        ],
        "name": "GovernanceStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2405,
            "libraryName": {
              "id": 2403,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1633,
              "src": "1134:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1633",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1128:27:18",
            "typeName": {
              "id": 2404,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1147:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "38cb3dd1",
            "id": 2407,
            "mutability": "mutable",
            "name": "PXT",
            "nodeType": "VariableDeclaration",
            "scope": 2510,
            "src": "1236:16:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$635",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2406,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "1236:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "678b2012",
            "id": 2409,
            "mutability": "mutable",
            "name": "PPT",
            "nodeType": "VariableDeclaration",
            "scope": 2510,
            "src": "1304:16:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$635",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2408,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "1304:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0340123",
            "id": 2411,
            "mutability": "mutable",
            "name": "votingToken",
            "nodeType": "VariableDeclaration",
            "scope": 2510,
            "src": "1343:24:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$635",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2410,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "1343:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$635",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "1592:266:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2422,
                                  "name": "pxt_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2414,
                                  "src": "1614:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2425,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1630:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1622:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2423,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1622:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2426,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1622:10:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "1614:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2428,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1613:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2429,
                                  "name": "ppt_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2416,
                                  "src": "1644:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2432,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1660:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1652:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2430,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1652:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1652:10:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "1644:18:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2435,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1643:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1613:50:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2437,
                                "name": "votingToken_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2418,
                                "src": "1674:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1698:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1690:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2438,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1690:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1690:10:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1674:26:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2443,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1673:28:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1613:88:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476f7665726e616e636553747261746567793a20496e76616c6964205058542f50505420746f6b656e2061646472657373",
                        "id": 2445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1710:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c",
                          "typeString": "literal_string \"GovernanceStrategy: Invalid PXT/PPT token address\""
                        },
                        "value": "GovernanceStrategy: Invalid PXT/PPT token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c",
                          "typeString": "literal_string \"GovernanceStrategy: Invalid PXT/PPT token address\""
                        }
                      ],
                      "id": 2421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1598:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1598:169:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2447,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:169:18"
                },
                {
                  "expression": {
                    "id": 2452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2448,
                      "name": "votingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2411,
                      "src": "1774:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2450,
                          "name": "votingToken_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2418,
                          "src": "1794:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2449,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "1788:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$635_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1788:19:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1774:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$635",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2453,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:33:18"
                },
                {
                  "expression": {
                    "id": 2458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2454,
                      "name": "PPT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2409,
                      "src": "1813:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2456,
                          "name": "ppt_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2416,
                          "src": "1825:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2455,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "1819:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$635_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1819:11:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1813:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$635",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2459,
                  "nodeType": "ExpressionStatement",
                  "src": "1813:17:18"
                },
                {
                  "expression": {
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2460,
                      "name": "PXT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2407,
                      "src": "1836:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2462,
                          "name": "pxt_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2414,
                          "src": "1848:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2461,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "1842:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$635_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 2463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1842:11:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$635",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1836:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$635",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:17:18"
                }
              ]
            },
            "documentation": {
              "id": 2412,
              "nodeType": "StructuredDocumentation",
              "src": "1373:154:18",
              "text": " @dev Constructor, register tokens used for Voting and Proposition Powers.\n @param pxt_ The address of the Populous PXT Token contract.*"
            },
            "id": 2467,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2414,
                  "mutability": "mutable",
                  "name": "pxt_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "1542:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2416,
                  "mutability": "mutable",
                  "name": "ppt_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "1556:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "votingToken_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "1570:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1541:50:18"
            },
            "returnParameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1592:0:18"
            },
            "scope": 2510,
            "src": "1530:328:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6787
            ],
            "body": {
              "id": 2478,
              "nodeType": "Block",
              "src": "2074:35:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2474,
                        "name": "PXT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2407,
                        "src": "2087:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 242,
                      "src": "2087:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2473,
                  "id": 2477,
                  "nodeType": "Return",
                  "src": "2080:24:18"
                }
              ]
            },
            "documentation": {
              "id": 2468,
              "nodeType": "StructuredDocumentation",
              "src": "1862:133:18",
              "text": " @dev Returns the total supply of Proposition Tokens Available for Governance\n @return total supply at blockNumber*"
            },
            "functionSelector": "3bb879ae",
            "id": 2479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalPropositionSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2470,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2047:8:18"
            },
            "parameters": {
              "id": 2469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2032:2:18"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2472,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "2065:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2064:9:18"
            },
            "scope": 2510,
            "src": "1998:111:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6781
            ],
            "body": {
              "id": 2493,
              "nodeType": "Block",
              "src": "2341:37:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2490,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "2368:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2488,
                        "name": "PXT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2407,
                        "src": "2354:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 256,
                      "src": "2354:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2354:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2487,
                  "id": 2492,
                  "nodeType": "Return",
                  "src": "2347:26:18"
                }
              ]
            },
            "documentation": {
              "id": 2480,
              "nodeType": "StructuredDocumentation",
              "src": "2113:125:18",
              "text": " @dev Returns the Proposition Power of a user.\n @param user Address of the user.\n @return Power number*"
            },
            "functionSelector": "ff729975",
            "id": 2494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPropositionPower",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2484,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2308:8:18"
            },
            "parameters": {
              "id": 2483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2482,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2494,
                  "src": "2270:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2269:14:18"
            },
            "returnParameters": {
              "id": 2487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2486,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2494,
                  "src": "2330:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2329:9:18"
            },
            "scope": 2510,
            "src": "2241:137:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6795
            ],
            "body": {
              "id": 2508,
              "nodeType": "Block",
              "src": "2597:45:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2505,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "2632:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2503,
                        "name": "votingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2411,
                        "src": "2610:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$635",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 256,
                      "src": "2610:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2610:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2502,
                  "id": 2507,
                  "nodeType": "Return",
                  "src": "2603:34:18"
                }
              ]
            },
            "documentation": {
              "id": 2495,
              "nodeType": "StructuredDocumentation",
              "src": "2382:117:18",
              "text": " @dev Returns the Vote Power of a user.\n @param user Address of the user.\n @return Vote number*"
            },
            "functionSelector": "bb4d4436",
            "id": 2509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotingPower",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2499,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2564:8:18"
            },
            "parameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2497,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "2526:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2526:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2525:14:18"
            },
            "returnParameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "2586:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2585:9:18"
            },
            "scope": 2510,
            "src": "2502:140:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2511,
        "src": "1064:1580:18"
      }
    ],
    "src": "37:2608:18"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/governance/GovernanceStrategy.sol",
      "exportedSymbols": {
        "ERC20": [
          635
        ],
        "GovernanceStrategy": [
          2510
        ],
        "IERC20": [
          6547
        ],
        "IGovernancePowerDelegationToken": [
          6770
        ],
        "IGovernanceStrategy": [
          6796
        ],
        "Ownable": [
          7486
        ],
        "SafeMath": [
          1633
        ]
      },
      "license": "agpl-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".5"
          ]
        },
        "id": 2384,
        "name": "PragmaDirective",
        "src": "37:22:18"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 2385,
        "name": "PragmaDirective",
        "src": "60:19:18"
      },
      {
        "attributes": {
          "SourceUnit": 6797,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernanceStrategy.sol",
          "file": "../interfaces/IGovernanceStrategy.sol",
          "scope": 2511,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "IGovernanceStrategy"
                },
                "id": 2386,
                "name": "Identifier",
                "src": "89:19:18"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2387,
        "name": "ImportDirective",
        "src": "81:74:18"
      },
      {
        "attributes": {
          "SourceUnit": 6548,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IERC20.sol",
          "file": "../interfaces/IERC20.sol",
          "scope": 2511,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "IERC20"
                },
                "id": 2388,
                "name": "Identifier",
                "src": "164:6:18"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2389,
        "name": "ImportDirective",
        "src": "156:48:18"
      },
      {
        "attributes": {
          "SourceUnit": 6771,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/interfaces/IGovernancePowerDelegationToken.sol",
          "file": "../interfaces/IGovernancePowerDelegationToken.sol",
          "scope": 2511,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "IGovernancePowerDelegationToken"
                },
                "id": 2390,
                "name": "Identifier",
                "src": "213:31:18"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2391,
        "name": "ImportDirective",
        "src": "205:98:18"
      },
      {
        "attributes": {
          "SourceUnit": 7487,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/misc/Ownable.sol",
          "file": "../misc/Ownable.sol",
          "scope": 2511,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "Ownable"
                },
                "id": 2392,
                "name": "Identifier",
                "src": "312:7:18"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2393,
        "name": "ImportDirective",
        "src": "304:44:18"
      },
      {
        "attributes": {
          "SourceUnit": 1634,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/dependencies/open-zeppelin/SafeMath.sol",
          "file": "../dependencies/open-zeppelin/SafeMath.sol",
          "scope": 2511,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "SafeMath"
                },
                "id": 2394,
                "name": "Identifier",
                "src": "357:8:18"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2395,
        "name": "ImportDirective",
        "src": "349:68:18"
      },
      {
        "attributes": {
          "SourceUnit": 636,
          "absolutePath": "/Users/nemitariajienka/Desktop/projects/populous/Populous-DeFi-governance/contracts/ERC20.sol",
          "file": "../ERC20.sol",
          "scope": 2511,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "ERC20"
                },
                "id": 2396,
                "name": "Identifier",
                "src": "426:5:18"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2397,
        "name": "ImportDirective",
        "src": "418:35:18"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1172,
            6796,
            7486
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2510,
            6796,
            7486,
            1172
          ],
          "name": "GovernanceStrategy",
          "scope": 2511
        },
        "children": [
          {
            "attributes": {
              "text": " @title Governance Strategy contract\n @dev Smart contract containing logic to measure users' relative power to propose and vote.\n User Power = User Power from Populous Token + User Power from stkPopulous Token.\n User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated]\n Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation\n - getPropositionPowerAt: fetching a user Proposition Power at a specified block\n - getVotingPowerAt: fetching a user Voting Power at a specified block\n @author Populous*"
            },
            "id": 2398,
            "name": "StructuredDocumentation",
            "src": "455:608:18"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 7486,
                  "type": "contract Ownable"
                },
                "id": 2399,
                "name": "UserDefinedTypeName",
                "src": "1095:7:18"
              }
            ],
            "id": 2400,
            "name": "InheritanceSpecifier",
            "src": "1095:7:18"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IGovernanceStrategy",
                  "referencedDeclaration": 6796,
                  "type": "contract IGovernanceStrategy"
                },
                "id": 2401,
                "name": "UserDefinedTypeName",
                "src": "1104:19:18"
              }
            ],
            "id": 2402,
            "name": "InheritanceSpecifier",
            "src": "1104:19:18"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 1633,
                  "type": "library SafeMath"
                },
                "id": 2403,
                "name": "UserDefinedTypeName",
                "src": "1134:8:18"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 2404,
                "name": "ElementaryTypeName",
                "src": "1147:7:18"
              }
            ],
            "id": 2405,
            "name": "UsingForDirective",
            "src": "1128:27:18"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "38cb3dd1",
              "mutability": "mutable",
              "name": "PXT",
              "scope": 2510,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 2406,
                "name": "UserDefinedTypeName",
                "src": "1236:5:18"
              }
            ],
            "id": 2407,
            "name": "VariableDeclaration",
            "src": "1236:16:18"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "678b2012",
              "mutability": "mutable",
              "name": "PPT",
              "scope": 2510,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 2408,
                "name": "UserDefinedTypeName",
                "src": "1304:5:18"
              }
            ],
            "id": 2409,
            "name": "VariableDeclaration",
            "src": "1304:16:18"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "b0340123",
              "mutability": "mutable",
              "name": "votingToken",
              "scope": 2510,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 635,
                  "type": "contract ERC20"
                },
                "id": 2410,
                "name": "UserDefinedTypeName",
                "src": "1343:5:18"
              }
            ],
            "id": 2411,
            "name": "VariableDeclaration",
            "src": "1343:24:18"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 2510,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Constructor, register tokens used for Voting and Proposition Powers.\n @param pxt_ The address of the Populous PXT Token contract.*"
                },
                "id": 2412,
                "name": "StructuredDocumentation",
                "src": "1373:154:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "pxt_",
                      "scope": 2467,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2413,
                        "name": "ElementaryTypeName",
                        "src": "1542:7:18"
                      }
                    ],
                    "id": 2414,
                    "name": "VariableDeclaration",
                    "src": "1542:12:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ppt_",
                      "scope": 2467,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2415,
                        "name": "ElementaryTypeName",
                        "src": "1556:7:18"
                      }
                    ],
                    "id": 2416,
                    "name": "VariableDeclaration",
                    "src": "1556:12:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "votingToken_",
                      "scope": 2467,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2417,
                        "name": "ElementaryTypeName",
                        "src": "1570:7:18"
                      }
                    ],
                    "id": 2418,
                    "name": "VariableDeclaration",
                    "src": "1570:20:18"
                  }
                ],
                "id": 2419,
                "name": "ParameterList",
                "src": "1541:50:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2420,
                "name": "ParameterList",
                "src": "1592:0:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6102392710c68013724a4a03c4277af854b7f530d0c7df70afcc444685b6bc3c",
                                  "typeString": "literal_string \"GovernanceStrategy: Invalid PXT/PPT token address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2421,
                            "name": "Identifier",
                            "src": "1598:7:18"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2414,
                                              "type": "address",
                                              "value": "pxt_"
                                            },
                                            "id": 2422,
                                            "name": "Identifier",
                                            "src": "1614:4:18"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "address payable",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "type": "type(address)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "name": "address"
                                                    },
                                                    "id": 2423,
                                                    "name": "ElementaryTypeName",
                                                    "src": "1622:7:18"
                                                  }
                                                ],
                                                "id": 2424,
                                                "name": "ElementaryTypeNameExpression",
                                                "src": "1622:7:18"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "30",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 0",
                                                  "value": "0"
                                                },
                                                "id": 2425,
                                                "name": "Literal",
                                                "src": "1630:1:18"
                                              }
                                            ],
                                            "id": 2426,
                                            "name": "FunctionCall",
                                            "src": "1622:10:18"
                                          }
                                        ],
                                        "id": 2427,
                                        "name": "BinaryOperation",
                                        "src": "1614:18:18"
                                      }
                                    ],
                                    "id": 2428,
                                    "name": "TupleExpression",
                                    "src": "1613:20:18"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2416,
                                              "type": "address",
                                              "value": "ppt_"
                                            },
                                            "id": 2429,
                                            "name": "Identifier",
                                            "src": "1644:4:18"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "address payable",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "type": "type(address)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "name": "address"
                                                    },
                                                    "id": 2430,
                                                    "name": "ElementaryTypeName",
                                                    "src": "1652:7:18"
                                                  }
                                                ],
                                                "id": 2431,
                                                "name": "ElementaryTypeNameExpression",
                                                "src": "1652:7:18"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "30",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 0",
                                                  "value": "0"
                                                },
                                                "id": 2432,
                                                "name": "Literal",
                                                "src": "1660:1:18"
                                              }
                                            ],
                                            "id": 2433,
                                            "name": "FunctionCall",
                                            "src": "1652:10:18"
                                          }
                                        ],
                                        "id": 2434,
                                        "name": "BinaryOperation",
                                        "src": "1644:18:18"
                                      }
                                    ],
                                    "id": 2435,
                                    "name": "TupleExpression",
                                    "src": "1643:20:18"
                                  }
                                ],
                                "id": 2436,
                                "name": "BinaryOperation",
                                "src": "1613:50:18"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "!=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2418,
                                          "type": "address",
                                          "value": "votingToken_"
                                        },
                                        "id": 2437,
                                        "name": "Identifier",
                                        "src": "1674:12:18"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "address payable",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(address)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "address"
                                                },
                                                "id": 2438,
                                                "name": "ElementaryTypeName",
                                                "src": "1690:7:18"
                                              }
                                            ],
                                            "id": 2439,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "1690:7:18"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 2440,
                                            "name": "Literal",
                                            "src": "1698:1:18"
                                          }
                                        ],
                                        "id": 2441,
                                        "name": "FunctionCall",
                                        "src": "1690:10:18"
                                      }
                                    ],
                                    "id": 2442,
                                    "name": "BinaryOperation",
                                    "src": "1674:26:18"
                                  }
                                ],
                                "id": 2443,
                                "name": "TupleExpression",
                                "src": "1673:28:18"
                              }
                            ],
                            "id": 2444,
                            "name": "BinaryOperation",
                            "src": "1613:88:18"
                          },
                          {
                            "attributes": {
                              "hexvalue": "476f7665726e616e636553747261746567793a20496e76616c6964205058542f50505420746f6b656e2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"GovernanceStrategy: Invalid PXT/PPT token address\"",
                              "value": "GovernanceStrategy: Invalid PXT/PPT token address"
                            },
                            "id": 2445,
                            "name": "Literal",
                            "src": "1710:51:18"
                          }
                        ],
                        "id": 2446,
                        "name": "FunctionCall",
                        "src": "1598:169:18"
                      }
                    ],
                    "id": 2447,
                    "name": "ExpressionStatement",
                    "src": "1598:169:18"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2411,
                              "type": "contract ERC20",
                              "value": "votingToken"
                            },
                            "id": 2448,
                            "name": "Identifier",
                            "src": "1774:11:18"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract ERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 635,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 2449,
                                "name": "Identifier",
                                "src": "1788:5:18"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2418,
                                  "type": "address",
                                  "value": "votingToken_"
                                },
                                "id": 2450,
                                "name": "Identifier",
                                "src": "1794:12:18"
                              }
                            ],
                            "id": 2451,
                            "name": "FunctionCall",
                            "src": "1788:19:18"
                          }
                        ],
                        "id": 2452,
                        "name": "Assignment",
                        "src": "1774:33:18"
                      }
                    ],
                    "id": 2453,
                    "name": "ExpressionStatement",
                    "src": "1774:33:18"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2409,
                              "type": "contract ERC20",
                              "value": "PPT"
                            },
                            "id": 2454,
                            "name": "Identifier",
                            "src": "1813:3:18"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract ERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 635,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 2455,
                                "name": "Identifier",
                                "src": "1819:5:18"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2416,
                                  "type": "address",
                                  "value": "ppt_"
                                },
                                "id": 2456,
                                "name": "Identifier",
                                "src": "1825:4:18"
                              }
                            ],
                            "id": 2457,
                            "name": "FunctionCall",
                            "src": "1819:11:18"
                          }
                        ],
                        "id": 2458,
                        "name": "Assignment",
                        "src": "1813:17:18"
                      }
                    ],
                    "id": 2459,
                    "name": "ExpressionStatement",
                    "src": "1813:17:18"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2407,
                              "type": "contract ERC20",
                              "value": "PXT"
                            },
                            "id": 2460,
                            "name": "Identifier",
                            "src": "1836:3:18"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract ERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 635,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 2461,
                                "name": "Identifier",
                                "src": "1842:5:18"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2414,
                                  "type": "address",
                                  "value": "pxt_"
                                },
                                "id": 2462,
                                "name": "Identifier",
                                "src": "1848:4:18"
                              }
                            ],
                            "id": 2463,
                            "name": "FunctionCall",
                            "src": "1842:11:18"
                          }
                        ],
                        "id": 2464,
                        "name": "Assignment",
                        "src": "1836:17:18"
                      }
                    ],
                    "id": 2465,
                    "name": "ExpressionStatement",
                    "src": "1836:17:18"
                  }
                ],
                "id": 2466,
                "name": "Block",
                "src": "1592:266:18"
              }
            ],
            "id": 2467,
            "name": "FunctionDefinition",
            "src": "1530:328:18"
          },
          {
            "attributes": {
              "baseFunctions": [
                6787
              ],
              "functionSelector": "3bb879ae",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTotalPropositionSupply",
              "scope": 2510,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the total supply of Proposition Tokens Available for Governance\n @return total supply at blockNumber*"
                },
                "id": 2468,
                "name": "StructuredDocumentation",
                "src": "1862:133:18"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2470,
                "name": "OverrideSpecifier",
                "src": "2047:8:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2469,
                "name": "ParameterList",
                "src": "2032:2:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2479,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2471,
                        "name": "ElementaryTypeName",
                        "src": "2065:7:18"
                      }
                    ],
                    "id": 2472,
                    "name": "VariableDeclaration",
                    "src": "2065:7:18"
                  }
                ],
                "id": 2473,
                "name": "ParameterList",
                "src": "2064:9:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2473
                    },
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "totalSupply",
                              "referencedDeclaration": 242,
                              "type": "function () view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2407,
                                  "type": "contract ERC20",
                                  "value": "PXT"
                                },
                                "id": 2474,
                                "name": "Identifier",
                                "src": "2087:3:18"
                              }
                            ],
                            "id": 2475,
                            "name": "MemberAccess",
                            "src": "2087:15:18"
                          }
                        ],
                        "id": 2476,
                        "name": "FunctionCall",
                        "src": "2087:17:18"
                      }
                    ],
                    "id": 2477,
                    "name": "Return",
                    "src": "2080:24:18"
                  }
                ],
                "id": 2478,
                "name": "Block",
                "src": "2074:35:18"
              }
            ],
            "id": 2479,
            "name": "FunctionDefinition",
            "src": "1998:111:18"
          },
          {
            "attributes": {
              "baseFunctions": [
                6781
              ],
              "functionSelector": "ff729975",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPropositionPower",
              "scope": 2510,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the Proposition Power of a user.\n @param user Address of the user.\n @return Power number*"
                },
                "id": 2480,
                "name": "StructuredDocumentation",
                "src": "2113:125:18"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2484,
                "name": "OverrideSpecifier",
                "src": "2308:8:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 2494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2481,
                        "name": "ElementaryTypeName",
                        "src": "2270:7:18"
                      }
                    ],
                    "id": 2482,
                    "name": "VariableDeclaration",
                    "src": "2270:12:18"
                  }
                ],
                "id": 2483,
                "name": "ParameterList",
                "src": "2269:14:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2485,
                        "name": "ElementaryTypeName",
                        "src": "2330:7:18"
                      }
                    ],
                    "id": 2486,
                    "name": "VariableDeclaration",
                    "src": "2330:7:18"
                  }
                ],
                "id": 2487,
                "name": "ParameterList",
                "src": "2329:9:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2487
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 256,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2407,
                                  "type": "contract ERC20",
                                  "value": "PXT"
                                },
                                "id": 2488,
                                "name": "Identifier",
                                "src": "2354:3:18"
                              }
                            ],
                            "id": 2489,
                            "name": "MemberAccess",
                            "src": "2354:13:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2482,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 2490,
                            "name": "Identifier",
                            "src": "2368:4:18"
                          }
                        ],
                        "id": 2491,
                        "name": "FunctionCall",
                        "src": "2354:19:18"
                      }
                    ],
                    "id": 2492,
                    "name": "Return",
                    "src": "2347:26:18"
                  }
                ],
                "id": 2493,
                "name": "Block",
                "src": "2341:37:18"
              }
            ],
            "id": 2494,
            "name": "FunctionDefinition",
            "src": "2241:137:18"
          },
          {
            "attributes": {
              "baseFunctions": [
                6795
              ],
              "functionSelector": "bb4d4436",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVotingPower",
              "scope": 2510,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the Vote Power of a user.\n @param user Address of the user.\n @return Vote number*"
                },
                "id": 2495,
                "name": "StructuredDocumentation",
                "src": "2382:117:18"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2499,
                "name": "OverrideSpecifier",
                "src": "2564:8:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 2509,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2496,
                        "name": "ElementaryTypeName",
                        "src": "2526:7:18"
                      }
                    ],
                    "id": 2497,
                    "name": "VariableDeclaration",
                    "src": "2526:12:18"
                  }
                ],
                "id": 2498,
                "name": "ParameterList",
                "src": "2525:14:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2509,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2500,
                        "name": "ElementaryTypeName",
                        "src": "2586:7:18"
                      }
                    ],
                    "id": 2501,
                    "name": "VariableDeclaration",
                    "src": "2586:7:18"
                  }
                ],
                "id": 2502,
                "name": "ParameterList",
                "src": "2585:9:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2502
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 256,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2411,
                                  "type": "contract ERC20",
                                  "value": "votingToken"
                                },
                                "id": 2503,
                                "name": "Identifier",
                                "src": "2610:11:18"
                              }
                            ],
                            "id": 2504,
                            "name": "MemberAccess",
                            "src": "2610:21:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2497,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 2505,
                            "name": "Identifier",
                            "src": "2632:4:18"
                          }
                        ],
                        "id": 2506,
                        "name": "FunctionCall",
                        "src": "2610:27:18"
                      }
                    ],
                    "id": 2507,
                    "name": "Return",
                    "src": "2603:34:18"
                  }
                ],
                "id": 2508,
                "name": "Block",
                "src": "2597:45:18"
              }
            ],
            "id": 2509,
            "name": "FunctionDefinition",
            "src": "2502:140:18"
          }
        ],
        "id": 2510,
        "name": "ContractDefinition",
        "src": "1064:1580:18"
      }
    ],
    "id": 2511,
    "name": "SourceUnit",
    "src": "37:2608:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xEf279953006d2246671d0931e4F0e6630F43614F",
      "transactionHash": "0x527e148ee3aceb119013d4903bde68aff86fc7ad2df4b8ea05f196ed4460635f"
    },
    "1623151914268": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0816060567951CEA7F15E077D7794c8e5BdC6f6f",
      "transactionHash": "0x5bd6dfe7f6ea3b28c7d30f1be8296250c329aab92acddcc77294a7aa78838682"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-06-08T11:44:39.190Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Populous*",
    "details": "Smart contract containing logic to measure users' relative power to propose and vote. User Power = User Power from Populous Token + User Power from stkPopulous Token. User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated] Two wrapper functions linked to Populous Tokens's GovernancePowerDelegationERC20.sol implementation - getPropositionPowerAt: fetching a user Proposition Power at a specified block - getVotingPowerAt: fetching a user Voting Power at a specified block",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor, register tokens used for Voting and Proposition Powers.",
        "params": {
          "pxt_": "The address of the Populous PXT Token contract.*"
        }
      },
      "getPropositionPower(address)": {
        "details": "Returns the Proposition Power of a user.",
        "params": {
          "user": "Address of the user."
        },
        "returns": {
          "_0": "Power number*"
        }
      },
      "getTotalPropositionSupply()": {
        "details": "Returns the total supply of Proposition Tokens Available for Governance",
        "returns": {
          "_0": "total supply at blockNumber*"
        }
      },
      "getVotingPower(address)": {
        "details": "Returns the Vote Power of a user.",
        "params": {
          "user": "Address of the user."
        },
        "returns": {
          "_0": "Vote number*"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Governance Strategy contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}